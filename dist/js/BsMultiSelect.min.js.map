{"version":3,"sources":["../../js/src/FilterPanel.js","../../js/src/OptionsPanel.js","../../js/src/removeElement.js","../../js/src/SelectionsPanel.js","../../js/src/MultiSelectInputAspect.js","../../js/src/MultiSelect.js","../../js/src/EventSkipper.js","../../js/src/Tools.js","../../js/src/Bs4StylingMethodCss.js","../../js/src/Bs4StylingMethodJs.js","../../js/src/Bs4Styling.js","../../js/src/Bs4SelectedItemContent.js","../../js/src/Bs4DropDownItemContent.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js","../../js/src/OptionsAdapters.js","../../js/src/LabelAdapter.js"],"names":["FilterPanel","createElement","insertIntoDom","onFocusIn","onFocusOut","onKeyDownArrowUp","onKeyDownArrowDown","onTabForEmpty","onBackspace","onEnterOrTabToCompleate","onKeyDownEsc","onKeyUpEsc","onInput","s","inputElement","setAttribute","style","width","border","padding","outline","backgroundColor","onfilterInputKeyDown","event","indexOf","which","value","preventDefault","onFilterInputKeyUp","onFilterInputInput","filterInputValue","length","setEmptyLength","addEventListener","input","isEmpty","setEmpty","setFocus","focus","isEventTarget","target","dispose","removeEventListener","OptionsPanel","onShow","onHide","eventSkipper","dropDownItemContent","styling","getVisibleMultiSelectDataList","resetFilter","updateDropDownLocation","filterPanelSetFocus","dropDownMenu","display","listStyleType","hoveredMultiSelectData","hoveredMultiSelectDataIndex","candidateToHoveredMultiSelectData","hideDropDown","resetCandidateToHoveredMultiSelectData","showDropDown","setSkippable","hoverInInternal","index","HoverIn","dropDownMenuItemElement","resetDropDownMenuHover","HoverOut","processCandidateToHovered","visibleIndex","stopAndResetDropDownMenuHover","toggleHovered","toggle","keyDownArrow","down","visibleMultiSelectDataList","newIndex","i","visible","insertDropDownItem","MultiSelectData","createSelectedItemGen","triggerChange","isSelected","isOptionDisabled","onDropDownMenuItemElementMouseover","isSkippable","onDropDownMenuItemElementMouseleave","appendChild","content","option","setDropDownItemContentDisabled","disabledStyle","disable","createSelectedItem","DropDownItemContent","DisposeDropDownMenuItemElement","onSelected","excludedFromSearch","getIsVisble","removeElement","e","parentNode","removeChild","SelectionsPanel","init","selectedItemContent","isComponentDisabled","onRemove","onClick","processRemoveButtonClick","ulElement","flexWrap","filterInputItem","MultiSelectDataSelectedTail","selectedPanelClick","iterateAll","isDisabled","selectedPrev","selectedPanel","insert","selectedItemElement","this","insertBefore","selectedNext","removeSelectedItem","selected","select","SelectedItemContent","removeSelectedTail","resetMultiSelectDataSelectedTail","enable","MultiSelectInputAspect","window","document","container","hideDropDownAndResetFilter","isDropDownMenuEmpty","Popper","containerMousedown","skipFocusout","documentMouseup","contains","popper","placement","modifiers","preventOverflow","enabled","hide","flip","filterInputItemOffsetLeft","preventDefaultClickEvent","alignToFilterInputItemLocation","force","offsetLeft","update","destroy","alignAndShowDropDown","processUncheck","uncheckOption","setTimeout","onDropDownShow","onDropDownHide","getSkipFocusout","resetSkipFocusout","filterMultiSelectData","isFiltered","MultiSelect","optionsAdapter","labelAdapter","createStylingComposite","configuration","onDispose","TypeError","visibleCount","selectionsPanel","optionsPanel","stylingComposite","resetMultiSelectDataList","MultiSelectDataList","filteredMultiSelectDataList","filterPanel","processEmptyInput","multiSelectData","isHidden","resetFilterDropDownMenu","GetContainer","Update","UpdateIsValid","getIsValid","getIsInvalid","UpdateSize","UpdateDisabled","UpdateOption","_this","searchText","text","toLowerCase","trim","p1","p2","p3","removeDropDownMenuItemElement","UpdateData","updateDataImpl","createDropDownItems","options","_this2","getOptions","disabled","hidden","remove","push","aspect","readyState","createDropDownItemsHandler","Dispose","getDisabled","Disable","Enable","resetLength","list","j","collectFilterDropDownMenu","fullMatchMultiSelectData","name","_this3","lazyfilterItemInputElementAtach","filterItemInputElement","filterItemElement","FocusIn","FocusOut","stopPropagation","doUncheck","Init","afterContainerFilled","subscribeToReset","ExtendIfUndefined","destination","source","property","undefined","bs4StylingMethodCssDefaults","selectedPanelFocusClass","selectedPanelDisabledClass","dropDownItemDisabledClass","defSelectedPanelStyle","margin-bottom","height","bs4StylingMethodJsDefaults","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","bs4StylingDefaults","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4StylingMethodCssdefaults","selectedItemContentDisabledClass","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","selectedItemContentDisabledOpacity","bs4SelectedItemContentDefaults","dropdDownLabelDisabledColor","$","bs4DropDownItemContentDefaults","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","each","$e","instance","data","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","settings","extend","preBuildConfiguration","trigger","$element","eventName","firstChild","createInputId","id","label","$formGroup","closest","$label","find","get","getAttribute","$form","form","selectElement","resetHanlder","getElementsByTagName","nextSibling","classList","handler","OptionsAdapterElement","backupedFor","stylingMethod","filterInput","newId","useCss","adapter","$selectedPanel","removeClass","addClass","OnInit","composite","css","$filterInput","hasClass","$container","$dropDownMenu","$filterInputItem","isValid","isInvalid","dropDownItem","selectedItemContentStylingMethod","disableSelectedItemContent","$content","createSelectedItemContent","$selectedItem","$button","selectedItem","optionItem","appendTo","on","jqEvent","originalEvent","prop","unbind","bs4DropDownItemContent","dropDownItemContentStylingMethod","$checkBox","$checkBoxLabel","isDisbaled","$dropDownItem","$dropDownItemContent","multiSelect","postBuildConfiguration"],"mappings":";;;;;qPAEA,SAASA,EACDC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGJ,IAjB4BC,EAiBxBC,EAAeb,EAAc,SAEjCa,EAAaC,aAAa,OAAO,UACjCD,EAAaC,aAAa,eAAe,QApBbF,EAsBLC,EAAaE,OAtBFC,MAAM,MAAOJ,EAAEK,OAAO,IAAKL,EAAEM,QAAQ,IAAKN,EAAEO,QAAQ,OAAQP,EAAEQ,gBAAgB,cAwBhHnB,EAAcY,GAEa,SAAvBQ,EAAwBC,IACmB,GAAvC,CAAC,GAAI,GAAI,GAAI,IAAIC,QAAQD,EAAME,QACZ,GAAfF,EAAME,OAAcX,EAAaY,QACrCH,EAAMI,iBAMS,IAAfJ,EAAME,MACNf,GAAaI,EAAaY,MAAkBH,GAExB,IAAfA,EAAME,MACXpB,IAEoB,IAAfkB,EAAME,MACXnB,IAEoB,GAAfiB,EAAME,MACNX,EAAaY,OACbnB,IAGe,GAAfgB,EAAME,QAINX,EAAaY,OAEdlB,KAOa,SAArBoB,EAAsBL,GACH,IAAfA,EAAME,OAA8B,GAAfF,EAAME,MAC3BhB,IAEoB,IAAfc,EAAME,OACXd,IAQiB,SAArBkB,IACA,IAAIC,EAAmBhB,EAAaY,MACpCd,EACIkB,EACA,WAAA,OAAKhB,EAAaE,MAAMC,MAAgC,IAAxBa,EAAiBC,OAAa,EAAI,OAU1E,SAASC,IACLlB,EAAaE,MAAMC,MAAM,MAQ7B,OAfAH,EAAamB,iBAAiB,UAAW9B,GACzCW,EAAamB,iBAAiB,WAAY7B,GAC1CU,EAAamB,iBAAiB,UAAWX,GACzCR,EAAamB,iBAAiB,QAASL,GACvCd,EAAamB,iBAAiB,QAASJ,GAWhC,CACHK,MAAMpB,EACNqB,QAFG,WAGC,OAAOrB,EAAaY,OAExBU,SAVJ,WACItB,EAAaY,MAAO,GACpBM,KASAA,eAAAA,EACAK,SAPG,WAQCvB,EAAawB,SAEjBC,cAVG,SAUWhB,GACV,OAAOA,EAAMiB,QAAU1B,GAE3B2B,QAbG,WAcC3B,EAAa4B,oBAAoB,UAAWvC,GAC5CW,EAAa4B,oBAAoB,WAAYtC,GAC7CU,EAAa4B,oBAAoB,UAAWpB,GAC5CR,EAAa4B,oBAAoB,QAASd,GAC1Cd,EAAa4B,oBAAoB,QAASb,KClHtD,SAASc,EAAa1C,EAAe2C,EAAQC,EAAQC,EAAcC,EAAqBC,EAChFC,EAA+BC,EAAaC,EAAwBC,GAExE,IAAIC,EAAepD,EAAc,MACjCoD,EAAarC,MAAMsC,QAAQ,OAGHD,EAAarC,MATFuC,cAAc,OAUjD,IAAIC,EAAuB,KACvBC,EAA8B,KAC9BC,EAAkC,KAEtC,SAASC,IACDD,GACAE,IAE8B,QAA9BP,EAAarC,MAAMsC,UAEnBD,EAAarC,MAAMsC,QAAU,OAC7BT,KAIR,SAASgB,IAC6B,SAA9BR,EAAarC,MAAMsC,UAEnBR,EAAagB,eACbT,EAAarC,MAAMsC,QAAU,QAC7BV,KAIc,SAAlBmB,EAA2BC,GAC3BP,EAA8BO,EAC9BR,EAAyBP,IAAgCe,GACzDhB,EAAQiB,QAAQT,EAAuBU,yBAG3C,SAASC,IACDX,IACAR,EAAQoB,SAASZ,EAAuBU,yBAExCT,EADAD,EAAyB,MAKjC,IAAII,EAAyC,WACzCF,EAAkCQ,wBAAwBxB,oBAAoB,YAAa2B,GAC3FX,EAAkCQ,wBAAwBxB,oBAAoB,YAAa2B,GAC3FX,EAAoC,MAGpCW,EAA4B,WACxBb,GAA0BE,IAE1BS,IACAJ,EAAgBL,EAAkCY,eAEnDZ,GACCE,KAoKR,MAjBW,CACPP,aAAAA,EACAU,gBAAAA,EACAQ,8BAHO,WAIHzB,EAAagB,eACbK,KAEJN,aAAAA,EACAF,aAAAA,EACAa,cAzJJ,WACQhB,IACAA,EAAuBiB,SACvBN,IACAR,IACAT,MAqJJwB,aAjJJ,SAAsBC,GAClB,IAAIC,EAA6B3B,IAC7BlB,EAAS6C,EAA2B7C,OACpC8C,EAAS,KACb,GAAa,EAAT9C,EACA,GAAI4C,EAEA,IADA,IAAIG,EAAiC,MAA7BrB,EAAkC,EAAEA,EAA4B,EAClEqB,EAAE/C,GAAO,CACX,GAAI6C,EAA2BE,GAAGC,QAAQ,CACtCF,EAASC,EACT,MAEJA,SAIJ,IADA,IAAIA,EAAiC,MAA7BrB,EAAkC1B,EAAO,EAAE0B,EAA4B,EACtE,GAAHqB,GAAK,CACP,GAAIF,EAA2BE,GAAGC,QAAQ,CACtCF,EAASC,EACT,MAEJA,IAKE,MAAVD,IAEIrB,GACAR,EAAQoB,SAASZ,EAAuBU,yBAC5Cf,IACAU,IACAE,EAAgBc,KAkHpBG,mBAtFJ,SAA4BC,EAAiBC,EAAuBC,EAAeC,EAAYC,GAQlD,SAArCC,IAAqC,OAhCYL,EAiCjDA,EAjCkEf,EAkClEA,OAhCApB,EAAayC,eAEV7B,GACCE,IAEJF,EAAoCuB,EACpCf,EAAwBjC,iBAAiB,YAAaoC,GACtDH,EAAwBjC,iBAAiB,YAAaoC,IAIlDb,GAAwByB,IAKxBd,IACAJ,EAAgBkB,EAAgBX,gBAnBI,IAASW,EAAiBf,EAyBtE,IAAIA,EAA0BjE,EAAc,MAgBF,SAAtCuF,IACK1C,EAAayC,eACdpB,IANRD,EAAwBjC,iBAAiB,YAAaqD,GAUtDpB,EAAwBjC,iBAAiB,aAAcuD,GAEvDnC,EAAaoC,YAAYvB,GAEzB,IAAIwB,EAAU3C,EAAoBmB,EAAyBe,EAAgBU,QAStC,SAAjCC,EAAkCF,EAAUN,GAC5CM,EAAQG,eAAc,GAEtBH,EAAQI,SAASV,GAYI,SAArBW,IAAqB,OAAMb,EAC3BD,EACAI,EACA,WAAA,OAAMO,EAA+BF,GAAS,KA1BlDT,EAAgBf,wBAA0BA,EAC1Ce,EAAgBe,oBAAsBN,EAEtCT,EAAgBgB,+BAAiC,WAC7C/B,EAAwBxB,oBAAoB,YAAc4C,GAC1DpB,EAAwBxB,oBAAoB,aAAc8C,IAS1DH,GACAO,EAA+BF,EAASN,GAE5CM,EAAQQ,WAAY,WAChBjB,EAAgBR,SAChBrB,MAUAgC,EAEAW,KAIAd,EAAgBkB,mBAAsBd,EAElCJ,EAAgBR,OADhBY,EACyB,aAEA,WACrBU,IACAZ,OAkBZiB,YAZO,WAaH,MAAqC,QAA9B/C,EAAarC,MAAMsC,UC7NtC,SAAS+C,EAAcC,GAAIA,EAAEC,WAAWC,YAAYF,GCIpD,SAASG,EACLxG,EACAyG,EACAC,EACAC,EACAzB,EACA0B,EACAC,EACAC,GAGA,IAb8BlG,EAa1BmG,EAAY/G,EAAc,OAbAY,EAcLmG,EAAUhG,OAdCsC,QAAQ,OAAQzC,EAAEoG,SAAS,OAAQpG,EAAE0C,cAAc,OAevF,IAAI2D,EAAkBjH,EAAc,MACpC+G,EAAUvB,YAAYyB,GAEtBR,EAAKQ,GACL,IAAIC,EAA8B,KAoGT,SAArBC,EAAqB7F,GACrBuF,EAAQvF,GAGZ,SAAS8F,EAAWC,GAEhB,IADA,IAAIxC,EAAIqC,EACFrC,GACFA,EAAEgB,QAAQwB,GACVxC,EAAIA,EAAEyC,aA+Bd,MA3BW,CACPC,cAAeR,EACfE,gBAAAA,EACAO,OAHO,SAGAC,GACHC,KAAKH,cAAcI,aAAaF,EAAqBR,IAEzDnB,mBA/FJ,SAASA,EAAmBd,EAAiBI,EAAkBO,GAC3D,IAAI8B,EAAsBzH,EAAc,MACxCgF,EAAgByC,oBAAsBA,EAClCP,KACAA,EAA4BU,aAAe5C,GAC3BsC,aAAeJ,GAIV,SAArBW,IAxBR,IAAgC7C,EAyBxBA,EAAgBU,OAAOoC,UAAW,GAClC9C,EAAgBkB,mBAAqBd,IAGjCO,EAA+BX,EAAgBe,qBAAqB,GACpEf,EAAgBR,OAAS,cAIzBQ,EAAgBR,OAAS,WACrBsB,EAAmBd,EAAiBI,EAAkBO,GACtDT,KAGRF,EAAgBe,oBAAoBgC,QAAO,GAC3C3B,EAAcqB,GACdzC,EAAgBgD,oBAAoBxF,UACpCwC,EAAgBgD,oBAAoB,KACpChD,EAAgByC,oBAAoB,MA3CZzC,EA6CDA,GA5CPsC,eACftC,EAAgBsC,aAAcM,aAAe5C,EAAgB4C,cAE9D5C,EAAgB4C,eAChB5C,EAAgB4C,aAAcN,aAAetC,EAAgBsC,cAE7DJ,GAA+BlC,IAC/BkC,EAA8BlC,EAAgBsC,cAElDtC,EAAgB4C,aAAa,KAC7B5C,EAAgBsC,aAAa,KAmCzBpC,KAxBJgC,EAA8BlC,GAiDdgD,oBAAsBtB,EAClCe,EACAzC,EAAgBU,OANY,SAACpE,GAC7BwF,EAAyB,WAAA,OALzBe,SACAjB,KAIqEtF,KAQ3D,SAAVuE,EAAWwB,GAAD,OACVrC,EAAgBgD,oBAAoBnC,QAAQwB,GAChDxB,EAAQc,GAER3B,EAAgBU,OAAOoC,UAAW,EAClC9C,EAAgBkB,oBAAqB,EAErClB,EAAgBa,QAAUA,EAC1BkB,EAAUY,aAAaF,EAAqBR,GAG5CjC,EAAgBR,OAAS,WAAA,OAAMqD,KAC/B7C,EAAgBe,oBAAoBgC,QAAO,IAuB3CE,mBArHJ,WACQf,GACAA,EAA4B1C,UAoHhC0D,iCARO,WASHhB,EAA8B,MAElCiB,OAXO,WAaHf,IADAH,EAAgBlG,MAAMsC,QAAU,cAEhC0D,EAAU/E,iBAAiB,QAASmF,IAGxCtB,QAjBO,WAkBHoB,EAAgBlG,MAAMsC,QAAU,OAChC+D,GAAW,GACXL,EAAUtE,oBAAoB,QAAS0E,IAG3C3E,QAvBO,WAwBHuE,EAAUtE,oBAAoB,QAAS0E,KC7JnD,SAASiB,EACLC,EACAC,EACAC,EACAhB,EACAN,EACA7D,EACAQ,EACA4E,EACAC,EACAC,GAGAH,EAAU/C,YAAY+B,GACtBgB,EAAU/C,YAAYpC,GAKG,SAArBuF,IACCC,GAAe,EAGE,SAAlBC,EAA2BvH,GAErBiH,IAAcjH,EAAMiB,QAAUgG,EAAUO,SAASxH,EAAMiB,SACzDiG,IAVR,IAAII,GAAe,EAcfG,EAAS,IAAIL,EACbzB,EACA7D,EACA,CACI4F,UAAW,eACXC,UAAW,CACPC,gBAAiB,CAACC,SAAQ,GAC1BC,KAAM,CAACD,SAAQ,GACfE,KAAM,CAACF,SAAQ,MAKvBG,EAA4B,KAC5BC,EAA2B,KAa/B,SAASC,EAA+BC,GACpC,IAAIC,EAAazC,EAAgByC,YAC7BD,GAASH,GAA6BI,IACtCX,EAAOY,SACPL,EAA4BI,GAIpC,MAAO,CACHlH,QADG,WAECuG,EAAOa,WAEXJ,+BAAAA,EACAK,qBAxBJ,SAA8BvI,GACtBiI,GAA4BjI,IACvBmH,MAEDe,GAA+B,GAC/B5F,MAGR2F,EAAyB,MAiBzBO,eANG,SAMYC,EAAezI,GAI1B+G,EAAO2B,WAAW,WAAA,OAAID,KAAgB,GACtCR,EAA2BjI,GAE/B2I,eAbG,WAiBC1B,EAAUvG,iBAAiB,YAAa2G,GACxCL,EAAStG,iBAAiB,UAAW6G,IAGzCqB,eArBG,WAsBC3B,EAAU9F,oBAAoB,YAAakG,GAC3CL,EAAS7F,oBAAoB,UAAWoG,IAE5CsB,gBAAkB,WACb,OAAOvB,GAEZwB,kBAAoB,WACfxB,GAAa,ICtF1B,SAASyB,EAAsBrF,EAAiBsF,EAAYjG,GACxDW,EAAgBF,QAAUwF,EAC1BtF,EAAgBX,aAAeA,EAC/BW,EAAgBf,wBAAwBlD,MAAMsC,QAAUiH,EAAa,QAAS,qGAoC5EC,aACF,SAAAA,EAAYC,EAAgBzH,EACxB2D,EAAqB5D,EACrB2H,EAAcC,EACdC,EAAeC,EAAWvC,GAC1B,GAAsB,oBAAXK,EACP,MAAM,IAAImC,UAAU,yEAIxBnD,KAAK8C,eAAiBA,EACtB9C,KAAK3E,QAAUA,EACf2E,KAAKhB,oBAAsBA,EAC3BgB,KAAK5E,oBAAsBA,EAC3B4E,KAAK+C,aAAeA,EACpB/C,KAAKgD,uBAAyBA,EAC9BhD,KAAKiD,cAAgBA,EACrBjD,KAAKkD,UAAYA,EACjBlD,KAAKW,OAASA,EAEdX,KAAKoD,aAAa,GAElBpD,KAAKqD,gBAAkB,KACvBrD,KAAKT,gBAAkB,KACvBS,KAAKsD,aAAe,KAEpBtD,KAAKuD,iBAAmB,KAExBvD,KAAKf,oBAAsB,KAE3Be,KAAKwD,sDAGTA,yBAAA,WACIxD,KAAKyD,oBAAsB,GAC3BzD,KAAK0D,4BAA8B,QAIvCpI,8BAAA,WACI,OAAI0E,KAAK0D,4BACE1D,KAAK0D,4BAEL1D,KAAKyD,uBAGpBlI,YAAA,WACSyE,KAAK2D,YAAYnJ,YAClBwF,KAAK2D,YAAYlJ,WACjBuF,KAAK4D,wBAIbA,kBAAA,WACI5D,KAAK2D,YAAYtJ,iBAvFzB,SAAiCoJ,GAC7B,IAAI,IAAItG,EAAE,EAAGA,EAAEsG,EAAoBrJ,OAAQ+C,IAC3C,CACI,IAAI0G,EAAkBJ,EAAoBtG,GACpC0G,EAAgBC,UAElBnB,EAAsBkB,GAAiB,EAAM1G,IAkFjD4G,CAAwB/D,KAAKyD,qBAC7BzD,KAAK0D,4BAA8B,QAIvCM,aAAA,WACI,OAAOhE,KAAK8C,eAAejC,aAG/BoD,OAAA,WACIjE,KAAK3E,QAAQ6I,cAAclE,KAAKuD,iBAAkBvD,KAAK8C,eAAeqB,aAAcnE,KAAK8C,eAAesB,gBACxGpE,KAAKqE,aACLrE,KAAKsE,oBAGTC,aAAA,SAAalI,GAAM,IAAAmI,EAAAxE,KACX6D,EAAkB7D,KAAKyD,oBAAoBpH,GAC3C2B,EAAS6F,EAAgB7F,OAC7B6F,EAAgBY,WAAazG,EAAO0G,KAAKC,cAAcC,OACnDf,EAAgBC,UAAY9F,EAAO8F,UAEnCD,EAAgBC,SAAS9F,EAAO8F,SAC5BD,EAAgBC,SAChB9D,KAAKsD,aAAajG,mBAAmBwG,EACjC,SAACgB,EAAGC,EAAGC,GAAP,OAAYP,EAAKnB,gBAAgBjF,mBAAmByG,EAAGC,EAAGC,IAC1D,WAAA,OAAIP,EAAK1B,eAAetF,iBACxBQ,EAAOP,WAAYO,EAAO2B,YAE9BkE,EAAgBmB,kCAIhBnB,EAAgBpG,YAAcO,EAAOP,aAErCoG,EAAgBpG,WAAWO,EAAOP,WAC9BoG,EAAgBpG,YASpBoG,EAAgBlE,YAAc3B,EAAO2B,aAErCkE,EAAgBlE,WAAW3B,EAAO2B,WAC9BkE,EAAgBlE,gBAahCsF,WAAA,WAEIjF,KAAKsD,aAAatH,eAClBgE,KAAKzE,cAEL,IAAI,IAAI4B,EAAE,EAAGA,EAAE6C,KAAKyD,oBAAoBrJ,OAAQ+C,IAChD,CACI,IAAI0G,EAAkB7D,KAAKyD,oBAAoBtG,GAC3C0G,EAAgBtH,yBAChBmC,EAAcmF,EAAgBtH,yBAC9BsH,EAAgB9D,qBAChBrB,EAAcmF,EAAgB9D,qBAEtCC,KAAKwD,2BACLxD,KAAKqD,gBAAgB7C,mCAGrBR,KAAKkF,oBAGTA,eAAA,WAC8B,SAAtBC,IAGA,IAFA,IAAIC,EAAUC,EAAKvC,eAAewC,aAE1BnI,EAAI,EAAGA,EAAEiI,EAAQhL,OAAQ+C,IAAK,CAClC,IAAIa,EAASoH,EAAQjI,GAEjBwC,EAAa3B,EAAOuH,SACpBzB,EAAa9F,EAAOwH,OACpB/H,EAAaO,EAAOoC,SAEpB9C,EAAkB,CAClBmH,WAAYzG,EAAO0G,KAAKC,cAAcC,OACtCpG,mBAAoBf,GAAckC,GAAcmE,EAChD9F,OAAQA,EACR8F,SAAUA,EACVvH,wBAAyB,KACzBnB,oBAAqB,KACrBwE,aAAc,KACdM,aAAc,KACd9C,SAAS,EACTN,OAAQ,KACRiD,oBAAqB,KACrB0F,OAAQ,KACRtH,QAAS,KACT6G,8BAA+B,MAGnCK,EAAK5B,oBAAoBiC,KAAKpI,GACzBwG,IACDxG,EAAgBF,SAAU,EAC1BE,EAAgBX,aAAaQ,EAC7BkI,EAAK/B,aAAajG,mBAAmBC,EACjC,SAACuH,EAAGC,EAAGC,GAAP,OAAYM,EAAKhC,gBAAgBjF,mBAAmByG,EAAGC,EAAGC,IAC1D,WAAA,OAAIM,EAAKvC,eAAetF,iBAAiBC,EAAYkC,IAGjE0F,EAAKM,OAAO7D,gCAA+B,GArCnC,IAAAuD,EAAArF,KAyCZ,GAA2B,WAAvBY,SAASgF,WACTT,QACG,CAKHvE,SAAStG,iBAAiB,mBAJO,SAA7BuL,IACAV,IACAvE,SAAS7F,oBAAoB,mBAAoB8K,SAM7DC,QAAA,WACQ9F,KAAKkD,WACLlD,KAAKkD,YAITlD,KAAKsD,aAAatH,eAElBgE,KAAKqD,gBAAgBvI,UACrBkF,KAAK2D,YAAY7I,UAEjBkF,KAAK+C,aAAajI,UAElBkF,KAAK2F,OAAO7K,UAERkF,KAAK8C,eAAehI,SACpBkF,KAAK8C,eAAehI,UAGxB,IAAI,IAAIqC,EAAE,EAAGA,EAAE6C,KAAKyD,oBAAoBrJ,OAAQ+C,IAChD,CACI,IAAI0G,EAAkB7D,KAAKyD,oBAAoBtG,GAC3C0G,EAAgBvF,gCAChBuF,EAAgBvF,iCAEhBuF,EAAgBvD,qBAChBuD,EAAgBvD,oBAAoBxF,UACpC+I,EAAgBxF,qBAChBwF,EAAgBxF,oBAAoBvD,cAIhDuJ,WAAA,WACQrE,KAAK3E,QAAQgJ,YACbrE,KAAK3E,QAAQgJ,WAAWrE,KAAKuD,qBAGrCe,eAAA,WACI,IAAIrF,EAAsBe,KAAK8C,eAAeiD,cAC1C/F,KAAKf,sBAAsBA,IACvBA,GACAe,KAAKqD,gBAAgBlF,UACrB6B,KAAK3E,QAAQ2K,QAAQhG,KAAKuD,oBAE1BvD,KAAKqD,gBAAgB5C,SACrBT,KAAK3E,QAAQ4K,OAAOjG,KAAKuD,mBAE7BvD,KAAKf,oBAAoBA,MAIjC1E,MAAA,SAAMJ,EAAkB+L,GACpB,IAAIxB,EAAOvK,EAAiByK,OAAOD,cAC/BnK,GAAQ,EACZ,GAAY,IAARkK,EACAlK,GAAQ,OAKR,GADAwF,KAAK0D,4BA5QjB,SAAmCD,EAAqBiB,GAGpD,IAFA,IAAIyB,EAAO,GACPC,EAAI,EACAjJ,EAAE,EAAGA,EAAEsG,EAAoBrJ,OAAQ+C,IAC3C,CACI,IAAI0G,EAAkBJ,EAAoBtG,GACpC0G,EAAgBC,WAEbD,EAAgBrF,oBAAsBqF,EAAgBY,WAAW5K,QAAQ6K,GAAM,EAEhF/B,EAAsBkB,GAAiB,IAIvClB,EAAsBkB,GAAiB,EAAMuC,KAC7CD,EAAKT,KAAM7B,KAIvB,OAAOsC,EAyPoCE,CAA0BrG,KAAKyD,oBAAqBiB,GACxC,GAA3C1E,KAAK0D,4BAA4BtJ,OACrC,CACI,IAAIkM,EAA4BtG,KAAK0D,4BAA4B,GAC7D4C,EAAyB7B,YAAcC,IAEvC4B,EAAyBxJ,SACzBkD,KAAK2D,YAAYlJ,WACjBD,GAAQ,GAIhBA,EACAwF,KAAK4D,oBAELsC,IAGJlG,KAAKsD,aAAa1G,gCACiC,GAA/CoD,KAAK1E,gCAAgClB,QACrC4F,KAAKsD,aAAalH,gBAAgB,GAGY,EAA9C4D,KAAK1E,gCAAgClB,QACrC4F,KAAK2F,OAAO7D,gCAA+B,GAC3C9B,KAAKsD,aAAapH,gBAElB8D,KAAKsD,aAAatH,kBAI1B+C,KAAA,WAEwB,SAAhBzG,EAAiBiO,GAAD,OAAU3F,EAAStI,cAAciO,GAFlD,ICpU0B5F,EAC7B/C,EDmUG4I,EAAAxG,KACCY,EAAWZ,KAAKW,OAAOC,SAEvBC,EAAYb,KAAK8C,eAAejC,UAEhC4F,EAAgC,KAEpCzG,KAAK2D,YAActL,EACfC,EACA,SAACoO,GACGD,EAAkC,SAACE,GAC/BA,EAAkB7I,YAAY4I,GAC9BF,EAAKzD,aAAahE,KAAK2H,KAG/B,WAAA,OAAMF,EAAKnL,QAAQuL,QAAQJ,EAAKjD,mBAChC,WACSiD,EAAKb,OAAOlD,oBAEb+D,EAAKjL,cACLiL,EAAKnL,QAAQwL,SAASL,EAAKjD,mBAE/BiD,EAAKb,OAAOjD,qBAEhB,WAAA,OAAM8D,EAAKlD,aAAavG,cAAa,IACrC,WAAA,OAAMyJ,EAAKlD,aAAavG,cAAa,IACrC,WAAA,OAAMyJ,EAAKlD,aAAatH,gBACxB,WACIwK,EAAKnD,gBAAgB9C,qBACrBiG,EAAKb,OAAO7D,gCAA+B,IAE/C,WACQ0E,EAAKlD,aAAa7E,eAClB+H,EAAKlD,aAAazG,iBAC1B,SAACrC,EAASZ,GACDY,IAAWgM,EAAKlD,aAAa7E,eAC9B7E,EAAMkN,mBAEd,WACIN,EAAKlD,aAAatH,eAClBwK,EAAKjL,eAET,SAACpB,EAAkB+L,GAAnB,OAAmCM,EAAKjM,MAAMJ,EAAkB+L,KAGpElG,KAAKqD,gBAAmBvE,EACpBxG,EACA,SAACqO,GACGF,EAAgCE,IAEpC3G,KAAKhB,oBACLgB,KAAKf,oBACL,WAAA,OAAMuH,EAAK1D,eAAetF,iBAC1B,WACIgJ,EAAKlD,aAAatH,eAClBwK,EAAKjL,eAET,SAAC3B,GACQ4M,EAAK7C,YAAY/I,cAAchB,IAC/B4M,EAAK7C,YAAYjJ,WACtB8L,EAAKb,OAAOxD,qBAAqBvI,IAErC,SAACmN,EAAWnN,GACR4M,EAAKb,OAAOvD,eAAe2E,EAAWnN,KAI9CoG,KAAKH,cAAgBG,KAAKqD,gBAAgBxD,cAC1CG,KAAKT,gBAAkBS,KAAKqD,gBAAgB9D,gBAE5CS,KAAKsD,aAAetI,EAChB1C,EACA,WAAA,OAAMkO,EAAKb,OAAOpD,kBAClB,WAAA,OAAMiE,EAAKb,OAAOnD,mBC7YO7B,ED8YZX,KAAKW,OC7YtB/C,GAAc,EACX,CACHA,YADG,WAEC,OAAOA,GAEXzB,aAJG,WAKCyB,GAAc,EACd+C,EAAO2B,WACH,WACI1E,GAAc,GACf,MDoYPoC,KAAK5E,oBACL4E,KAAK3E,QACL,WAAA,OAAMmL,EAAKlL,iCACX,WAAA,OAAMkL,EAAKjL,eACX,WAAA,OAAMiL,EAAKb,OAAO7D,gCAA+B,IACjD,WAAA,OAAM0E,EAAK7C,YAAYjJ,aAG3BsF,KAAK2F,OAAUjF,EACXV,KAAKW,OACLC,EACAC,EACAb,KAAKqD,gBAAgBxD,cACrBG,KAAKqD,gBAAgB9D,gBACrBS,KAAKsD,aAAa5H,aAClB,WAAA,OAAM8K,EAAKlD,aAAapH,gBACxB,WACIsK,EAAKlD,aAAatH,eAClBwK,EAAKjL,eAET,WAAA,OAAmD,GAA7CiL,EAAKlL,gCAAgClB,QAC3C4G,GAGJhB,KAAKuD,iBAAmBvD,KAAKgD,uBAAuBnC,EAChDb,KAAKqD,gBAAgBxD,cACrBG,KAAKqD,gBAAgB9D,gBACrBS,KAAK2D,YAAYpJ,MACjByF,KAAKsD,aAAa5H,cAEtBsE,KAAK3E,QAAQ2L,KAAKhH,KAAKuD,kBAEnBvD,KAAK8C,eAAemE,sBACpBjH,KAAK8C,eAAemE,uBAExBjH,KAAK3E,QAAQ6I,cAAclE,KAAKuD,iBAAkBvD,KAAK8C,eAAeqB,aAAcnE,KAAK8C,eAAesB,gBAExGpE,KAAKqE,aACLrE,KAAKsE,iBAELtE,KAAKkF,iBAEDlF,KAAK8C,eAAeoE,kBACpBlH,KAAK8C,eAAeoE,iBAAiB,WAAA,OAAKV,EAAK7F,OAAO2B,WAAY,WAAA,OAAIkE,EAAKvB,uBE1bhF,SAASkC,EAAkBC,EAAaC,GAC3C,IAAK,IAAIC,KAAYD,OACaE,IAA1BH,EAAYE,KACZF,EAAYE,GAAYD,EAAOC,ICD3C,IAAME,EAA8B,CAChCC,wBAA0B,QAC1BC,2BAA4B,WAC5BC,0BAA2B,YCH/B,IAAMC,EAAwB,CAACC,gBAAiB,IAAKC,OAAU,QAEzDC,EAA6B,CAC/BC,0BAA2B,sBAC3BC,yBAA2B,uBAC3BC,yBAA2B,wBAC3BC,qCAAsC,UACtCC,8BAA+B,UAC/BC,4BAA6B,uCAC7BC,iCAAkC,uCAClCC,mCAAoC,uCACpCC,iBAAkB,WCVtB,IAAMC,EAAqB,CACvBC,eAAgB,8BAChBC,kBAAmB,gBACnBC,kBAAoB,OACpBC,uBAAwB,wBACxBC,mBAAoB,eACpBC,kBAAmB,QACnBC,8BAA+B,QAC/BC,qBAAsB,GACtBC,iBAAkB,ICVtB,IAAMC,EAA8B,CAChCC,iCAAkC,YAatC,IAAMC,EAAuB,CAACC,eAAgB,MAAOC,cAAe,SAC9DC,EAAmC,CAACC,YAAY,QAASF,cAAe,QACxExB,GAA6B,CAC/B2B,mCAAoC,OAkBxC,IAAMC,GAAiC,CACnCZ,kBAAmB,QACnBC,8BAA+B,SCrCnC,IAAMxB,GAA8B,CAChC4B,iCAAkC,YAetC,IAAMrB,GAA6B,CAC/B2B,mCAAoC,MACpCE,4BAA6B,WAYjC,ICjBKjJ,GAAQkJ,GDiBPC,GAAiC,CACnClB,kBAAoB,QClBnBjI,GA0HHA,OCzIF,SAA8BoJ,EAAYC,EAAcH,GACpD,IAAMI,EAAYF,EAAWG,OAAO,GAC9BC,EAAiBF,EAAUtF,cACjC,GAAIwF,GAAkBF,EAClB,MAAM,IAAI9G,UAAJ,gBAA8B4G,EAA9B,4CAEV,IAAMK,EAAmBD,EAAiBJ,EAAWM,MAAM,GACrDC,EAAyBT,EAAEU,GAAGH,GAC9BI,EAAO,iBAAoBT,EAEjC,SAASU,EAAarF,GAClB,OAAOpF,KAAK0K,KAAM,WACd,IAAIC,EAAKd,EAAE7J,MACP4K,EAAWD,EAAGE,KAAKL,GACnBM,EAAkC,iBAAZ1F,EAC1B,IAAKwF,EAAU,CACX,GAAIE,GAAgB,UAAUC,KAAK3F,GAC/B,OAIJwF,EAAWZ,EAAahK,KAFkB,iBAAZoF,EAAsBA,EAAQ,KAGxD,WACIuF,EAAGK,WAAWR,KAEtBG,EAAGE,KAAKL,EAASI,GAGrB,GAAIE,EAAc,CACd,IAAIG,EAAa7F,EACjB,GAAoC,oBAAzBwF,EAASK,GAChB,MAAM,IAAI9H,UAAJ,oBAAkC8H,EAAlC,KAEVL,EAASK,QAKrBpB,EAAEU,GAAGH,GAAoBK,EAGzBZ,EAAEU,GAAGR,GAAc,WACf,OAAOF,EAAE7J,MAAM6K,KAAKL,IAGxBX,EAAEU,GAAGH,GAAkBc,WAAa,WAEhC,OADArB,EAAEU,GAAGH,GAAoBE,EAClBG,GD/BPU,CAAqB,gBACjB,SAACC,EAASC,EAAUnI,GAChB,IAAID,EAAgB4G,GAAEyB,OAAO,GAAID,GAC7BpI,EAAcsI,uBACdtI,EAAcsI,sBAAsBH,EAASnI,GAEjD,IEtBYpC,EAAWuE,EAASW,EAAa5B,EAAYC,EAAcoH,EFsBnEC,EAAU5B,GAAEuB,GACZtI,EAAiB,KACrB,GAAIG,EAAcH,eACdA,EAAiBG,EAAcH,mBAEnC,CACI,IAAI0I,EAAU,SAASE,GACnBD,EAASD,QAAQE,IAErB,GAAIzI,EAAcmC,QE/BVvE,EFiCAuK,EEjCWhG,EFkCXnC,EAAcmC,QElCMW,EFmCpB9C,EAAc8C,YEnCmB5B,EFoCjClB,EAAckB,WEpC+BC,EFqC7CnB,EAAcmB,aErC6CoH,EFsC3DA,EANJ1I,EE/Bb,CACHjC,UAAAA,EACAyE,WAFG,WAEU,OAAOF,GACpBtK,QAHG,WAIC,KAAO+F,EAAU8K,YAAY9K,EAAUhC,YAAYgC,EAAU8K,aAEjEnO,cANG,WAOCgO,EAAQ,uBAEZzF,YATG,WAUC,QAAOA,GAAYA,KAEvB5B,WAZG,WAaC,QAAOA,GAAWA,KAEtBC,aAfG,WAgBC,QAAOA,GAAaA,MFsBHnB,EAAc2I,gBACf3I,EAAc2I,cAAc,WAAA,OAAO3I,EAAcyF,eAArB,qBAAwD0C,EAAQS,SAE9F,CACF,IAAK5I,EAAc6I,MACnB,CACI,IAAIC,EAAalC,GAAEuB,GAASY,QAAQ,eACpC,GAAyB,GAArBD,EAAW3R,OAAa,CACxB,IAAI6R,EAASF,EAAWG,KAAX,cAA8Bd,EAAQS,GAAtC,MACb,GAAkB,EAAdI,EAAO7R,OACX,CACI,IAAI0R,EAAQG,EAAOE,IAAI,GACXL,EAAMM,aAAa,QAClBhB,EAAQS,KACjB5I,EAAc6I,MAAQA,KAKtC,IAAIO,EAAQxC,GAAEuB,GAASY,QAAQ,QAC3BM,EAAO,KACS,GAAhBD,EAAMjS,SACNkS,EAAOD,EAAMF,IAAI,IAErBrJ,EEzCxB,SAA+ByJ,EAAef,EAASc,GACnDC,EAAclT,MAAMsC,QAAQ,OAC5B,IAAIkF,EAAYD,SAAStI,cAAc,OACnCkU,EAAe,KACnB,MAAO,CACH3L,UAAAA,EACAyE,WAFG,WAEU,OAAOiH,EAAcE,qBAAqB,WACvD3R,QAHG,WAIC+F,EAAUjC,WAAWC,YAAYgC,GAC7ByL,GAAQE,GACRF,EAAKvR,oBAAoB,QAASyR,IAE1CvF,qBARG,WASCsF,EAAc3N,WAAWqB,aAAaY,EAAW0L,EAAcG,cAEnElP,cAXG,WAYCgO,EAAQ,UACRA,EAAQ,uBAEZzF,YAfG,WAgBC,OAAOwG,EAAchH,UAEzBpB,WAlBG,WAmBC,OAAOoI,EAAcI,UAAUvL,SAAS,aAE5CgD,aArBG,WAsBC,OAAOmI,EAAcI,UAAUvL,SAAS,eAE5C8F,iBAxBG,SAwBc0F,GACbJ,EAAeI,EACXN,GACAA,EAAKhS,iBAAiB,QAAQkS,KFULK,CAAsBzB,EAASI,EAASc,GACpDrJ,EAAc2I,gBACf3I,EAAc2I,cAAgB,WAAA,OAAS3I,EAAcyF,eAAvB,qBAA2D0C,EAAQS,GAAIT,EAAQS,GAAGT,EAAQ7E,MAAM5B,cAAhG,SAI1C,IGrEMmH,EAAOF,EACrBkB,ENcYC,EAAe9J,EAAe4G,EDEtB5G,EDTCA,EK6DTF,GGrEE+I,EHqE0B7I,EAAc6I,MGrEjCF,EHqEwC3I,EAAc2I,cGpE3EkB,EAAc,KACX,CACH/N,KADG,SACEiO,GACD,GAAIlB,EAAO,CACPgB,EAAchB,EAAMM,aAAa,OACjC,IAAIa,EAAQrB,IACZoB,EAAY5T,aAAa,KAAM6T,GAC/BnB,EAAM1S,aAAa,MAAM6T,KAGjCnS,QATG,WAUIgS,GACChB,EAAM1S,aAAa,MAAM0T,MH0DrBI,EAASjK,EAAciK,OACvB7R,EAAU4H,EAAc5H,QAC5B,IAAK4H,EAAckK,QACnB,CACI,IAAIJ,EAAgB9J,EAAc8J,cAI1BA,EAHHA,IAEGG,GLrExB/F,EADyBlE,EKuEmCA,ELtE3BuE,GAE1B,CACHvB,OADG,SACImH,GACHA,EAAeC,YAAYpK,EAAcyE,6BAG7C1B,QALG,SAKKoH,GACJA,EAAeE,SAASrK,EAAcyE,6BAG1Cd,QATG,SASKwG,GACJA,EAAeE,SAASrK,EAAcwE,0BAG1CZ,SAbG,SAaMuG,GACLA,EAAeC,YAAYpK,EAAcwE,6BCPjDN,EADwBlE,EIgEmCA,EJ/D1B8E,GAE1B,CACHwF,OADG,SACIC,GACHA,EAAUJ,eAAeK,IAAI7F,GAC7B4F,EAAUE,aAAaD,IAAI,QAASxK,EAAcuF,mBAGtDnE,WANG,SAMQ+I,GACHA,EAAeO,SAAS,mBACxBP,EAAeK,IAAI,aAAcxK,EAAcgF,0BACxCmF,EAAeO,SAAS,mBAC/BP,EAAeK,IAAI,aAAcxK,EAAciF,0BAE/CkF,EAAeK,IAAI,aAAcxK,EAAc+E,4BAIvD/B,OAhBG,SAgBImH,GACHA,EAAeK,IAAI,mBAAoB,KAG3CzH,QApBG,SAoBKoH,GACJA,EAAeK,IAAI,mBAAoBxK,EAAckF,uCAGzDvB,QAxBG,SAwBKwG,GACAA,EAAeO,SAAS,YACxBP,EAAeK,IAAI,aAAcxK,EAAcqF,kCACxC8E,EAAeO,SAAS,cAC/BP,EAAeK,IAAI,aAAcxK,EAAcsF,oCAE/C6E,EACKK,IAAI,aAAcxK,EAAcoF,6BAChCoF,IAAI,eAAgBxK,EAAcmF,gCAI/CvB,SApCG,SAoCMuG,GACDA,EAAeK,IAAI,aAAc,IAAKA,IAAI,eAAgB,QC1CtDV,EGoEqBA,EHpESlD,EGoEqBA,GHnEnE1C,EAD+BlE,EGoEqBA,EHnEnBwF,GGmEjBpN,EHjET,CACH2L,KADG,SACEwG,GACDA,EAAUI,WAAWN,SAASrK,EAAcyF,gBAC5C8E,EAAUJ,eAAeE,SAASrK,EAAc6F,oBAChD0E,EAAUK,cAAcP,SAASrK,EAAc0F,mBAC/C6E,EAAUM,iBAAiBR,SAASrK,EAAcgG,sBAClDuE,EAAUE,aAAaJ,SAASrK,EAAciG,kBAC1C6D,EAAcQ,QACdR,EAAcQ,OAAOC,IAG7BtJ,cAXG,SAWWsJ,EAAWO,EAASC,GAC1BD,GACAP,EAAUJ,eAAeE,SAAS,YAElCU,GACAR,EAAUJ,eAAeE,SAAS,eAG1CjJ,WAnBG,SAmBQmJ,GACJT,EAAc1I,YACd0I,EAAc1I,WAAWmJ,EAAUJ,iBAG1CnH,OAxBG,SAwBIuH,GACHT,EAAc9G,OAAOuH,EAAUJ,iBAGnCpH,QA5BG,SA4BKwH,GACJT,EAAc/G,QAAQwH,EAAUJ,iBAGpCxG,QAhCG,SAgCK4G,GACJT,EAAcnG,QAAQ4G,EAAUJ,iBAGpCvG,SApCG,SAoCM2G,GACLT,EAAclG,SAAS2G,EAAUJ,iBAGrC9Q,QAxCG,SAwCK2R,GACJpE,EAAEoE,GAAcX,SAASrK,EAAc4F,yBAG3CpM,SA5CG,SA4CMwR,GACLpE,EAAEoE,GAAcZ,YAAYpK,EAAc4F,0BGuBtC,IF7CgBkE,EAAe9J,EAAe4G,EAnBf5G,EAhBCA,EEgF5BjE,EAAsBiE,EAAcjE,oBACxC,IAAKA,EAAoB,CACrB,IAAIkP,EAAmCjL,EAAciL,iCAI7CA,EAHHA,IAEGhB,GFpFxB/F,EAD4ClE,EEsFoDA,EFrF/DkG,GAE1B,CACHgF,2BADG,SACwBC,GACvBA,EAASd,SAASrK,EAAcmG,sCAYxCjC,EAD2ClE,EEwEoDA,EFvE9D8E,IAC1B,CACHoG,2BADG,SACwBC,GACvBA,EAASX,IAAI,UAAWxK,EAAcyG,qCAG1C2E,0BALG,SAKuBC,EAAeC,GACrCD,EAAcb,IAAIpE,GACdkF,GACAA,EAAQd,IAAIjE,OASIuD,EEuDiCmB,EFvDHrE,EEuDoDA,GFtD9G1C,EAD2ClE,EEuDoDA,EFtD9D0G,IEsDjB3K,EFpDT,SAAUwP,EAAcC,EAAYtO,GACnC,IAAImO,EAAgBzE,EAAE2E,GACtBF,EAAchB,SAASrK,EAAc8F,mBACrC,IAAIqF,EAAWvE,EAAC,WAAYnF,KAAK+J,EAAW/J,MAC5C0J,EAASM,SAASJ,GACdG,EAAWlJ,UACXwH,EAAcoB,2BAA2BC,GAC7C,IAAIG,EAAU1E,EAAE,2GAGX4D,IAAI,QAAS,QAAQiB,SAASJ,GAC9BhB,SAASrK,EAAc+F,+BACvB2F,GAAG,QACA,SAAAC,GAAO,OACHzO,EAAmByO,EAAQC,iBAKvC,OAFI9B,EAAcsB,2BACdtB,EAAcsB,0BAA0BC,EAAeC,GACpD,CACHpQ,QADG,SACKwB,GACJ4O,EAAQO,KAAK,WAAYnP,IAE7B7E,QAJG,WAKCyT,EAAQQ,YE+BZ,ID/DgBhC,EAAe9J,EAAe4G,EAbf5G,EAjBCA,EC6F5B7H,EAAsB6H,EAAc+L,uBACxC,IAAK5T,EAAoB,CACrB,IAAI6T,EAAmChM,EAAcgM,iCAEjDA,EADA/B,GD/FpB/F,EAD4ClE,ECiGgDA,EDhG3DuE,IAC1B,CACHtJ,cADG,SACWgR,EAAWC,EAAgBC,GACjCA,EACAF,EAAU5B,SAASrK,EAAc0E,2BAEjCuH,EAAU7B,YAAYpK,EAAc0E,+BAWhDR,EAD2ClE,ECkFgDA,EDjF1D8E,IAC3B,CACF7J,cADE,SACYgR,EAAWC,EAAgBC,GACrCD,EAAe1B,IAAI,QAAS2B,EAAWnM,EAAc2G,4BAA4B,OAS7DmD,ECsEiCkC,EDtEHpF,ECsEoDA,GDrE9G1C,EAD2ClE,ECsEoDA,EDrE9D6G,ICqEjB1O,EDpET,SAAS6S,EAAcjQ,GAC1B,IAAIqR,EAAgBxF,EAAEoE,GACtBoB,EAAc/B,SAASrK,EAAc2F,mBACrC,IAAI0G,EAAsBzF,EAAC,4LAI3ByF,EAAqBZ,SAAST,GAC9B,IAAIiB,EAAYI,EAAqBpD,KAArB,0BACZiD,EAAiBG,EAAqBpD,KAArB,SAuBrB,OAtBAiD,EAAezK,KAAK1G,EAAO0G,MAEjB,CACNrE,OADM,SACC5C,GAAayR,EAAUJ,KAAK,UAAWrR,IAE9CU,QAHM,SAGEwB,GAAauP,EAAUJ,KAAK,WAAYnP,IAChDzB,cAJM,SAIQkR,GAAarC,EAAc7O,cAAcgR,EAAWC,EAAgBC,IAElF7Q,WANM,SAMKzB,GACPoS,EAAUP,GAAG,SAAU7R,GACvBuS,EAAcV,GAAG,QAAS,SAAA/U,GAClBqU,IAAiBrU,EAAMiB,SAAUgP,EAAEzI,SAAS6M,EAAcrU,EAAMiB,SAChEiC,OAIZhC,QAdM,WAeFoU,EAAUH,SACVM,EAAcN,YC2Cd,IAUIQ,EAAc,IAAI1M,EAClBC,EACAzH,EACA2D,EACA5D,EACA2H,EAfyB,SAASlC,EAAWhB,EAAeN,EAAiByN,EAAatR,GAC1F,MAAO,CACHkS,WAAW/D,GAAEhJ,GACbuM,eAAevD,GAAEhK,GACjBiO,iBAAiBjE,GAAEtK,GACnBmO,aAAa7D,GAAEmD,GACfa,cAAchE,GAAEnO,KAWpBuH,EACAC,EACAvC,IAMJ,OAJIsC,EAAcuM,wBACdvM,EAAcuM,uBAAuBpE,EAASmE,GAElDA,EAAYxQ,OACLwQ,GAvHV1F,GA0HHA","sourcesContent":["function defFilterInputStyleSys(s) {s.width='2ch'; s.border='0'; s.padding='0'; s.outline='none'; s.backgroundColor='transparent' };\r\n\r\nfunction FilterPanel(\r\n        createElement,\r\n        insertIntoDom,\r\n        onFocusIn,  // show dropdown\r\n        onFocusOut, // hide dropdown\r\n        onKeyDownArrowUp, \r\n        onKeyDownArrowDown,\r\n        onTabForEmpty,  // tab on empty\r\n        onBackspace, // backspace alike\r\n        onEnterOrTabToCompleate, // \"compleate alike\"\r\n        onKeyDownEsc, \r\n        onKeyUpEsc, // \"esc\" alike\r\n        onInput // filter\r\n    ) {\r\n    \r\n    var inputElement = createElement('INPUT'); \r\n    \r\n    inputElement.setAttribute(\"type\",\"search\");\r\n    inputElement.setAttribute(\"autocomplete\",\"off\");\r\n\r\n    defFilterInputStyleSys(inputElement.style);\r\n\r\n    insertIntoDom(inputElement);\r\n\r\n    var onfilterInputKeyDown = (event) => {\r\n        if ([38, 40, 13 ,27].indexOf(event.which)>=0 \r\n            || (event.which == 9 && inputElement.value) ) {\r\n            event.preventDefault(); \r\n            // preventDefault for tab(9) it enables keyup,\r\n            // prevent form default button (13-enter) \r\n            // but doesn't help with bootsrap modal ESC or ENTER (close behaviour);\r\n            // esc(27) there is just in case\r\n        }\r\n        if (event.which == 27 ) {\r\n            onKeyDownEsc(inputElement.value?false:true, event); // support BS do not close modal - event.stopPropagation inside\r\n        }\r\n        else if (event.which == 38) {\r\n            onKeyDownArrowUp();\r\n        }\r\n        else if (event.which == 40) {\r\n            onKeyDownArrowDown();\r\n        }\r\n        else if (event.which == 9  /*tab*/) { // no keydown for this\r\n            if (!inputElement.value) {\r\n                 onTabForEmpty(); // filter is empty, nothing to reset\r\n            }\r\n        }\r\n        else if (event.which == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (!inputElement.value)\r\n            { \r\n                onBackspace();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    var onFilterInputKeyUp = (event) => {\r\n        if (event.which == 13 || event.which == 9) {\r\n            onEnterOrTabToCompleate();\r\n        }\r\n        else if (event.which == 27) { // escape\r\n            onKeyUpEsc(); // is it always empty (bs x can still it) \r\n        }\r\n    }\r\n    \r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n    var onFilterInputInput = () => {\r\n        var filterInputValue = inputElement.value;\r\n        onInput(\r\n            filterInputValue, \r\n            ()=> inputElement.style.width = filterInputValue.length*1.3 + 2 + \"ch\"\r\n        );\r\n    }\r\n    \r\n    inputElement.addEventListener('focusin', onFocusIn);\r\n    inputElement.addEventListener('focusout', onFocusOut);\r\n    inputElement.addEventListener('keydown', onfilterInputKeyDown);    \r\n    inputElement.addEventListener('keyup', onFilterInputKeyUp);\r\n    inputElement.addEventListener('input', onFilterInputInput);\r\n\r\n    function setEmptyLength(){\r\n        inputElement.style.width=\"2ch\";\r\n    }\r\n\r\n    function setEmpty(){\r\n        inputElement.value ='';\r\n        setEmptyLength();\r\n    };\r\n    \r\n    return {\r\n        input:inputElement,\r\n        isEmpty(){\r\n            return inputElement.value ? false:true;\r\n        },\r\n        setEmpty,\r\n        setEmptyLength,\r\n        setFocus(){\r\n            inputElement.focus();\r\n        },\r\n        isEventTarget(event){\r\n            return event.target == inputElement;\r\n        },\r\n        dispose(){\r\n            inputElement.removeEventListener('focusin', onFocusIn);\r\n            inputElement.removeEventListener('focusout', onFocusOut);\r\n            inputElement.removeEventListener('keydown', onfilterInputKeyDown);\r\n            inputElement.removeEventListener('keyup', onFilterInputKeyUp);\r\n            inputElement.removeEventListener('input', onFilterInputInput);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FilterPanel;","function defDropDownMenuStyleSys(s) {s.listStyleType='none'}; // remove bullets since this is ul\r\n\r\nfunction OptionsPanel(createElement, onShow, onHide, eventSkipper, dropDownItemContent, styling, \r\n        getVisibleMultiSelectDataList, resetFilter, updateDropDownLocation, filterPanelSetFocus) {\r\n    \r\n    var dropDownMenu = createElement('UL');\r\n    dropDownMenu.style.display=\"none\";\r\n\r\n    // prevent heavy understandable styling error\r\n    defDropDownMenuStyleSys(dropDownMenu.style);\r\n    var hoveredMultiSelectData=null;\r\n    var hoveredMultiSelectDataIndex = null;\r\n    var candidateToHoveredMultiSelectData=null;\r\n\r\n    function hideDropDown() {\r\n        if (candidateToHoveredMultiSelectData){\r\n            resetCandidateToHoveredMultiSelectData();\r\n        }\r\n        if (dropDownMenu.style.display != 'none')\r\n        {\r\n            dropDownMenu.style.display = 'none';\r\n            onHide();\r\n        }\r\n    }\r\n\r\n    function showDropDown() {\r\n        if (dropDownMenu.style.display != 'block')\r\n        {\r\n            eventSkipper.setSkippable();\r\n            dropDownMenu.style.display = 'block';\r\n            onShow();\r\n        }\r\n    }\r\n\r\n    var hoverInInternal = function(index){\r\n        hoveredMultiSelectDataIndex = index;\r\n        hoveredMultiSelectData = getVisibleMultiSelectDataList()[index];\r\n        styling.HoverIn(hoveredMultiSelectData.dropDownMenuItemElement);\r\n    }\r\n\r\n    function resetDropDownMenuHover() {\r\n        if (hoveredMultiSelectData) {\r\n            styling.HoverOut(hoveredMultiSelectData.dropDownMenuItemElement);\r\n            hoveredMultiSelectData = null;\r\n            hoveredMultiSelectDataIndex = null;\r\n        }\r\n    }\r\n\r\n    var resetCandidateToHoveredMultiSelectData = function(){\r\n        candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousemove', processCandidateToHovered);\r\n        candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousedown', processCandidateToHovered);\r\n        candidateToHoveredMultiSelectData = null;\r\n    }\r\n\r\n    var processCandidateToHovered = function() {\r\n        if (hoveredMultiSelectData != candidateToHoveredMultiSelectData)\r\n        {\r\n            resetDropDownMenuHover(); \r\n            hoverInInternal(candidateToHoveredMultiSelectData.visibleIndex);\r\n        }\r\n        if(candidateToHoveredMultiSelectData) \r\n            resetCandidateToHoveredMultiSelectData();\r\n    }\r\n\r\n    function toggleHovered(){\r\n        if (hoveredMultiSelectData) {\r\n            hoveredMultiSelectData.toggle();\r\n            resetDropDownMenuHover();\r\n            hideDropDown(); // always hide 1st\r\n            resetFilter();\r\n        } \r\n    }\r\n\r\n    function keyDownArrow(down) {\r\n        let visibleMultiSelectDataList = getVisibleMultiSelectDataList();\r\n        let length = visibleMultiSelectDataList.length;\r\n        let newIndex=null;\r\n        if (length > 0) {\r\n            if (down) {\r\n                let i = hoveredMultiSelectDataIndex==null?0:hoveredMultiSelectDataIndex+1;\r\n                while(i<length){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                let i = hoveredMultiSelectDataIndex==null?length-1:hoveredMultiSelectDataIndex-1;\r\n                while(i>=0){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (newIndex!=null)\r\n        {\r\n            if (hoveredMultiSelectData)\r\n                styling.HoverOut(hoveredMultiSelectData.dropDownMenuItemElement);\r\n            updateDropDownLocation();\r\n            showDropDown(); \r\n            hoverInInternal(newIndex);\r\n        }\r\n    }\r\n\r\n    var onDropDownMenuItemElementMouseoverGeneral = function(MultiSelectData, dropDownMenuItemElement)\r\n    {\r\n        if (eventSkipper.isSkippable())\r\n        {\r\n            if(candidateToHoveredMultiSelectData)\r\n                resetCandidateToHoveredMultiSelectData()\r\n\r\n            candidateToHoveredMultiSelectData = MultiSelectData;\r\n            dropDownMenuItemElement.addEventListener('mousemove', processCandidateToHovered);\r\n            dropDownMenuItemElement.addEventListener('mousedown', processCandidateToHovered);\r\n        }\r\n        else\r\n        {\r\n            if (hoveredMultiSelectData!=MultiSelectData)\r\n            {\r\n                // mouseleave is not enough to guarantee remove hover styles in situations\r\n                // when style was setuped without mouse (keyboard arrows)\r\n                // therefore force reset manually\r\n                resetDropDownMenuHover(); \r\n                hoverInInternal(MultiSelectData.visibleIndex);\r\n            }                \r\n        }\r\n    }\r\n\r\n    function insertDropDownItem(MultiSelectData, createSelectedItemGen, triggerChange, isSelected, isOptionDisabled) {\r\n        var dropDownMenuItemElement = createElement('LI');\r\n        \r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onDropDownMenuItemElementMouseover = () => onDropDownMenuItemElementMouseoverGeneral(\r\n            MultiSelectData,\r\n            dropDownMenuItemElement\r\n        )\r\n\r\n        dropDownMenuItemElement.addEventListener('mouseover', onDropDownMenuItemElementMouseover);\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onDropDownMenuItemElementMouseleave = () => {\r\n            if (!eventSkipper.isSkippable()) {\r\n                resetDropDownMenuHover();\r\n            }\r\n        }\r\n\r\n        dropDownMenuItemElement.addEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n\r\n        dropDownMenu.appendChild(dropDownMenuItemElement);\r\n\r\n        let content = dropDownItemContent(dropDownMenuItemElement, MultiSelectData.option); \r\n        MultiSelectData.dropDownMenuItemElement = dropDownMenuItemElement;\r\n        MultiSelectData.DropDownItemContent = content;\r\n\r\n        MultiSelectData.DisposeDropDownMenuItemElement = ()=> {\r\n            dropDownMenuItemElement.removeEventListener('mouseover',  onDropDownMenuItemElementMouseover);\r\n            dropDownMenuItemElement.removeEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n        }\r\n\r\n        var setDropDownItemContentDisabled = (content,  isSelected) => {\r\n            content.disabledStyle(true);\r\n            // do not desable if selected! there should be possibility to unselect \"disabled\"\r\n            content.disable(!isSelected);\r\n        }\r\n\r\n        if (isOptionDisabled)\r\n            setDropDownItemContentDisabled(content, isSelected )\r\n\r\n        content.onSelected( () => {\r\n            MultiSelectData.toggle();\r\n            filterPanelSetFocus();\r\n        });\r\n        // ------------------------------------------------------------------------------\r\n        \r\n        var createSelectedItem = () => createSelectedItemGen(\r\n            MultiSelectData,\r\n            isOptionDisabled,\r\n            () => setDropDownItemContentDisabled(content, false)\r\n        );\r\n        \r\n        if (isSelected)\r\n        {\r\n            createSelectedItem();\r\n        }\r\n        else\r\n        {\r\n            MultiSelectData.excludedFromSearch =  isOptionDisabled;\r\n            if (isOptionDisabled)\r\n                MultiSelectData.toggle = () => { }\r\n            else\r\n                MultiSelectData.toggle = () =>  {\r\n                    createSelectedItem();\r\n                    triggerChange();\r\n                }\r\n        }\r\n        // TODO: refactore it\r\n    }\r\n\r\n    var item = {\r\n        dropDownMenu,\r\n        hoverInInternal,\r\n        stopAndResetDropDownMenuHover(){\r\n            eventSkipper.setSkippable(); //disable Hover On MouseEnter - filter's changes should remove hover\r\n            resetDropDownMenuHover();\r\n        },\r\n        showDropDown,\r\n        hideDropDown,\r\n        toggleHovered,\r\n        keyDownArrow,\r\n        insertDropDownItem,\r\n        getIsVisble(){\r\n            return dropDownMenu.style.display != 'none';\r\n        }\r\n        \r\n    }\r\n    return item;\r\n}\r\n\r\nexport default OptionsPanel;","function removeElement(e) {e.parentNode.removeChild(e)}\r\nexport default removeElement;","import removeElement from './removeElement.js'\r\n\r\nfunction defSelectedPanelStyleSys(s) {s.display='flex'; s.flexWrap='wrap'; s.listStyleType='none'};  // remove bullets since this is ul\r\n\r\nfunction SelectionsPanel (\r\n    createElement, \r\n    init, \r\n    selectedItemContent, \r\n    isComponentDisabled, \r\n    triggerChange, \r\n    onRemove,\r\n    onClick,\r\n    processRemoveButtonClick\r\n    ) \r\n    {\r\n    var ulElement = createElement('UL');\r\n    defSelectedPanelStyleSys(ulElement.style); \r\n    var filterInputItem = createElement('LI'); // detached\r\n    ulElement.appendChild(filterInputItem); // located filter in selectionsPanel\r\n\r\n    init(filterInputItem);\r\n    var MultiSelectDataSelectedTail = null;\r\n\r\n    function removeSelectedTail(){\r\n        if (MultiSelectDataSelectedTail){ \r\n            MultiSelectDataSelectedTail.toggle(); // always remove in this case\r\n        }\r\n    }\r\n\r\n    function removeSelectedFromList(MultiSelectData){\r\n        if (MultiSelectData.selectedPrev){\r\n            (MultiSelectData.selectedPrev).selectedNext = MultiSelectData.selectedNext;\r\n        }\r\n        if (MultiSelectData.selectedNext){\r\n           (MultiSelectData.selectedNext).selectedPrev = MultiSelectData.selectedPrev;\r\n        }\r\n        if (MultiSelectDataSelectedTail == MultiSelectData){\r\n            MultiSelectDataSelectedTail = MultiSelectData.selectedPrev;\r\n        }\r\n        MultiSelectData.selectedNext=null;\r\n        MultiSelectData.selectedPrev=null;\r\n    }\r\n\r\n\r\n    function createSelectedItem(MultiSelectData, isOptionDisabled, setDropDownItemContentDisabled) {\r\n        var selectedItemElement = createElement('LI');\r\n        MultiSelectData.selectedItemElement = selectedItemElement;\r\n        if (MultiSelectDataSelectedTail){\r\n            MultiSelectDataSelectedTail.selectedNext = MultiSelectData;\r\n            MultiSelectData.selectedPrev = MultiSelectDataSelectedTail;\r\n        }\r\n        MultiSelectDataSelectedTail = MultiSelectData;\r\n\r\n        var removeSelectedItem = () => {\r\n            MultiSelectData.option.selected = false;\r\n            MultiSelectData.excludedFromSearch = isOptionDisabled;\r\n            if (isOptionDisabled)\r\n            {\r\n                setDropDownItemContentDisabled(MultiSelectData.DropDownItemContent, false);\r\n                MultiSelectData.toggle = ()=> {};\r\n            }\r\n            else\r\n            {\r\n                MultiSelectData.toggle = ()=>{\r\n                    createSelectedItem(MultiSelectData, isOptionDisabled, setDropDownItemContentDisabled);\r\n                    triggerChange();\r\n                };\r\n            }\r\n            MultiSelectData.DropDownItemContent.select(false);\r\n            removeElement(selectedItemElement);\r\n            MultiSelectData.SelectedItemContent.dispose();\r\n            MultiSelectData.SelectedItemContent=null;\r\n            MultiSelectData.selectedItemElement=null;\r\n\r\n            removeSelectedFromList(MultiSelectData);\r\n            triggerChange();\r\n        }\r\n\r\n        // processRemoveButtonClick removes the \r\n        // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n        // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n        // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n        // because of the event's bubling process removeSelectedItem runs first. \r\n        // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n        // before we could analize is it belong to our dropdown or not.\r\n        // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n        // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n        // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n        // the situation described above: click outside dropdown on the same component.\r\n        // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n\r\n        let removeSelectedItemAndCloseDropDown = () => {\r\n            removeSelectedItem();\r\n            onRemove();\r\n        };\r\n    \r\n        let onRemoveSelectedItemEvent = (event) => {\r\n            processRemoveButtonClick(() => removeSelectedItemAndCloseDropDown(), event);\r\n        };\r\n\r\n        MultiSelectData.SelectedItemContent = selectedItemContent(\r\n            selectedItemElement,\r\n            MultiSelectData.option,\r\n            onRemoveSelectedItemEvent);\r\n\r\n        var disable = (isDisabled) =>\r\n            MultiSelectData.SelectedItemContent.disable(isDisabled);\r\n        disable(isComponentDisabled);\r\n\r\n        MultiSelectData.option.selected = true;\r\n        MultiSelectData.excludedFromSearch = true; // all selected excluded from search\r\n        //MultiSelectData.remove  = removeSelectedItemAndCloseDropDown;\r\n        MultiSelectData.disable = disable;\r\n        ulElement.insertBefore(selectedItemElement, filterInputItem);\r\n\r\n\r\n        MultiSelectData.toggle = () => removeSelectedItem();\r\n        MultiSelectData.DropDownItemContent.select(true);\r\n        \r\n    }\r\n\r\n    var selectedPanelClick = event => {\r\n        onClick(event);\r\n    };\r\n\r\n    function iterateAll(isDisabled){\r\n        let i = MultiSelectDataSelectedTail;\r\n        while(i){\r\n            i.disable(isDisabled); \r\n            i = i.selectedPrev;\r\n        }\r\n    }\r\n\r\n    var item = {\r\n        selectedPanel: ulElement,\r\n        filterInputItem,\r\n        insert(selectedItemElement){\r\n            this.selectedPanel.insertBefore(selectedItemElement, filterInputItem);\r\n        },\r\n        createSelectedItem,\r\n        removeSelectedTail,\r\n        resetMultiSelectDataSelectedTail() {\r\n            MultiSelectDataSelectedTail = null;\r\n        },\r\n        enable(){\r\n            filterInputItem.style.display = \"list-item\";\r\n            iterateAll(false);\r\n            ulElement.addEventListener(\"click\", selectedPanelClick);\r\n\r\n        },\r\n        disable(){\r\n            filterInputItem.style.display = \"none\";\r\n            iterateAll(true);\r\n            ulElement.removeEventListener(\"click\", selectedPanelClick);\r\n\r\n        },\r\n        dispose(){\r\n            ulElement.removeEventListener(\"click\", selectedPanelClick); // OPEN dropdown\r\n        }\r\n    }\r\n    return item;\r\n}\r\n\r\nexport default SelectionsPanel;","function MultiSelectInputAspect (\r\n    window,\r\n    document, \r\n    container, \r\n    selectedPanel, \r\n    filterInputItem, \r\n    dropDownMenu, \r\n    showDropDown,\r\n    hideDropDownAndResetFilter,\r\n    isDropDownMenuEmpty,\r\n    Popper\r\n    ) {\r\n\r\n    container.appendChild(selectedPanel);\r\n    container.appendChild(dropDownMenu);\r\n\r\n    var skipFocusout = false;\r\n    \r\n    // we want to escape the closing of the menu on a user's click inside the container\r\n    var containerMousedown = function() {\r\n         skipFocusout = true;\r\n    }\r\n\r\n    var documentMouseup = function(event) {\r\n        // if click outside container - close dropdown\r\n        if (!(container === event.target || container.contains(event.target))) {\r\n            hideDropDownAndResetFilter();\r\n        }\r\n    }\r\n\r\n    var popper = new Popper( \r\n        filterInputItem, \r\n        dropDownMenu, \r\n        {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n            }\r\n        }\r\n    );\r\n\r\n    var filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n    var preventDefaultClickEvent = null;\r\n\r\n    function alignAndShowDropDown(event){\r\n        if (preventDefaultClickEvent != event) {\r\n            if (!isDropDownMenuEmpty())\r\n            {\r\n                alignToFilterInputItemLocation(true);\r\n                showDropDown();\r\n            }\r\n        }\r\n        preventDefaultClickEvent=null;\r\n    }\r\n    \r\n    function alignToFilterInputItemLocation(force) {\r\n        let offsetLeft = filterInputItem.offsetLeft;\r\n        if (force || filterInputItemOffsetLeft != offsetLeft){ // position changed\r\n            popper.update();\r\n            filterInputItemOffsetLeft = offsetLeft;\r\n        }\r\n    }\r\n\r\n    return {\r\n        dispose(){\r\n            popper.destroy();\r\n        },\r\n        alignToFilterInputItemLocation,\r\n        alignAndShowDropDown,\r\n        processUncheck(uncheckOption, event){\r\n            // we can't remove item on \"click\" in the same loop iteration - it is unfrendly for 3PP event handlers (they will get detached element)\r\n            // never remove elements in the same event iteration\r\n\r\n            window.setTimeout(()=>uncheckOption(),0)\r\n            preventDefaultClickEvent = event; // setPreventDefaultMultiSelectEvent\r\n        },\r\n        onDropDownShow(){\r\n            // add listeners that manages close dropdown on input's focusout and click outside container\r\n            //container.removeEventListener(\"mousedown\", containerMousedown);\r\n\r\n            container.addEventListener(\"mousedown\", containerMousedown);\r\n            document.addEventListener(\"mouseup\", documentMouseup);\r\n            \r\n        },\r\n        onDropDownHide(){\r\n            container.removeEventListener(\"mousedown\", containerMousedown);\r\n            document.removeEventListener(\"mouseup\", documentMouseup);\r\n        },\r\n        getSkipFocusout : function() {\r\n             return skipFocusout;\r\n        },\r\n        resetSkipFocusout : function() {\r\n             skipFocusout=false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MultiSelectInputAspect;","import Popper from 'popper.js'\r\nimport FilterPanel from './FilterPanel.js'\r\nimport OptionsPanel from './OptionsPanel.js'\r\nimport SelectionsPanel from './SelectionsPanel.js'\r\nimport MultiSelectInputAspect from './MultiSelectInputAspect.js'\r\nimport EventSkipper from './EventSkipper.js'\r\nimport removeElement from './removeElement.js'\r\n\r\nfunction filterMultiSelectData(MultiSelectData, isFiltered, visibleIndex) {\r\n    MultiSelectData.visible = isFiltered;\r\n    MultiSelectData.visibleIndex = visibleIndex;\r\n    MultiSelectData.dropDownMenuItemElement.style.display = isFiltered ? 'block': 'none';\r\n} \r\n\r\nfunction resetFilterDropDownMenu(MultiSelectDataList) {\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            filterMultiSelectData(multiSelectData, true, i);\r\n        }\r\n    }\r\n}\r\n\r\nfunction collectFilterDropDownMenu(MultiSelectDataList, text) {\r\n    var list = [];\r\n    var j = 0;\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            if ( multiSelectData.excludedFromSearch || multiSelectData.searchText.indexOf(text)<0 )\r\n            {\r\n                filterMultiSelectData(multiSelectData, false);\r\n            }\r\n            else \r\n            {\r\n                filterMultiSelectData(multiSelectData, true, j++);\r\n                list.push( multiSelectData );\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, styling, \r\n        selectedItemContent, dropDownItemContent, \r\n        labelAdapter, createStylingComposite,\r\n        configuration, onDispose, window) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n\r\n        // readonly\r\n        this.optionsAdapter = optionsAdapter;\r\n        this.styling = styling;\r\n        this.selectedItemContent = selectedItemContent;\r\n        this.dropDownItemContent = dropDownItemContent;\r\n        this.labelAdapter = labelAdapter;\r\n        this.createStylingComposite = createStylingComposite;\r\n        this.configuration = configuration;\r\n        this.onDispose = onDispose;\r\n        this.window = window;\r\n\r\n        this.visibleCount=10;\r\n\r\n        this.selectionsPanel = null;\r\n        this.filterInputItem = null;\r\n        this.optionsPanel = null;\r\n\r\n        this.stylingComposite = null;\r\n\r\n        this.isComponentDisabled = null;\r\n                \r\n        this.resetMultiSelectDataList();\r\n    }\r\n\r\n    resetMultiSelectDataList(){\r\n        this.MultiSelectDataList = [];\r\n        this.filteredMultiSelectDataList = null;\r\n    }\r\n\r\n    \r\n    getVisibleMultiSelectDataList(){\r\n        if (this.filteredMultiSelectDataList)\r\n            return this.filteredMultiSelectDataList;\r\n        else\r\n            return this.MultiSelectDataList;\r\n    }\r\n\r\n    resetFilter(){\r\n        if (!this.filterPanel.isEmpty()) {\r\n            this.filterPanel.setEmpty();\r\n            this.processEmptyInput();\r\n        }\r\n    }\r\n\r\n    processEmptyInput(){\r\n        this.filterPanel.setEmptyLength();\r\n        resetFilterDropDownMenu(this.MultiSelectDataList);\r\n        this.filteredMultiSelectDataList = null;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------------\r\n    GetContainer(){\r\n        return this.optionsAdapter.container;\r\n    }\r\n    \r\n    Update(){\r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n    }\r\n\r\n    UpdateOption(index){\r\n        let multiSelectData = this.MultiSelectDataList[index];\r\n        let option = multiSelectData.option;\r\n        multiSelectData.searchText = option.text.toLowerCase().trim();\r\n        if (multiSelectData.isHidden != option.isHidden)\r\n        {\r\n            multiSelectData.isHidden=option.isHidden;\r\n            if (multiSelectData.isHidden)\r\n                this.optionsPanel.insertDropDownItem(multiSelectData, \r\n                    (p1,p2,p3)=>this.selectionsPanel.createSelectedItem(p1,p2,p3),\r\n                    ()=>this.optionsAdapter.triggerChange(),\r\n                    option.isSelected, option.isDisabled);\r\n            else\r\n                multiSelectData.removeDropDownMenuItemElement();\r\n        }\r\n        else \r\n        {\r\n            if (multiSelectData.isSelected != option.isSelected)\r\n            {\r\n                multiSelectData.isSelected=option.isSelected;\r\n                if (multiSelectData.isSelected)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n            if (multiSelectData.isDisabled != option.isDisabled)\r\n            {\r\n                multiSelectData.isDisabled=option.isDisabled;\r\n                if (multiSelectData.isDisabled)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n        }    \r\n        //multiSelectData.updateOption();\r\n    }\r\n\r\n    UpdateData(){\r\n        // close drop down , remove filter and listeners\r\n        this.optionsPanel.hideDropDown(); // always hide 1st\r\n        this.resetFilter();\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.dropDownMenuItemElement)\r\n                removeElement(multiSelectData.dropDownMenuItemElement);\r\n            if (multiSelectData.selectedItemElement)\r\n                removeElement(multiSelectData.selectedItemElement);\r\n        }\r\n        this.resetMultiSelectDataList();\r\n        this.selectionsPanel.resetMultiSelectDataSelectedTail();// this.MultiSelectDataSelectedTail = null;\r\n\r\n        // reinitiate\r\n        this.updateDataImpl();\r\n    }\r\n\r\n    updateDataImpl(){\r\n        var createDropDownItems = () => {\r\n            let options = this.optionsAdapter.getOptions();\r\n            var j = 0;\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n\r\n                let isDisabled = option.disabled;\r\n                let isHidden   = option.hidden;\r\n                let isSelected = option.selected;\r\n                \r\n                var MultiSelectData = {\r\n                    searchText: option.text.toLowerCase().trim(),\r\n                    excludedFromSearch: isSelected || isDisabled || isHidden,\r\n                    option: option,\r\n                    isHidden: isHidden,\r\n                    dropDownMenuItemElement: null,\r\n                    dropDownItemContent: null,\r\n                    selectedPrev: null,\r\n                    selectedNext: null,\r\n                    visible: false,\r\n                    toggle: null,\r\n                    selectedItemElement: null,\r\n                    remove: null,\r\n                    disable: null,\r\n                    removeDropDownMenuItemElement: null\r\n                };\r\n\r\n                this.MultiSelectDataList.push(MultiSelectData);\r\n                if (!isHidden){\r\n                    MultiSelectData.visible = true;\r\n                    MultiSelectData.visibleIndex=i;\r\n                    this.optionsPanel.insertDropDownItem(MultiSelectData, \r\n                        (p1,p2,p3)=>this.selectionsPanel.createSelectedItem(p1,p2,p3),\r\n                        ()=>this.optionsAdapter.triggerChange(), isSelected, isDisabled);\r\n                }\r\n            } \r\n            this.aspect.alignToFilterInputItemLocation(false);\r\n        }\r\n\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        if (document.readyState != 'loading'){\r\n            createDropDownItems();\r\n        } else {\r\n            var createDropDownItemsHandler = function(){\r\n                createDropDownItems();\r\n                document.removeEventListener(\"DOMContentLoaded\", createDropDownItemsHandler);\r\n            }\r\n            document.addEventListener('DOMContentLoaded', createDropDownItemsHandler); // IE9+\r\n        }\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose(); // primary used to remove from jQuery tables\r\n        \r\n        // remove event listeners\r\n        // TODO check if open\r\n        this.optionsPanel.hideDropDown();\r\n        \r\n        this.selectionsPanel.dispose();\r\n        this.filterPanel.dispose();\r\n        \r\n        this.labelAdapter.dispose();\r\n        \r\n        this.aspect.dispose();\r\n        \r\n        if (this.optionsAdapter.dispose) {\r\n            this.optionsAdapter.dispose();\r\n        }\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.DisposeDropDownMenuItemElement)\r\n                multiSelectData.DisposeDropDownMenuItemElement();\r\n            \r\n            if (multiSelectData.SelectedItemContent)\r\n                multiSelectData.SelectedItemContent.dispose();\r\n            if (multiSelectData.DropDownItemContent)\r\n                multiSelectData.DropDownItemContent.dispose();\r\n        }\r\n    }\r\n\r\n    UpdateSize(){\r\n        if (this.styling.UpdateSize)\r\n            this.styling.UpdateSize(this.stylingComposite);\r\n    }\r\n\r\n    UpdateDisabled(){\r\n        let isComponentDisabled = this.optionsAdapter.getDisabled();\r\n        if (this.isComponentDisabled!==isComponentDisabled){\r\n            if (isComponentDisabled) {\r\n                this.selectionsPanel.disable();\r\n                this.styling.Disable(this.stylingComposite);\r\n            } else {\r\n                this.selectionsPanel.enable();\r\n                this.styling.Enable(this.stylingComposite);\r\n            }\r\n            this.isComponentDisabled=isComponentDisabled;\r\n        }\r\n    }\r\n \r\n    input(filterInputValue, resetLength){\r\n        let text = filterInputValue.trim().toLowerCase();\r\n        var isEmpty=false;\r\n        if (text == '')\r\n            isEmpty=true;\r\n        else\r\n        {\r\n            // check if exact match, otherwise new search\r\n            this.filteredMultiSelectDataList = collectFilterDropDownMenu(this.MultiSelectDataList, text);\r\n            if (this.filteredMultiSelectDataList.length == 1)\r\n            {\r\n                let fullMatchMultiSelectData =  this.filteredMultiSelectDataList[0];\r\n                if (fullMatchMultiSelectData.searchText == text)\r\n                {\r\n                    fullMatchMultiSelectData.toggle();\r\n                    this.filterPanel.setEmpty(); // clear\r\n                    isEmpty=true;\r\n                }\r\n            }\r\n        }\r\n        if (isEmpty)\r\n            this.processEmptyInput();\r\n        else\r\n            resetLength();  \r\n        \r\n        \r\n        this.optionsPanel.stopAndResetDropDownMenuHover();\r\n        if (this.getVisibleMultiSelectDataList().length == 1) {\r\n            this.optionsPanel.hoverInInternal(0)\r\n        }\r\n\r\n        if (this.getVisibleMultiSelectDataList().length > 0) {\r\n            this.aspect.alignToFilterInputItemLocation(true); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.optionsPanel.showDropDown();\r\n        } else {\r\n            this.optionsPanel.hideDropDown();\r\n        }\r\n    }\r\n\r\n    init() {\r\n        var document = this.window.document;\r\n        var createElement = (name) => document.createElement(name);\r\n        let container = this.optionsAdapter.container;\r\n\r\n        var lazyfilterItemInputElementAtach=null;\r\n        \r\n        this.filterPanel = FilterPanel(\r\n            createElement,\r\n            (filterItemInputElement) => {\r\n                lazyfilterItemInputElementAtach = (filterItemElement)=>{\r\n                    filterItemElement.appendChild(filterItemInputElement);\r\n                    this.labelAdapter.init(filterItemInputElement); \r\n                };\r\n            },\r\n            () => this.styling.FocusIn(this.stylingComposite),  // focus in - show dropdown\r\n            () => {\r\n                if (!this.aspect.getSkipFocusout()) // skip initiated by mouse click (we manage it different way)\r\n                {\r\n                    this.resetFilter(); // if do not do this we will return to filtered list without text filter in input\r\n                    this.styling.FocusOut(this.stylingComposite)\r\n                }\r\n                this.aspect.resetSkipFocusout();\r\n            }, // focus out - hide dropdown\r\n            () => this.optionsPanel.keyDownArrow(false), // arrow up\r\n            () => this.optionsPanel.keyDownArrow(true),  // arrow down\r\n            () => this.optionsPanel.hideDropDown(),  // tab on empty\r\n            () => {\r\n                this.selectionsPanel.removeSelectedTail();\r\n                this.aspect.alignToFilterInputItemLocation(false);\r\n            }, // backspace - \"remove last\"\r\n            () => { \r\n                if (this.optionsPanel.getIsVisble())\r\n                    this.optionsPanel.toggleHovered() }, // tab/enter \"compleate hovered\"\r\n            (isEmpty, event) => {\r\n                if (!isEmpty || this.optionsPanel.getIsVisble()) // supports bs modal - stop esc (close modal) propogation\r\n                    event.stopPropagation();\r\n            }, // esc keydown\r\n            () => {\r\n                this.optionsPanel.hideDropDown(); // always hide 1st\r\n                this.resetFilter();\r\n            }, // esc keyup \r\n            (filterInputValue, resetLength) => this.input(filterInputValue, resetLength) // filter\r\n        );\r\n             \r\n        this.selectionsPanel =  SelectionsPanel(\r\n            createElement,\r\n            (filterItemElement) => {\r\n                lazyfilterItemInputElementAtach(filterItemElement);\r\n            },\r\n            this.selectedItemContent,\r\n            this.isComponentDisabled,\r\n            () => this.optionsAdapter.triggerChange(),\r\n            () => {\r\n                this.optionsPanel.hideDropDown(); // always hide 1st\r\n                this.resetFilter();\r\n            },\r\n            (event) => {\r\n                if (!this.filterPanel.isEventTarget(event))\r\n                     this.filterPanel.setFocus();\r\n                this.aspect.alignAndShowDropDown(event);\r\n            },\r\n            (doUncheck, event) => {\r\n                this.aspect.processUncheck(doUncheck, event);\r\n            }\r\n        );\r\n        \r\n        this.selectedPanel = this.selectionsPanel.selectedPanel; // TODO remove\r\n        this.filterInputItem = this.selectionsPanel.filterInputItem;\r\n\r\n        this.optionsPanel = OptionsPanel(\r\n            createElement,\r\n            () => this.aspect.onDropDownShow(),\r\n            () => this.aspect.onDropDownHide(),\r\n            EventSkipper(this.window),\r\n            this.dropDownItemContent,\r\n            this.styling, \r\n            () => this.getVisibleMultiSelectDataList(),\r\n            () => this.resetFilter(),\r\n            () => this.aspect.alignToFilterInputItemLocation(true),\r\n            () => this.filterPanel.setFocus()\r\n        );\r\n\r\n        this.aspect =  MultiSelectInputAspect(\r\n            this.window,\r\n            document,\r\n            container, \r\n            this.selectionsPanel.selectedPanel, \r\n            this.selectionsPanel.filterInputItem, \r\n            this.optionsPanel.dropDownMenu, \r\n            () => this.optionsPanel.showDropDown(),\r\n            () => {  \r\n                this.optionsPanel.hideDropDown();\r\n                this.resetFilter();\r\n            },\r\n            () => this.getVisibleMultiSelectDataList().length==0, \r\n            Popper\r\n        );\r\n\r\n        this.stylingComposite = this.createStylingComposite(container, \r\n            this.selectionsPanel.selectedPanel,\r\n            this.selectionsPanel.filterInputItem, \r\n            this.filterPanel.input, \r\n            this.optionsPanel.dropDownMenu);\r\n        \r\n        this.styling.Init(this.stylingComposite);\r\n\r\n        if (this.optionsAdapter.afterContainerFilled)\r\n            this.optionsAdapter.afterContainerFilled();\r\n        \r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        \r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n        \r\n        this.updateDataImpl();\r\n\r\n        if (this.optionsAdapter.subscribeToReset)\r\n            this.optionsAdapter.subscribeToReset(()=> this.window.setTimeout( ()=>this.UpdateData() ) );\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","export default function EventSkipper(window) {\r\n    var isSkippable = false;\r\n    return {\r\n        isSkippable(){\r\n            return isSkippable;\r\n        },\r\n        setSkippable(){\r\n            isSkippable = true;\r\n            window.setTimeout( \r\n                () => {  \r\n                    isSkippable = false;\r\n                }, 0)\r\n        }\r\n    }\r\n}","export function ExtendIfUndefined(destination, source) {\r\n    for (var property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function ExtendIfUndefinedFluent(destination, source) {\r\n    ExtendIfUndefined(destination, source);\r\n    return destination;\r\n}","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedPanelFocusClass : 'focus',\r\n    selectedPanelDisabledClass: 'disabled',\r\n    dropDownItemDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4StylingMethodCss(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n\r\n    return {\r\n        Enable($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelFocusClass);\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodCss;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n    selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n    selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n    selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n    selectedPanelFocusBorderColor: '#80bdff',\r\n    selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n    selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n    selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n    filterInputColor: '#495057',\r\n    //selectedItemContentDisabledOpacity: '.65'\r\n};\r\n\r\nfunction Bs4StylingMethodJs(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n\r\n    return {\r\n        OnInit(composite){\r\n            composite.$selectedPanel.css(defSelectedPanelStyle);\r\n            composite.$filterInput.css(\"color\", configuration.filterInputColor);\r\n        },\r\n    \r\n        UpdateSize($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelLgMinHeight);\r\n            } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelSmMinHeight);\r\n            } else {\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelDefMinHeight);\r\n            }\r\n        },\r\n    \r\n        Enable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", \"\")\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", configuration.selectedPanelDisabledBackgroundColor)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"is-valid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusValidBoxShadow);\r\n            } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusInvalidBoxShadow);\r\n            } else {\r\n                $selectedPanel\r\n                    .css(\"box-shadow\", configuration.selectedPanelFocusBoxShadow)\r\n                    .css(\"border-color\", configuration.selectedPanelFocusBorderColor);\r\n            }\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        },\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodJs;","import  { ExtendIfUndefined } from './Tools';\r\n\r\n// Bs4Styling\r\nconst bs4StylingDefaults = {\r\n    containerClass: 'dashboardcode-bsmultiselect',\r\n    dropDownMenuClass: 'dropdown-menu',\r\n    dropDownItemClass:  'px-2',\r\n    dropDownItemHoverClass: 'text-primary bg-light',\r\n    selectedPanelClass: 'form-control',\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close',\r\n    filterInputItemClass: '',\r\n    filterInputClass: ''\r\n}\r\n\r\nfunction Bs4Styling(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4StylingDefaults);\r\n\r\n    return {\r\n        Init(composite){\r\n            composite.$container.addClass(configuration.containerClass);\r\n            composite.$selectedPanel.addClass(configuration.selectedPanelClass);\r\n            composite.$dropDownMenu.addClass(configuration.dropDownMenuClass);\r\n            composite.$filterInputItem.addClass(configuration.filterInputItemClass);\r\n            composite.$filterInput.addClass(configuration.filterInputClass);\r\n            if (stylingMethod.OnInit)\r\n                stylingMethod.OnInit(composite)\r\n        },\r\n\r\n        UpdateIsValid(composite, isValid, isInvalid){\r\n            if (isValid)\r\n                composite.$selectedPanel.addClass('is-valid');\r\n\r\n            if (isInvalid)\r\n                composite.$selectedPanel.addClass('is-invalid');\r\n        },\r\n\r\n        UpdateSize(composite){\r\n            if(stylingMethod.UpdateSize)\r\n               stylingMethod.UpdateSize(composite.$selectedPanel)\r\n        },\r\n\r\n        Enable(composite){\r\n            stylingMethod.Enable(composite.$selectedPanel)\r\n        },\r\n\r\n        Disable(composite){\r\n            stylingMethod.Disable(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusIn(composite){\r\n            stylingMethod.FocusIn(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusOut(composite){\r\n            stylingMethod.FocusOut(composite.$selectedPanel)\r\n        },\r\n\r\n        HoverIn(dropDownItem){\r\n            $(dropDownItem).addClass(configuration.dropDownItemHoverClass);\r\n        },\r\n\r\n        HoverOut(dropDownItem){\r\n            $(dropDownItem).removeClass(configuration.dropDownItemHoverClass);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Bs4Styling;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssdefaults = {\r\n    selectedItemContentDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4SelectedItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssdefaults);\r\n\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.addClass(configuration.selectedItemContentDisabledClass )\r\n        }\r\n    }\r\n}\r\n\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65'\r\n };\r\n\r\nfunction Bs4SelectedItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.css(\"opacity\", configuration.selectedItemContentDisabledOpacity )\r\n        },\r\n    \r\n        createSelectedItemContent($selectedItem, $button){\r\n            $selectedItem.css(defSelectedItemStyle);\r\n            if ($button)\r\n                $button.css(defRemoveSelectedItemButtonStyle);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4SelectedItemContentDefaults = {\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close'\r\n};\r\nfunction Bs4SelectedItemContent(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4SelectedItemContentDefaults);\r\n    \r\n    return function (selectedItem, optionItem, removeSelectedItem){\r\n            let $selectedItem = $(selectedItem)\r\n            $selectedItem.addClass(configuration.selectedItemClass);\r\n            let $content = $(`<span/>`).text(optionItem.text);\r\n            $content.appendTo($selectedItem);\r\n            if (optionItem.disabled)\r\n                stylingMethod.disableSelectedItemContent($content);\r\n            let $button = $('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                .css(\"float\", \"none\").appendTo($selectedItem)\r\n                .addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n                .on(\"click\", \r\n                    jqEvent =>    \r\n                        removeSelectedItem(jqEvent.originalEvent)\r\n                    );\r\n            \r\n            if (stylingMethod.createSelectedItemContent)\r\n                stylingMethod.createSelectedItemContent($selectedItem, $button);\r\n            return {\r\n                disable(isDisabled){ \r\n                    $button.prop('disabled', isDisabled); \r\n                },\r\n                dispose(){\r\n                    $button.unbind();\r\n                }\r\n            };\r\n        }\r\n}\r\n\r\nexport { Bs4SelectedItemContent as Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss};","import  { ExtendIfUndefined} from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedItemContentDisabledClass: 'disabled',\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n    return {\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            if (isDisbaled) \r\n                $checkBox.addClass(configuration.dropDownItemDisabledClass);\r\n            else\r\n                $checkBox.removeClass(configuration.dropDownItemDisabledClass);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65',\r\n    dropdDownLabelDisabledColor: '#6c757d'\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return{\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            $checkBoxLabel.css('color', isDisbaled?configuration.dropdDownLabelDisabledColor:'')\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4DropDownItemContentDefaults = {\r\n    dropDownItemClass:  'px-2',\r\n}\r\n\r\nfunction Bs4DropDownItemContent(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4DropDownItemContentDefaults);\r\n    return function(dropDownItem, option){\r\n        let $dropDownItem = $(dropDownItem);\r\n        $dropDownItem.addClass(configuration.dropDownItemClass);\r\n        let $dropDownItemContent= $(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\">\r\n            <label class=\"custom-control-label\"></label>\r\n        </div>`);\r\n        $dropDownItemContent.appendTo(dropDownItem);\r\n        let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n        let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n        $checkBoxLabel.text(option.text);\r\n\r\n        var tmp = { \r\n            select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n            // --- distinct disable and disabledStyle to provide a possibility to unselect disabled option\r\n            disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n            disabledStyle(isDisbaled){ stylingMethod.disabledStyle($checkBox, $checkBoxLabel, isDisbaled); },\r\n\r\n            onSelected(toggle) {\r\n                $checkBox.on(\"change\", toggle)\r\n                $dropDownItem.on(\"click\", event => {\r\n                    if (dropDownItem === event.target || $.contains(dropDownItem, event.target)) {\r\n                        toggle();\r\n                    }\r\n                })\r\n            },\r\n            dispose(){\r\n                $checkBox.unbind();\r\n                $dropDownItem.unbind();\r\n            }\r\n        }\r\n        \r\n        return tmp;\r\n    }\r\n}\r\n\r\nexport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss };","import $ from 'jquery'\r\n\r\nimport MultiSelect from './MultiSelect'\r\nimport LabelAdapter from './LabelAdapter';\r\nimport {OptionsAdapterJson,OptionsAdapterElement} from './OptionsAdapters';\r\n\r\nimport Bs4StylingMethodCss from './Bs4StylingMethodCss'\r\nimport Bs4StylingMethodJs from './Bs4StylingMethodJs'\r\nimport Bs4Styling from './Bs4Styling';\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\nimport { Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss} from './Bs4SelectedItemContent';\r\nimport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss} from './Bs4DropDownItemContent';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, settings, onDispose) => {\r\n                let configuration = $.extend({}, settings); // settings used per jQuery intialization, configuration per element\r\n                if (configuration.preBuildConfiguration)\r\n                    configuration.preBuildConfiguration(element, configuration);\r\n                \r\n                var $element= $(element);\r\n                let optionsAdapter = null;\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    var trigger = function(eventName){\r\n                        $element.trigger(eventName);\r\n                    }\r\n                    if (configuration.options){\r\n                        optionsAdapter = OptionsAdapterJson(\r\n                            element,\r\n                            configuration.options,\r\n                            configuration.getDisabled,\r\n                            configuration.getIsValid,\r\n                            configuration.getIsInvalid,\r\n                            trigger );\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-filter-${element.id}`;\r\n            \r\n                    }else {\r\n                        if (!configuration.label)\r\n                        {\r\n                            let $formGroup = $(element).closest('.form-group');\r\n                            if ($formGroup.length == 1) {\r\n                                let $label = $formGroup.find(`label[for=\"${element.id}\"]`);\r\n                                if ($label.length>0)\r\n                                {   \r\n                                    let label = $label.get(0);\r\n                                    let forId = label.getAttribute('for');\r\n                                    if (forId == element.id) {\r\n                                        configuration.label = label;\r\n                                    }\r\n                                }   \r\n                            }\r\n                        }\r\n                        var $form = $(element).closest('form');\r\n                        var form = null;\r\n                        if ($form.length == 1) {\r\n                            form = $form.get(0);\r\n                        }\r\n                        optionsAdapter = OptionsAdapterElement(element, trigger, form);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId = () => `${configuration.containerClass}-generated-input-${((element.id)?element.id:element.name).toLowerCase()}-id`;\r\n                    }\r\n                }\r\n\r\n                let labelAdapter = LabelAdapter(configuration.label, configuration.createInputId);\r\n\r\n                let useCss = configuration.useCss;\r\n                let styling = configuration.styling;\r\n                if (!configuration.adapter)\r\n                {\r\n                    let stylingMethod = configuration.stylingMethod;\r\n                    if (!stylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            stylingMethod = Bs4StylingMethodCss(configuration);\r\n                        else\r\n                            stylingMethod = Bs4StylingMethodJs(configuration);\r\n                    }\r\n                    styling = Bs4Styling(stylingMethod, configuration, $);\r\n                }\r\n\r\n                let selectedItemContent = configuration.selectedItemContent;\r\n                if (!selectedItemContent){\r\n                    let selectedItemContentStylingMethod = configuration.selectedItemContentStylingMethod;\r\n                    if (!selectedItemContentStylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodCss(configuration, $);\r\n                        else\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodJs(configuration, $);\r\n                    }\r\n                    selectedItemContent = Bs4SelectedItemContent(selectedItemContentStylingMethod, configuration, $);\r\n                }\r\n\r\n                let dropDownItemContent = configuration.bs4DropDownItemContent;\r\n                if (!dropDownItemContent){\r\n                    let dropDownItemContentStylingMethod = configuration.dropDownItemContentStylingMethod;\r\n                    if (useCss)\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodCss(configuration, $);\r\n                    else\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodJs(configuration, $);\r\n                    dropDownItemContent = Bs4DropDownItemContent(dropDownItemContentStylingMethod, configuration, $)\r\n                }\r\n\r\n                let createStylingComposite = function(container, selectedPanel, filterInputItem, filterInput, dropDownMenu){\r\n                    return {\r\n                        $container:$(container),\r\n                        $selectedPanel:$(selectedPanel),\r\n                        $filterInputItem:$(filterInputItem),\r\n                        $filterInput:$(filterInput),\r\n                        $dropDownMenu:$(dropDownMenu)\r\n                    };\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(\r\n                    optionsAdapter,\r\n                    styling,\r\n                    selectedItemContent,\r\n                    dropDownItemContent,\r\n                    labelAdapter,\r\n                    createStylingComposite,\r\n                    configuration,\r\n                    onDispose,\r\n                    window);\r\n\r\n                if (configuration.postBuildConfiguration)\r\n                    configuration.postBuildConfiguration(element, multiSelect);\r\n                \r\n                multiSelect.init();\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype;","function OptionsAdapterJson(container, options, getDisabled, getIsValid, getIsInvalid, trigger) {\r\n    return {\r\n        container,\r\n        getOptions(){return options},\r\n        dispose(){\r\n            while (container.firstChild) container.removeChild(container.firstChild);\r\n        },\r\n        triggerChange(){\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return getDisabled?getDisabled():false;\r\n        },\r\n        getIsValid(){\r\n            return getIsValid?getIsValid():false;\r\n        },\r\n        getIsInvalid(){\r\n            return getIsInvalid?getIsInvalid():false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction OptionsAdapterElement(selectElement, trigger, form) {\r\n    selectElement.style.display='none';\r\n    var container = document.createElement('div');\r\n    var resetHanlder = null;\r\n    return {\r\n        container,\r\n        getOptions(){return selectElement.getElementsByTagName('OPTION')},\r\n        dispose(){\r\n            container.parentNode.removeChild(container);\r\n            if (form && resetHanlder)\r\n                form.removeEventListener('reset', resetHanlder);\r\n        },\r\n        afterContainerFilled(){\r\n            selectElement.parentNode.insertBefore(container, selectElement.nextSibling);\r\n        },\r\n        triggerChange(){\r\n            trigger('change');\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return selectElement.disabled;\r\n        },\r\n        getIsValid(){\r\n            return selectElement.classList.contains('is-valid');\r\n        },\r\n        getIsInvalid(){\r\n            return selectElement.classList.contains('is-invalid');\r\n        },\r\n        subscribeToReset(handler){\r\n            resetHanlder = handler;\r\n            if (form)\r\n                form.addEventListener('reset',resetHanlder);\r\n        }\r\n    }\r\n}\r\n\r\nexport {OptionsAdapterJson, OptionsAdapterElement};\r\n","function LabelAdapter(label, createInputId){\r\n    var backupedFor = null; // state saved between init and dispose\r\n    return {\r\n        init(filterInput) {\r\n            if (label) {\r\n                backupedFor = label.getAttribute('for');\r\n                var newId = createInputId();\r\n                filterInput.setAttribute('id', newId);\r\n                label.setAttribute('for',newId);\r\n            }\r\n        },\r\n        dispose(){\r\n            if(backupedFor)\r\n                label.setAttribute('for',backupedFor);\r\n        }\r\n    }\r\n}\r\n\r\nexport default LabelAdapter;"]}