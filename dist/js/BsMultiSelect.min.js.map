{"version":3,"sources":["../../js/src/Bootstrap4Adapter.es8.js","../../js/src/BsMultiSelect.es8.js"],"names":["Bootstrap4Adapter","jQuery","hiddenSelect","options","this","extend","selectedPanelDefMinHeight","selectedPanelReadonlyBackgroundColor","selectedPanelBoxShadow","selectedPanelBorderColor","selectedPanelValidBoxShadow","selectedPanelInvalidBoxShadow","filterInputColor","containerClass","dropDownMenuClass","dropDownItemClass","selectedPanelClass","selectedPanelFocusClass","selectedPanelReadonlyClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","CreateSelectedItemContent","$selectedItem","itemText","removeSelectedItem","addClass","css","padding-left","line-height","$text","$buttom","font-size","on","appendTo","CreateDropDownItemContent","$dropDownItem","optionId","isSelected","checkBoxId","name","toLowerCase","checked","$checkBox","find","prop","Init","$container","$selectedPanel","$filterInputItem","$filterInput","$dropDownMenu","margin-bottom","min-height","selectedPanelMinHeight","$hiddenSelect","hasClass","Enable","isEnabled","inputId","id","$formGroup","closest","length","$label","f","attr","background-color","off","Hover","isHover","removeClass","FilterClick","event","target","nodeName","parentElement","Focus","isFocused","window","$","Popper","JQUERY_NO_CONFLICT","fn","pluginName","dataKey","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","defaults","doManageFocus","Plugin","selectElement","adapter","TypeError","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","init","_proto","prototype","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","filterDropDownMenu","text","value","trim","visible","each","i","dropDownMenuItem","$dropDownMenuItem","show","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this","selected","adoptDropDownItem","appendItem","removeItem","remove","removeItemAndCloseDropDown","insertBefore","keydownArrow","down","visibleNodeListArray","toArray","newIndex","forceUpdatePosition","_this2","disabled","get","insertAfter","placement","modifiers","preventOverflow","enabled","flip","document","ready","selectOptions","index","click","preventDefault","stopPropagation","currentTarget","toggleItem","focus","val","focusin","focusout","mousedown","mouseup","contains","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","jQueryInterface","test","methodName","charAt","toUpperCase","slice","Constructor","noConflict"],"mappings":";;;;;wWAAMA,aAEF,SAAAA,EAAYC,EAAQC,EAAcC,GAuB9BC,KAAKD,QAAUF,EAAOI,OAAO,GAtBZ,CAEbC,0BAA2B,sBAC3BC,qCAAsC,UACtCC,uBAAwB,uCACxBC,yBAA0B,UAC1BC,4BAA6B,wCAC7BC,8BAA+B,uCAC/BC,iBAAkB,UAClBC,eAAgB,8BAChBC,kBAAmB,gBACnBC,kBAAmB,OACnBC,mBAAoB,GACpBC,wBAA0B,GAC1BC,2BAA4B,GAC5BC,kBAAmB,GAEnBC,8BAA+B,GAE/BC,qBAAsB,GACtBC,iBAAkB,IAEqBnB,GAC3CC,KAAKH,OAAOA,EACZG,KAAKF,aAAaA,6BAItBqB,0BAAAA,SAA0BC,EAAeC,EAAUC,GAM1CtB,KAAKD,QAAQgB,kBAIdK,EAAcG,SAASvB,KAAKD,QAAQgB,oBAHpCK,EAAcG,SANW,SAOzBH,EAAcI,IANW,CAACC,eAAgB,MAAOC,cAAe,UAWpE,IAAIC,EAAQ3B,KAAKH,OAAL,SAAqBwB,EAArB,WACRO,EAAU5B,KAAKH,OAAO,2GAErBG,KAAKD,QAAQiB,8BAKdY,EAAQL,SAASvB,KAAKD,QAAQiB,gCAJ9BY,EAAQL,SAd6B,SAerCK,EAAQJ,IAd6B,CAACE,cAAe,OAAQG,YAAY,YAmB7ED,EAAQE,GAAG,QAASR,GACpBK,EAAMI,SAASX,GACfQ,EAAQG,SAASX,MAGrBY,0BAAAA,SAA0BC,EAAeC,EAAUb,EAAUc,GACzD,IAAIC,EAAgBpC,KAAKD,QAAQU,eAA7B,IAA+CT,KAAKF,aAAauC,KAAKC,cAAtE,iBAAoGJ,EAASI,cAC7GC,EAAUJ,EAAa,UAAY,GAEbnC,KAAKH,OAAL,yHACwCuC,EADxC,KACuDG,EADvD,+DAEyBH,EAFzB,KAEwCf,EAFxC,4BAILU,SAASE,GAC9BA,EAAcV,SAASvB,KAAKD,QAAQY,mBACpC,IAAI6B,EAAYP,EAAcQ,KAAd,0BAIhB,OAHwB,SAACN,GACrBK,EAAUE,KAAK,UAAWP,OAKlCQ,KAAAA,SAAKC,EAAYC,EAAgBC,EAAkBC,EAAcC,GAI7DJ,EAAWrB,SAASvB,KAAKD,QAAQU,gBAE5BT,KAAKD,QAAQa,mBAMdiC,EAAetB,SAASvB,KAAKD,QAAQa,qBALrCiC,EAAetB,SANW,gBAO1BsB,EAAerB,IANW,CAACyB,gBAAiB,MAO5CJ,EAAerB,IAAI,CAAE0B,aAAelD,KAAKD,QAAQoD,0BAMrD,IAAIC,EAAgBpD,KAAKH,OAAOG,KAAKF,cACjCsD,EAAcC,SAAS,aACvBR,EAAetB,SAAS,YAGxB6B,EAAcC,SAAS,eACvBR,EAAetB,SAAS,cAG5ByB,EAAczB,SAASvB,KAAKD,QAAQW,mBAE/BV,KAAKD,QAAQkB,sBACd6B,EAAiBvB,SAASvB,KAAKD,QAAQkB,sBAGtCjB,KAAKD,QAAQmB,iBAGd6B,EAAaxB,SAASvB,KAAKD,QAAQmB,kBAFnC6B,EAAavB,IAAI,QAASxB,KAAKD,QAAQS,qBAM/C8C,OAAAA,SAAOT,EAAgBU,GACnB,GAAGA,EAAU,CACT,IAAIC,EAAUxD,KAAKF,aAAa2D,GAC5BC,EAAa1D,KAAKH,OAAOG,KAAKF,cAAc6D,QAAQ,eAExD,GAAyB,GAArBD,EAAWE,OAAa,CACxB,IAAIC,EAASH,EAAWjB,KAAX,cAA8Be,EAA9B,MACTM,EAAID,EAAOE,KAAK,OAChBhB,EAAeF,EAAeJ,KAAK,SACvC,GAAIqB,GAAK9D,KAAKF,aAAa2D,GAAI,CAC3B,IAAIA,EAAQzD,KAAKD,QAAQU,eAArB,wBAA2DT,KAAKF,aAAa2D,GACjFV,EAAagB,KAAK,KAAMN,GACxBI,EAAOE,KAAK,MAAON,UAKvBzD,KAAKD,QAAQe,2BAGb+B,EAAetB,SAASvB,KAAKD,QAAQe,4BAFrC+B,EAAerB,IAAI,CAACwC,mBAAoBhE,KAAKD,QAAQI,uCAIzD0C,EAAeJ,KAAK,UAAUC,KAAK,YAAY,GAAMuB,SAI7DC,MAAAA,SAAMjC,EAAekC,GACbA,EACAlC,EAAcV,SAAS,gBAAgBA,SAAS,YAEhDU,EAAcmC,YAAY,gBAAgBA,YAAY,eAG9DC,YAAAA,SAAYC,GACR,QAAkC,UAAzBA,EAAMC,OAAOC,UAAkD,QAAzBF,EAAMC,OAAOC,UAA6D,UAAvCF,EAAMC,OAAOE,cAAcD,aAGjHE,MAAAA,SAAM7B,EAAgB8B,GACdA,EACI3E,KAAKD,QAAQc,wBACbgC,EAAetB,SAAS,wCAIpBsB,EAAeQ,SAAS,aAAgBrD,KAAKD,QAAQO,4BACrDuC,EAAerB,IAAI,aAAcxB,KAAKD,QAAQO,6BACvCuC,EAAeQ,SAAS,eAAiBrD,KAAKD,QAAQQ,8BAC7DsC,EAAerB,IAAI,aAAcxB,KAAKD,QAAQQ,+BAE9CsC,EACKrB,IAAI,aAAcxB,KAAKD,QAAQK,wBAC/BoB,IAAI,eAAgBxB,KAAKD,QAAQM,0BAK1CL,KAAKD,QAAQc,wBACbgC,EAAeuB,YAAYpE,KAAKD,QAAQc,yBAExCgC,EAAerB,IAAI,aAAc,IAAKA,IAAI,eAAgB,iBCvKnD,SAACoD,EAAQC,EAAGC,GAC/B,IAAMC,EAAqBF,EAAEG,GAAGC,GAC1BA,EAAa,6BACbC,EAAAA,UAAoBD,EAEpBE,EAA2B,CAACC,QAAU,OAAQC,YAAY,OAAQC,kBAAkB,QACpFC,EAA2B,CAACC,MAAQ,MAAOC,OAAS,IAAKC,QAAU,IAAKC,QAAU,OAAQ3B,mBAAmB,eAC7G4B,EAA2B,CAACN,kBAAkB,QAE9CO,EAAW,CACbC,eAAc,GAGZC,EAboC,WActC,SAAAA,EAAYC,EAAejG,EAASkG,GAChC,GAAsB,oBAAXnB,EACP,MAAM,IAAIoB,UAAU,yEAIxBlG,KAAKgG,cAAgBA,EACrBhG,KAAKD,QAAU8E,EAAE5E,OAAO,GAAI4F,EAAU9F,GAEtCC,KAAKiG,QAAUA,GAAgB,IAAIrG,EAAkBiF,EAAG7E,KAAKgG,eAE7DhG,KAAKmG,UAAY,KACjBnG,KAAKoG,cAAgB,KACrBpG,KAAKqG,gBAAkB,KACvBrG,KAAKsG,YAAc,KACnBtG,KAAKuG,aAAe,KACpBvG,KAAKwG,OAAS,KAGdxG,KAAKyG,0BAA4B,KACjCzG,KAAK0G,cAAe,EACpB1G,KAAK2G,oBAAsB,KAC3B3G,KAAK4G,qBAAuB,KAC5B5G,KAAK6G,oBAAqB,EAC1B7G,KAAK8G,OAtC6B,IAAAC,EAAAhB,EAAAiB,UAAA,OAAAD,EAyCtCE,uBAzCsC,SAyCfC,GACnB,IAAIC,EAAanH,KAAKqG,gBAAgBc,YAClCD,GAASlH,KAAKyG,2BAA2BU,KACzCnH,KAAKwG,OAAOY,SACZpH,KAAKyG,0BAA0BU,IA7CDJ,EAiDtCM,aAjDsC,WAkDlCrH,KAAKuG,aAAae,MAAMlC,QAAU,QAlDA2B,EAqDtCQ,aArDsC,WAsDlCvH,KAAKuG,aAAae,MAAMlC,QAAU,SAtDA2B,EA0DtCS,uBA1DsC,WA2DD,OAA7BxH,KAAK2G,sBACL3G,KAAKiG,QAAQ/B,MAAMW,EAAE7E,KAAK2G,sBAAsB,GAChD3G,KAAK2G,oBAAsB,MAE/B3G,KAAK4G,qBAAuB,MA/DMG,EAkEtCU,mBAlEsC,WAmElC,IAAIC,EAAO1H,KAAKsG,YAAYqB,MAAMC,OAAOtF,cACrCuF,EAAU,EACdhD,EAAE7E,KAAKuG,cAAc9D,KAAK,MAAMqF,KAAK,SAACC,EAAGC,GACrC,IAAIC,EAAoBpD,EAAEmD,GAC1B,GAAY,IAARN,EACAO,EAAkBC,OAClBL,QAEC,CACD,IAAIxG,EAAW4G,EAAkBE,KAAK,gBACrBF,EAAkBE,KAAK,oBACG,GAAxB9G,EAAS+G,QAAQV,IAChCO,EAAkBC,OAClBL,KAEAI,EAAkBI,UAI9BrI,KAAK6G,mBAA+B,EAAVgB,EAC1B7H,KAAKwH,0BAvF6BT,EA0FtCuB,iBA1FsC,SA0FrBC,GACTvI,KAAKsG,YAAYqB,QACjB3H,KAAKsG,YAAYqB,MAAQ,GACzB3H,KAAKwI,MAAMD,KA7FmBxB,EAiGtC0B,cAjGsC,WAkGlCzI,KAAKwH,yBACLxH,KAAKsI,kBAAiB,GACtBtI,KAAKqH,gBApG6BN,EAuGtC2B,mBAvGsC,SAuGnBC,GAAe,IAAAC,EAAA5I,KAC1BkC,EAAWyG,EAAchB,MACzBtG,EAAWsH,EAAcjB,KACzBvF,EAAawG,EAAcE,SAC3B5G,EAAgB4C,EAAE,SACtB5C,EAAckG,KAAK,YAAajG,GAChCD,EAAckG,KAAK,cAAe9G,EAASiB,eAE3C,IAAIwG,EAAoB9I,KAAKiG,QAAQjE,0BAA0BC,EAAeC,EAAUb,EAAUc,GAClGF,EAAcF,SAAS/B,KAAKuG,cAE5B,IAAIwC,EAAa,SAAbA,IACA9G,EAAckG,KAAK,mBAAmB,GACtC,IAAI/G,EAAgByD,EAAE,SACtBzD,EAAc+G,KAAK,YAAajG,GAChCyG,EAAcE,UAAW,EACzBC,GAAkB,GAElB,IAAIE,EAAa,WACb/G,EAAckG,KAAK,mBAAmB,GACtClG,EAAckG,KAAK,gBAAiBY,GACpC3H,EAAc+G,KAAK,gBAAiB,MACpC/G,EAAc6H,SACdN,EAAcE,UAAW,EACzBC,GAAkB,IAElBI,EAA6B,WAC7BF,IACAJ,EAAKH,iBAUT,OARAG,EAAK3C,QAAQ9E,0BACTC,EACAC,EACA6H,GAEJ9H,EAAc+H,aAAaP,EAAKvC,iBAChCpE,EAAckG,KAAK,gBAAiBa,GACpC5H,EAAc+G,KAAK,gBAAiBe,GAC7B9H,GAEXa,EAAckG,KAAK,gBAAiB,WAAA,OAAMY,MAEtC5G,GACA4G,KAlJ8BhC,EAsJtCqC,aAtJsC,SAsJzBC,GACT,IAAIC,EAAuBzE,EAAE7E,KAAKuG,cAAc9D,KAAK,oCAAoC8G,UACzF,GAAkC,EAA9BD,EAAqB1F,OAAY,CAKjC,GAJI5D,KAAK6G,qBACL7G,KAAKiH,wBAAuB,GAC5BjH,KAAKuH,gBAEwB,OAA7BvH,KAAK2G,oBACL3G,KAAK4G,qBAAuByC,EAAO,EAAIC,EAAqB1F,OAAS,OAIrE,GADA5D,KAAKiG,QAAQ/B,MAAMW,EAAE7E,KAAK2G,sBAAsB,GAC5C0C,EAAM,CACN,IAAIG,EAAWxJ,KAAK4G,qBAAuB,EAC3C5G,KAAK4G,qBAAuB4C,EAAWF,EAAqB1F,OAAS4F,EAAW,MAC7E,CACH,IAAIA,EAAWxJ,KAAK4G,qBAAuB,EAC3C5G,KAAK4G,qBAAmC,GAAZ4C,EAAgBA,EAAWF,EAAqB1F,OAAS,EAG7F5D,KAAK2G,oBAAsB2C,EAAqBtJ,KAAK4G,sBACrD5G,KAAKiG,QAAQ/B,MAAMW,EAAE7E,KAAK2G,sBAAsB,KA3KlBI,EA+KtCyB,MA/KsC,SA+KhCiB,GACFzJ,KAAKsG,YAAYgB,MAAM9B,MAAsC,IAA9BxF,KAAKsG,YAAYqB,MAAM/D,OAAa,EAAI,KACvE5D,KAAKyH,qBACDzH,KAAK6G,oBACD4C,GACAzJ,KAAKiH,uBAAuBwC,GAChCzJ,KAAKuH,gBAELvH,KAAKqH,gBAvLyBN,EA2LtCD,KA3LsC,WA2L/B,IAAA4C,EAAA1J,KACCoD,EAAgByB,EAAE7E,KAAKgG,eAC3B5C,EAAciF,OACd,IAAIsB,EAAW3J,KAAKgG,cAAc2D,SAE9B/G,EAAaiC,EAAE,UACnB7E,KAAKmG,UAAYvD,EAAWgH,IAAI,GAEhC,IAAI/G,EAAiBgC,EAAE,SACvBhC,EAAerB,IAAI2D,GAEnBnF,KAAKoG,cAAgBvD,EAAe+G,IAAI,GAExC/G,EAAed,SAAS/B,KAAKmG,WAE7B,IAAIrD,EAAmB+B,EAAE,SACzB7E,KAAKqG,gBAAkBvD,EAAiB8G,IAAI,GAE5C9G,EAAiBf,SAAS/B,KAAKoG,eAE/B,IAAIrD,EAAe8B,EAAE,4CACrB9B,EAAavB,IAAI+D,GACjBxC,EAAahB,SAAS/B,KAAKqG,iBAC3BrG,KAAKsG,YAAcvD,EAAa6G,IAAI,GAEpC,IAAI5G,EAAgB6B,EAAE,SACjBrD,IAAI,CAAC4D,QAAU,SACfrD,SAASa,GACd5C,KAAKuG,aAAevD,EAAc4G,IAAI,GAGtC5G,EAAcxB,IAAIoE,GAElB5F,KAAKiG,QAAQtD,KAAKC,EAAYC,EAAgBC,EAAkBC,EAAcC,GAC9EJ,EAAWiH,YAAYzG,GAEvBpD,KAAKwG,OAAS,IAAI1B,EAAO9E,KAAKsG,YAAatG,KAAKuG,aAAc,CAC1DuD,UAAW,eACXC,UAAW,CACPC,gBAAiB,CAACC,SAAQ,GAC1B5B,KAAM,CAAC4B,SAAQ,GACfC,KAAM,CAAED,SAAQ,MAKxBpF,EAAEsF,UAAUC,MAAM,WACd,IAAIC,EAAgBjH,EAAcX,KAAK,UACvC4H,EAAcvC,KACV,SAACwC,EAAO3B,GACJe,EAAKhB,mBAAmBC,KAGhCe,EAAK7C,mBAA4C,EAAvBwD,EAAczG,OACxC8F,EAAKzC,wBAAuB,GAE5BjE,EAAcP,KAAK,MAAM8H,MAAM,SAAAjG,GAC3BA,EAAMkG,iBACNlG,EAAMmG,kBACW5F,EAAEP,EAAMoG,eAAe/G,QAAQ,MAAMwE,KAAK,gBAC3DwC,GACAjB,EAAKpD,YAAYsE,UAGrB5H,EAAcP,KAAK,MAAMX,GAAG,YAAa,SAAAwC,GACrCoF,EAAKzD,QAAQ/B,MAAMW,EAAEP,EAAMC,QAAQZ,QAAQ,OAAO,KAGtDX,EAAcP,KAAK,MAAMX,GAAG,WAAY,SAAAwC,GACpCoF,EAAKzD,QAAQ/B,MAAMW,EAAEP,EAAMC,QAAQZ,QAAQ,OAAO,KAGlDgG,GACAD,EAAKpD,YAAYgB,MAAMlC,QAAU,OACjCsE,EAAKzD,QAAQ3C,OAAOT,GAAgB,KAEpC6G,EAAKpD,YAAYgB,MAAMlC,QAAU,eACjCsE,EAAKzD,QAAQ3C,OAAOT,GAAgB,GAEpCA,EAAe0H,MAAM,SAACjG,GACW,SAAzBA,EAAMC,OAAOC,UACbzB,EAAa8H,IAAI,IAAID,QACrBlB,EAAK7C,oBACD6C,EAAKzD,QAAQ5B,YAAYC,KACzBoF,EAAKzC,wBAAuB,GAC5ByC,EAAKnC,kBAIjBvE,EAAcuH,MAAM,SAACjG,GACjBA,EAAMmG,oBAGVzH,EAAclB,GAAG,YAAa,WAAA,OAAM4H,EAAKlC,2BAErCkC,EAAK3J,QAAQ+F,gBAEb/C,EAAa+H,QAAQ,WACjBpB,EAAKzD,QAAQvB,MAAM7B,GAAgB,KAGvCE,EAAagI,SAAS,WACbrB,EAAKhD,cACNgD,EAAKzD,QAAQvB,MAAM7B,GAAgB,KAI3CD,EAAWoI,UAAU,WACjBtB,EAAKhD,cAAe,IAGxB7B,EAAED,EAAOuF,UAAUc,QAAQ,WACvBvB,EAAKhD,cAAe,KAI5B7B,EAAED,EAAOuF,UAAUc,QAAQ,SAAC3G,GAClBoF,EAAKvD,YAAc7B,EAAMC,QAAUM,EAAEqG,SAASxB,EAAKvD,UAAW7B,EAAMC,SACtEmF,EAAKjB,qBAMrB1F,EAAajB,GAAG,UAAW,SAACwC,GACxB,GAAmB,IAAfA,EAAM6G,MACN7G,EAAMkG,iBACNd,EAAKN,cAAa,QAEjB,GAAmB,IAAf9E,EAAM6G,MACX7G,EAAMkG,iBACNd,EAAKN,cAAa,QAEjB,GAAmB,IAAf9E,EAAM6G,MACX7G,EAAMkG,sBAEL,GAAmB,GAAflG,EAAM6G,MACPzB,EAAKpD,YAAYqB,MACjBrD,EAAMkG,iBAGNd,EAAKjB,oBAGR,CACD,GAAmB,GAAfnE,EAAM6G,QAIDzB,EAAKpD,YAAYqB,MACtB,CACI,IAAIyD,EAAUvG,EAAE6E,EAAKtD,eAAe3D,KAAK,WAAW4I,OACpD,GAAID,EAAQxH,OACSwH,EAAQjD,KAAK,gBAC9Ba,GAEJU,EAAKzC,wBAAuB,GAGpCyC,EAAKlC,4BAIbzE,EAAajB,GAAG,QAAS,SAACwC,GACtB,GAAmB,IAAfA,EAAM6G,OAA8B,GAAf7G,EAAM6G,MAC3B,GAAIzB,EAAK/C,oBAAqB,CACC9B,EAAE6E,EAAK/C,qBACKwB,KAAK,gBAC5CwC,GACAjB,EAAKjB,oBACF,CAIH,IAHA,IAAIf,EAAOgC,EAAKpD,YAAYqB,MAAMC,OAAOtF,cACrCgJ,EAAgB5B,EAAKnD,aAAagF,iBAAiB,MACnDC,EAAe,KACVzD,EAAI,EAAGA,EAAIuD,EAAc1H,SAAUmE,EAAG,CAC3C,IAAI0D,EAAKH,EAAcvD,GACvB,GAAI0D,EAAGC,YAAY9D,OAAOtF,eAAiBoF,EAC3C,CACI8D,EAAaC,EACb,OAGR,GAAID,EAAc,CACd,IAAIvJ,EAAgB4C,EAAE2G,GAEtB,IADiBvJ,EAAckG,KAAK,mBAEnBlG,EAAckG,KAAK,gBAChCwD,GAEJjC,EAAKpB,kBAAiB,SAIV,IAAfhE,EAAM6G,OACXzB,EAAKjB,kBAIb1F,EAAajB,GAAG,QAAS,WACrB4H,EAAKlB,OAAM,MAlYmBzC,EAAA,GAuY1C,SAAS6F,EAAgB7L,GACrB,OAAOC,KAAK8H,KAAK,WACb,IAAIK,EAAOtD,EAAE7E,MAAMmI,KAAKjD,GAExB,IAAKiD,EAAM,CACP,GAAI,eAAe0D,KAAK9L,GACpB,OAGJoI,EAAO,IAAIpC,EAAO/F,KADwB,iBAAZD,EAAsBA,EAAQ,MAE5D8E,EAAE7E,MAAMmI,KAAKjD,EAASiD,GAG1B,GAAuB,iBAAZpI,EAAsB,CAC7B,IAAI+L,EAAa/L,EACjB,GAAgC,oBAArBoI,EAAK2D,GACZ,MAAM,IAAI5F,UAAJ,oBAAkC4F,EAAlC,KAEV3D,EAAK2D,QAkBjB,OAbAjH,EAAEG,GAAGC,GAAc2G,EAGnB/G,EAAEG,GAAGC,EAAW8G,OAAO,GAAGC,cAAgB/G,EAAWgH,MAAM,IAAM,WAC7D,OAAOpH,EAAE7E,MAAMmI,KAAK,UAAYlD,IAGpCJ,EAAEG,GAAGC,GAAYiH,YAAcnG,EAE/BlB,EAAEG,GAAGC,GAAYkH,WAAa,WAE1B,OADAtH,EAAEG,GAAGC,GAAcF,EACZ6G,GAEJ7F,EA3aY,CA4apBnB,OAAQC,EAAGC","sourcesContent":["class Bootstrap4Adapter {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            //usePopper: true,\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelReadonlyBackgroundColor: '#e9ecef',\r\n            selectedPanelBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelBorderColor: '#80bdff', \r\n            selectedPanelValidBoxShadow: ' 0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057',\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass: 'px-2',\r\n            selectedPanelClass: '',\r\n            selectedPanelFocusClass : '',\r\n            selectedPanelReadonlyClass: '',\r\n            selectedItemClass: '', \r\n            \r\n            removeSelectedItemButtonClass: '',\r\n            \r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        \r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem){\r\n        const defSelectedItemClass = 'badge';\r\n        const defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1rem'};\r\n        const defRemoveSelectedItemButtonClass = 'close';\r\n        const defRemoveSelectedItemButtonStyle = {'line-height': '1rem', 'font-size':'1.3rem'};\r\n\r\n        if (!this.options.selectedItemClass){\r\n            $selectedItem.addClass(defSelectedItemClass);\r\n            $selectedItem.css(defSelectedItemStyle)\r\n        }else{\r\n            $selectedItem.addClass(this.options.selectedItemClass);\r\n        }\r\n            \r\n        let $text = this.jQuery(`<span>${itemText}</span>`)\r\n        let $buttom = this.jQuery('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>');\r\n\r\n        if (!this.options.removeSelectedItemButtonClass){\r\n            $buttom.addClass(defRemoveSelectedItemButtonClass);\r\n            $buttom.css(defRemoveSelectedItemButtonStyle);\r\n        }\r\n        else{\r\n            $buttom.addClass(this.options.removeSelectedItemButtonClass)\r\n        }\r\n        $buttom.on(\"click\", removeSelectedItem);\r\n        $text.appendTo($selectedItem);\r\n        $buttom.appendTo($selectedItem); \r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        let checkBoxId = `${this.options.containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.jQuery(`<div class=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n                <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        $dropDownItem.addClass(this.options.dropDownItemClass)\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected) => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        const defSelectedPanelClass = 'form-control';\r\n        const defSelectedPanelStyle = {'margin-bottom': '0'}; // 16 is for bootstrap reboot for UL\r\n\r\n        $container.addClass(this.options.containerClass);\r\n\r\n        if (!this.options.selectedPanelClass){\r\n            $selectedPanel.addClass(defSelectedPanelClass);\r\n            $selectedPanel.css(defSelectedPanelStyle);\r\n            $selectedPanel.css({ \"min-height\" : this.options.selectedPanelMinHeight });\r\n        }\r\n        else {\r\n            $selectedPanel.addClass(this.options.selectedPanelClass);\r\n        }\r\n\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n        \r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n\r\n        $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n\r\n        if (!this.options.filterInputItemClass)\r\n            $filterInputItem.addClass(this.options.filterInputItemClass)\r\n\r\n\r\n        if (!this.options.filterInputClass){\r\n            $filterInput.css(\"color\", this.options.filterInputColor);\r\n        } else {\r\n            $filterInput.addClass(this.options.filterInputClass);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            let inputId = this.hiddenSelect.id;\r\n            let $formGroup = this.jQuery(this.hiddenSelect).closest('.form-group');\r\n            \r\n            if ($formGroup.length == 1) {\r\n                let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n                let f = $label.attr('for');\r\n                let $filterInput = $selectedPanel.find('input');\r\n                if (f == this.hiddenSelect.id) {\r\n                    let id = `${this.options.containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                    $filterInput.attr('id', id);\r\n                    $label.attr('for', id);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(!this.options.selectedPanelReadonlyClass){\r\n                $selectedPanel.css({\"background-color\": this.options.selectedPanelReadonlyBackgroundColor});\r\n            }else{\r\n                $selectedPanel.addClass(this.options.selectedPanelReadonlyClass);\r\n            }\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true).off();\r\n        }\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        if (isHover)\r\n            $dropDownItem.addClass('text-primary').addClass('bg-light');\r\n        else\r\n            $dropDownItem.removeClass('text-primary').removeClass('bg-light');\r\n    }\r\n\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n            if (this.options.selectedPanelFocusClass){\r\n                $selectedPanel.addClass(\"this.options.selectedPanelFocusClass\");\r\n            }\r\n            else\r\n            {\r\n                if ($selectedPanel.hasClass(\"is-valid\") &&  this.options.selectedPanelValidBoxShadow){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelValidBoxShadow);              \r\n                } else if ($selectedPanel.hasClass(\"is-invalid\") && this.options.selectedPanelInvalidBoxShadow){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelInvalidBoxShadow);\r\n                } else {\r\n                    $selectedPanel\r\n                        .css(\"box-shadow\", this.options.selectedPanelBoxShadow)\r\n                        .css(\"border-color\", this.options.selectedPanelBorderColor);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.options.selectedPanelFocusClass){\r\n                $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n            } else {\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bootstrap4Adapter;","import $ from 'jquery'\nimport Popper from 'popper.js'\nimport Bootstrap4Adapter from './Bootstrap4Adapter.es8'\n\n// TODO: try to find convinient way to declare private members. Is it convinient enough to move them into IIFE?\nconst BsMultiSelect = ((window, $, Popper) => {\n    const JQUERY_NO_CONFLICT = $.fn[pluginName];\n    const pluginName = 'dashboardCodeBsMultiSelect';\n    const dataKey = `plugin_${pluginName}`;\n\n    const defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\n    const defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\n    const defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\n\n    const defaults = {\n        doManageFocus:true\n    }\n\n    class Plugin {\n        constructor(selectElement, options, adapter) {\n            if (typeof Popper === 'undefined') {\n                throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\n            }\n\n            // readonly\n            this.selectElement = selectElement;\n            this.options = $.extend({}, defaults, options);\n\n            this.adapter = adapter?adapter:new Bootstrap4Adapter($, this.selectElement);\n            \n            this.container = null;\n            this.selectedPanel = null;\n            this.filterInputItem = null;\n            this.filterInput = null;\n            this.dropDownMenu = null;\n            this.popper = null;\n\n            // state\n            this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\n            this.skipFocusout = false; \n            this.hoveredDropDownItem = null;\n            this.hoveredDropDownIndex = null;\n            this.hasDropDownVisible = false;\n            this.init();\n        }\n\n        updateDropDownPosition(force) {\n            let offsetLeft = this.filterInputItem.offsetLeft;\n            if (force || this.filterInputItemOffsetLeft!=offsetLeft){\n                this.popper.update();\n                this.filterInputItemOffsetLeft=offsetLeft;\n            }\n        }\n\n        hideDropDown() {\n            this.dropDownMenu.style.display = 'none';\n        }\n\n        showDropDown() {\n            this.dropDownMenu.style.display = 'block';\n        }\n\n        // Public methods\n        resetDropDownMenuHover() {\n            if (this.hoveredDropDownItem !== null) {\n                this.adapter.Hover($(this.hoveredDropDownItem), false);\n                this.hoveredDropDownItem = null;\n            }\n            this.hoveredDropDownIndex = null;\n        }\n\n        filterDropDownMenu() {\n            let text = this.filterInput.value.trim().toLowerCase();\n            let visible = 0;\n            $(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\n                let $dropDownMenuItem = $(dropDownMenuItem);\n                if (text == '') {\n                    $dropDownMenuItem.show();\n                    visible++;\n                }\n                else {\n                    let itemText = $dropDownMenuItem.data(\"option-text\");\n                    let isSelected = $dropDownMenuItem.data(\"option-selected\"); \n                    if (!isSelected && itemText.indexOf(text)>=0) {\n                        $dropDownMenuItem.show();\n                        visible++;\n                    } else {\n                        $dropDownMenuItem.hide();\n                    }\n                }\n            });\n            this.hasDropDownVisible = visible > 0;\n            this.resetDropDownMenuHover();\n        }\n\n        clearFilterInput(updatePosition) {\n            if (this.filterInput.value) {\n                this.filterInput.value = '';\n                this.input(updatePosition);\n            }\n        }\n\n        closeDropDown() {\n            this.resetDropDownMenuHover();\n            this.clearFilterInput(true);\n            this.hideDropDown();\n        }\n\n        appendDropDownItem(optionElement) {\n            let optionId = optionElement.value;\n            let itemText = optionElement.text;\n            let isSelected = optionElement.selected;\n            let $dropDownItem = $(\"<LI/>\");\n            $dropDownItem.data(\"option-id\", optionId);\n            $dropDownItem.data(\"option-text\", itemText.toLowerCase());\n\n            let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\n            $dropDownItem.appendTo(this.dropDownMenu);\n\n            let appendItem = () => {\n                $dropDownItem.data(\"option-selected\", true);\n                let $selectedItem = $(\"<LI/>\");\n                $selectedItem.data(\"option-id\", optionId);\n                optionElement.selected = true;\n                adoptDropDownItem(true);\n\n                let removeItem = () => {\n                    $dropDownItem.data(\"option-selected\", false);\n                    $dropDownItem.data(\"option-toggle\", appendItem);\n                    $selectedItem.data(\"option-remove\", null);\n                    $selectedItem.remove();\n                    optionElement.selected = false;\n                    adoptDropDownItem(false);\n                };\n                let removeItemAndCloseDropDown = () => {\n                    removeItem();\n                    this.closeDropDown();\n                };\n                this.adapter.CreateSelectedItemContent(\n                    $selectedItem, \n                    itemText, \n                    removeItemAndCloseDropDown\n                );\n                $selectedItem.insertBefore(this.filterInputItem);\n                $dropDownItem.data(\"option-toggle\", removeItem);\n                $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\n                return $selectedItem;\n            }\n            $dropDownItem.data(\"option-toggle\", () => appendItem());\n            \n            if (isSelected) {\n                appendItem();\n            }\n        }\n\n        keydownArrow(down) {\n            let visibleNodeListArray = $(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\n            if (visibleNodeListArray.length > 0) {\n                if (this.hasDropDownVisible) {\n                    this.updateDropDownPosition(true);\n                    this.showDropDown();\n                }\n                if (this.hoveredDropDownItem === null) {\n                    this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\n                }\n                else {\n                    this.adapter.Hover($(this.hoveredDropDownItem), false);\n                    if (down) {\n                        let newIndex = this.hoveredDropDownIndex + 1;\n                        this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\n                    } else {\n                        let newIndex = this.hoveredDropDownIndex - 1;\n                        this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\n                    }\n                }\n                this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\n                this.adapter.Hover($(this.hoveredDropDownItem), true);\n            }\n        }\n\n        input(forceUpdatePosition) {\n            this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\n            this.filterDropDownMenu();\n            if (this.hasDropDownVisible) {\n                if (forceUpdatePosition) // ignore it if it is called from \n                    this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\n                this.showDropDown();\n            } else {\n                this.hideDropDown();\n            }\n        }\n\n        init() {\n            let $hiddenSelect = $(this.selectElement);\n            $hiddenSelect.hide();\n            let disabled = this.selectElement.disabled;\n\n            let $container = $(\"<DIV/>\");\n            this.container = $container.get(0);\n\n            let $selectedPanel = $(\"<UL/>\");\n            $selectedPanel.css(defSelectedPanelStyleSys);\n            \n            this.selectedPanel = $selectedPanel.get(0);\n            \n            $selectedPanel.appendTo(this.container);\n\n            let $filterInputItem = $('<LI/>');\n            this.filterInputItem = $filterInputItem.get(0)\n\n            $filterInputItem.appendTo(this.selectedPanel);\n\n            let $filterInput = $('<INPUT type=\"search\" autocomplete=\"off\">');\n            $filterInput.css(defFilterInputStyleSys);\n            $filterInput.appendTo(this.filterInputItem);\n            this.filterInput = $filterInput.get(0);\n\n            let $dropDownMenu = $(\"<UL/>\")\n                .css({\"display\":\"none\"})\n                .appendTo($container);\n            this.dropDownMenu = $dropDownMenu.get(0);\n            \n            // prevent heavy understandable styling error\n            $dropDownMenu.css(defDropDownMenuStyleSys);\n\n            this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu);\n            $container.insertAfter($hiddenSelect);\n            \n            this.popper = new Popper(this.filterInput, this.dropDownMenu, {\n                placement: 'bottom-start',\n                modifiers: {\n                    preventOverflow: {enabled:false},\n                    hide: {enabled:false},\n                    flip: { enabled:false }\n                    }\n            });\n            \n            // some browsers (IE11) can change select value (\"autocomplete\") after page is loaded but before \"ready\" event\n            $(document).ready(() => {\n                let selectOptions = $hiddenSelect.find('OPTION');\n                selectOptions.each(\n                    (index, optionElement) => {\n                        this.appendDropDownItem(optionElement);\n                    }\n                );\n                this.hasDropDownVisible = selectOptions.length > 0;\n                this.updateDropDownPosition(false);\n\n                $dropDownMenu.find('LI').click(event => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    let toggleItem = $(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\n                    toggleItem();\n                    this.filterInput.focus(); \n                });\n\n                $dropDownMenu.find(\"LI\").on(\"mouseover\", event => {\n                    this.adapter.Hover($(event.target).closest(\"LI\"), true);\n                });\n\n                $dropDownMenu.find(\"LI\").on(\"mouseout\", event => {\n                    this.adapter.Hover($(event.target).closest(\"LI\"), false);\n                });\n\n                if (disabled) {\n                    this.filterInput.style.display = \"none\";\n                    this.adapter.Enable($selectedPanel, false);\n                } else {\n                    this.filterInput.style.display = \"inline-block\";\n                    this.adapter.Enable($selectedPanel, true);\n                    \n                    $selectedPanel.click((event) => {\n                        if (event.target.nodeName != \"INPUT\")\n                            $filterInput.val('').focus();\n                        if (this.hasDropDownVisible)\n                            if (this.adapter.FilterClick(event)){\n                                this.updateDropDownPosition(true);\n                                this.showDropDown();\n                            }\n                    });\n    \n                    $dropDownMenu.click((event) => {\n                        event.stopPropagation();\n                    });\n    \n                    $dropDownMenu.on(\"mouseover\", () => this.resetDropDownMenuHover());\n    \n                    if (this.options.doManageFocus)\n                    {\n                        $filterInput.focusin(() => {\n                            this.adapter.Focus($selectedPanel, true);\n                        });\n    \n                        $filterInput.focusout(() => {\n                            if (!this.skipFocusout) {\n                                this.adapter.Focus($selectedPanel, false);\n                            }\n                        });\n    \n                        $container.mousedown(() => {\n                            this.skipFocusout = true;\n                        });\n    \n                        $(window.document).mouseup(() => {\n                            this.skipFocusout = false;\n                        });\n                    }\n    \n                    $(window.document).mouseup((event) => {\n                        if (!(this.container === event.target || $.contains(this.container, event.target))) {\n                            this.closeDropDown();\n                        }\n                    });\n                }\n            });\n\n            $filterInput.on(\"keydown\", (event) => {\n                if (event.which == 38) {\n                    event.preventDefault();\n                    this.keydownArrow(false);\n                }\n                else if (event.which == 40) {\n                    event.preventDefault()\n                    this.keydownArrow(true);\n                }\n                else if (event.which == 13) {\n                    event.preventDefault();\n                }\n                else if (event.which == 9) {\n                    if (this.filterInput.value) {\n                        event.preventDefault();\n                    }\n                    else {\n                        this.closeDropDown();\n                    }\n                }\n                else {\n                    if (event.which == 8) {\n                        // NOTE: this will process backspace only if there are no text in the input field\n                        // If user will find this inconvinient, we will need to calculate something like this\n                        // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\n                        if (!this.filterInput.value)\n                        {\n                            let $penult = $(this.selectedPanel).find(\"LI:last\").prev();\n                            if ($penult.length){\n                                let removeItem = $penult.data(\"option-remove\");\n                                removeItem();\n                            }\n                            this.updateDropDownPosition(false);\n                        }\n                    }\n                    this.resetDropDownMenuHover();\n                }\n            });\n\n            $filterInput.on(\"keyup\", (event) => {\n                if (event.which == 13 || event.which == 9 ) {\n                    if (this.hoveredDropDownItem) {\n                        let $hoveredDropDownItem = $(this.hoveredDropDownItem);\n                        let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\n                        toggleItem();\n                        this.closeDropDown();\n                    } else {\n                        let text = this.filterInput.value.trim().toLowerCase();\n                        let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\n                        let dropDownItem = null;\n                        for (let i = 0; i < dropDownItems.length; ++i) {\n                            let it = dropDownItems[i];\n                            if (it.textContent.trim().toLowerCase() == text)\n                            {\n                                dropDownItem=it;\n                                break;\n                            }\n                        }\n                        if (dropDownItem) {\n                            let $dropDownItem = $(dropDownItem);\n                            let isSelected = $dropDownItem.data(\"option-selected\");\n                            if (!isSelected){\n                                let toggle = $dropDownItem.data(\"option-toggle\");\n                                toggle();\n                            }\n                            this.clearFilterInput(true);\n                        }\n                    }\n                } \n                else if (event.which == 27) { // escape\n                    this.closeDropDown();\n                }\n            });\n\n            $filterInput.on('input', () => { \n                this.input(true);\n            });\n        }\n    }\n\n    function jQueryInterface(options) {\n        return this.each(function () {\n            let data = $(this).data(dataKey)\n\n            if (!data) {\n                if (/dispose|hide/.test(options)) {\n                    return;\n                }\n                const optionsObject = (typeof options === 'object')?options:null;\n                data = new Plugin(this, optionsObject);\n                $(this).data(dataKey, data);\n            }\n\n            if (typeof options === 'string') {\n                let methodName = options;\n                if (typeof data[methodName] === 'undefined') {\n                    throw new TypeError(`No method named \"${methodName}\"`)\n                }\n                data[methodName]()\n            }\n        })\n    }\n\n    $.fn[pluginName] = jQueryInterface;\n\n    // in case of mulitple $(this) it will return 1st element plugin instance\n    $.fn[pluginName.charAt(0).toUpperCase() + pluginName.slice(1)] = function () {\n        return $(this).data(\"plugin_\" + pluginName);\n    };\n\n    $.fn[pluginName].Constructor = Plugin;\n\n    $.fn[pluginName].noConflict = function () {\n        $.fn[pluginName] = JQUERY_NO_CONFLICT\n        return jQueryInterface;\n    }\n    return Plugin;\n})(window, $, Popper);\n\nexport default BsMultiSelect;\n"]}