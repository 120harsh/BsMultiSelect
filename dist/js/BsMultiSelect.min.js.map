{"version":3,"sources":["../../js/src/BsMultiSelect.js","../../js/src/Bs4Commons.js","../../js/src/Bs4AdapterCss.js","../../js/src/Bs4Adapter.js","../../js/src/MultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["window","$","Bs4Commons","jQuery","hiddenSelect","dropDownItemHoverClass","this","HandleLabel","$selectedPanel","containerClass","inputId","id","$formGroup","closest","length","$label","find","forId","attr","$filterInput","CreateDropDownItemContent","$dropDownItem","optionId","itemText","isSelected","dropDownItemClass","checkBoxId","name","toLowerCase","checked","appendTo","$checkBox","addClass","prop","CreateSelectedItemContent","$selectedItem","removeSelectedItem","selectedItemClass","removeSelectedItemButtonClass","disabled","css","on","FilterClick","event","target","nodeName","parentElement","Hover","isHover","removeClass","Bs4AdapterCss","options","extend","dropDownMenuClass","selectedPanelClass","selectedPanelFocusClass","selectedPanelDisabledClass","filterInputItemClass","filterInputClass","bs4Commons","bs4CommonsLabelDispose","Init","$container","$filterInputItem","$dropDownMenu","Dispose","UpdateIsValid","$hiddenSelect","hasClass","Enable","isEnabled","Focus","isFocused","Bs4Adapter","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedPanelStyle","margin-bottom","selectedItemStyle","padding-left","line-height","removeSelectedItemButtonStyle","font-size","UpdateSize","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","selectElement","adapter","Popper","TypeError","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","filterDropDownMenu","_this","text","value","trim","visible","each","i","dropDownMenuItem","$dropDownMenuItem","show","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this2","selected","adoptDropDownItem","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","manageHover","isOn","click","preventDefault","stopPropagation","currentTarget","toggleItem","focus","mouseover","e","mouseout","keydownArrow","down","visibleNodeListArray","toArray","newIndex","forceUpdatePosition","Update","UpdateSizeImpl","UpdateDisabledImpl","unbind","destroy","UpdateDisabled","mousedown","mouseup","_this3","$selectElement","get","contains","val","insertAfter","placement","modifiers","preventOverflow","enabled","flip","selectOptions","index","focusin","focusout","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","pluginName","createPlugin","prototypedName","charAt","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","isDispose","s","test","methodName","removeData","off","noConflict","AddToJQueryPrototype","element","optionsObject","useCss"],"mappings":"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","sourcesContent":["import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4Adapter from './Bs4Adapter'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, optionsObject) => {\r\n                let adapter = optionsObject && optionsObject.useCss\r\n                ? new Bs4AdapterCss($, element, optionsObject)\r\n                : new Bs4Adapter($, element, optionsObject);\r\n                return new MultiSelect(element, optionsObject, adapter, window, $);\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","class Bs4Commons {\r\n    \r\n    constructor(jQuery, hiddenSelect, dropDownItemHoverClass){\r\n        this.$=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.dropDownItemHoverClass = dropDownItemHoverClass;\r\n    }\r\n\r\n    HandleLabel($selectedPanel, containerClass){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            let $filterInput = $selectedPanel.find('input');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $filterInput.attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    CreateDropDownItemContent(\r\n        $dropDownItem, optionId, itemText, isSelected,\r\n        containerClass, dropDownItemClass){\r\n        let checkBoxId = `${containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected) => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        $dropDownItem.addClass(dropDownItemClass)\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem,\r\n        selectedItemClass, removeSelectedItemButtonClass, disabled\r\n    ){\r\n        $selectedItem.addClass(selectedItemClass);\r\n        \r\n        this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .addClass(removeSelectedItemButtonClass)\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", disabled)\r\n        return $button;\r\n    }\r\n\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        if (isHover)\r\n            $dropDownItem.addClass(this.dropDownItemHoverClass);\r\n        else\r\n            $dropDownItem.removeClass(this.dropDownItemHoverClass);\r\n    }\r\n}\r\nexport default Bs4Commons;\r\n","import Bs4Commons from \"./Bs4Commons\";\r\n\r\nclass Bs4AdapterCss {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass: 'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.options.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        $container.addClass(this.options.containerClass);\r\n        $selectedPanel.addClass(this.options.selectedPanelClass);\r\n\r\n        $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n        $filterInputItem.addClass(this.options.filterInputItemClass)\r\n        $filterInput.addClass(this.options.filterInputClass);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.options.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            $selectedPanel.removeClass(this.options.selectedPanelDisabledClass);\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n        }\r\n        else{\r\n            $selectedPanel.addClass(this.options.selectedPanelDisabledClass);\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n        }\r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.options.containerClass, this.options.dropDownItemClass);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.options.selectedItemClass, this.options.removeSelectedItemButtonClass, disabled);\r\n    }\r\n\r\n    \r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n            $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n        }else{\r\n            $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","import Bs4Commons from \"./Bs4Commons\";\r\n//import styles from './../../scss/BsMutliSelect.scss'\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight: 'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight: 'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057'\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n\r\n        this.containerClass= 'dashboardcode-bsmultiselect';\r\n        this.dropDownMenuClass= 'dropdown-menu';\r\n        this.dropDownItemClass= 'px-2';\r\n        this.dropDownItemHoverClass= 'text-primary bg-light';\r\n        this.selectedPanelClass= 'form-control';\r\n        this.selectedItemClass= 'badge';\r\n        this.removeSelectedItemButtonClass= 'close';\r\n\r\n        this.selectedPanelStyle= {'margin-bottom': '0'};\r\n        this.selectedItemStyle= {'padding-left': '0px', 'line-height': '1.5em'};\r\n        this.removeSelectedItemButtonStyle= {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n\r\n        $container.addClass(this.containerClass);\r\n        $selectedPanel.addClass(this.selectedPanelClass);\r\n        $selectedPanel.css(this.selectedPanelStyle);\r\n\r\n        $dropDownMenu.addClass(this.dropDownMenuClass);\r\n        $filterInput.css(\"color\", this.options.filterInputColor);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n    \r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            $selectedPanel.css({\"background-color\": \"\"});\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n        }\r\n        else{\r\n            $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor});\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n        }\r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.containerClass, this.dropDownItemClass)\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        let $buttom = this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.selectedItemClass, this.removeSelectedItemButtonClass, disabled);\r\n        $buttom.css(this.removeSelectedItemButtonStyle);\r\n        $selectedItem.css(this.selectedItemStyle);\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n                if ($selectedPanel.hasClass(\"is-valid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n                } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n                } else {\r\n                    $selectedPanel\r\n                        .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                        .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n                }\r\n        }else{\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(selectElement, options, adapter, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.selectElement = selectElement;\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.$ = $;\r\n        \r\n        this.options = $.extend({}, options);\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(window.document);\r\n        this.init();\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.Hover(this.$(this.hoveredDropDownItem), false);\r\n            this.hoveredDropDownItem = null;\r\n        }\r\n        this.hoveredDropDownIndex = null;\r\n    }\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                if (!isSelected && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n    }\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    appendDropDownItem(optionElement) {\r\n        let optionId = optionElement.value;\r\n        let itemText = optionElement.text;\r\n        let isSelected = optionElement.selected;\r\n        let $dropDownItem = this.$(\"<LI/>\");\r\n        $dropDownItem.data(\"option-id\", optionId);\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n        let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\r\n        $dropDownItem.appendTo(this.dropDownMenu);\r\n        let appendItem = (doTrigger) => {\r\n            $dropDownItem.data(\"option-selected\", true);\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            $selectedItem.data(\"option-id\", optionId);\r\n            optionElement.selected = true;\r\n            adoptDropDownItem(true);\r\n            let removeItem = () => {\r\n                $dropDownItem.data(\"option-selected\", false);\r\n                $dropDownItem.data(\"option-toggle\", appendItem);\r\n                $selectedItem.data(\"option-remove\", null);\r\n                $selectedItem.remove();\r\n                optionElement.selected = false;\r\n                adoptDropDownItem(false);\r\n                this.$(this.selectElement).trigger('change');\r\n            };\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                itemText,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            $dropDownItem.data(\"option-toggle\", removeItem);\r\n            $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n            if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                this.$(this.selectElement).trigger('change');\r\n            return $selectedItem;\r\n        }\r\n        $dropDownItem.data(\"option-toggle\", appendItem );\r\n        \r\n        if (isSelected) {\r\n            appendItem(false);\r\n        }\r\n        let manageHover = (event, isOn) => {\r\n            this.adapter.Hover(this.$(event.target).closest(\"LI\"), isOn)\r\n        }\r\n        $dropDownItem.click(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let toggleItem = this.$(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        }).mouseover(e => manageHover(e, true)).mouseout(e => manageHover(e, false));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            if (this.hoveredDropDownItem === null) {\r\n                this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.Hover(this.$(this.hoveredDropDownItem), false);\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n            this.adapter.Hover(this.$(this.hoveredDropDownItem), true);\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.container !== null) {\r\n            this.$(this.container).remove();\r\n        }\r\n        // this.selectedPanel = null;\r\n        // this.filterInputItem = null;\r\n        // this.filterInput = null;\r\n        // this.dropDownMenu = null;\r\n        // this.selectElement = null;\r\n        // this.options = null;\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.selectElement.disabled;\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Enable($selectedPanel, false);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel, true);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    init() {\r\n        let $selectElement = this.$(this.selectElement);\r\n        $selectElement.hide();\r\n        let $container = this.$(\"<DIV/>\");\r\n        this.container = $container.get(0);\r\n        let $selectedPanel = this.$(\"<UL/>\");\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        \r\n        this.selectedPanel = $selectedPanel.get(0);\r\n        \r\n        $selectedPanel.appendTo(this.container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        this.filterInput = $filterInput.get(0);\r\n        let $dropDownMenu = this.$(\"<UL/>\")\r\n            .css({\"display\":\"none\"})\r\n            .appendTo($container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(this.container === event.target || this.$.contains(this.container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.FilterClick(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu);\r\n        $container.insertAfter($selectElement);\r\n        \r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: { enabled:false }\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // bellow: ready shortcut\r\n        this.$(() => {\r\n            let selectOptions = $selectElement.find('OPTION');\r\n            selectOptions.each(\r\n                (index, optionElement) => {\r\n                    this.appendDropDownItem(optionElement);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = selectOptions.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        $dropDownMenu.click( event => event.stopPropagation());\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.Focus($selectedPanel, true))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.Focus($selectedPanel, false)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if (event.which == 38) {\r\n                event.preventDefault();\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                event.preventDefault()\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 13) {\r\n                event.preventDefault();\r\n            }\r\n            else if (event.which == 9) {\r\n                if (this.filterInput.value) {\r\n                    event.preventDefault();\r\n                }\r\n                else {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else {\r\n                if (event.which == 8) {\r\n                    // NOTE: this will process backspace only if there are no text in the input field\r\n                    // If user will find this inconvinient, we will need to calculate something like this\r\n                    // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                    if (!this.filterInput.value)\r\n                    {\r\n                        let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                        if ($penult.length){\r\n                            let removeItem = $penult.data(\"option-remove\");\r\n                            removeItem();\r\n                        }\r\n                        this.updateDropDownPosition(false);\r\n                    }\r\n                }\r\n                this.resetDropDownMenuHover();\r\n            }\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let isSelected = $dropDownItem.data(\"option-selected\");\r\n                        if (!isSelected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const prototypedName = pluginName.charAt(0).toLowerCase() + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypedName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            let isDispose = s => /Dispose/.test(s)\r\n            if (!instance) {\r\n                if (isMethodName && isDispose(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject);\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (isDispose(methodName)) {\r\n                    $e.removeData(dataKey).off(dataKey);\r\n                    instance.Dispose();\r\n                }\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named \"${methodName}\"`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypedName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypedName].noConflict = function () {\r\n        $.fn[prototypedName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}