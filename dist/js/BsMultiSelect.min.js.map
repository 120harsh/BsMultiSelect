{"version":3,"sources":["../../js/src/BsMultiSelect.js","../../js/src/Bs4Commons.js","../../js/src/Bs4AdapterCss.js","../../js/src/Bs4Adapter.js","../../js/src/MultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["window","$","Bs4Commons","jQuery","hiddenSelect","dropDownItemHoverClass","this","UpdateIsValid","$selectedPanel","$hiddenSelect","hasClass","addClass","Enable","find","prop","Disable","HandleLabel","containerClass","inputId","id","$formGroup","closest","length","$label","forId","attr","$filterInput","CreateDropDownItemContent","$dropDownItem","optionId","itemText","isSelected","dropDownItemClass","checkBoxId","name","toLowerCase","checked","appendTo","$checkBox","CreateSelectedItemContent","$selectedItem","removeSelectedItem","selectedItemClass","removeSelectedItemButtonClass","disabled","css","on","FilterClick","event","target","nodeName","parentElement","Hover","isHover","removeClass","Bs4AdapterCss","options","extend","dropDownMenuClass","selectedPanelClass","selectedPanelFocusClass","selectedPanelDisabledClass","filterInputItemClass","filterInputClass","bs4Commons","bs4CommonsLabelDispose","Init","$container","$filterInputItem","$dropDownMenu","Dispose","Focus","isFocused","Bs4Adapter","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedPanelStyle","margin-bottom","selectedItemStyle","padding-left","line-height","removeSelectedItemButtonStyle","font-size","background-color","UpdateSize","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","selectElement","onDispose","adapter","Popper","TypeError","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","filterDropDownMenu","_this","text","value","trim","visible","each","i","dropDownMenuItem","$dropDownMenuItem","show","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this2","selected","adoptDropDownItem","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","manageHover","isOn","click","preventDefault","stopPropagation","currentTarget","toggleItem","focus","mouseover","e","mouseout","keydownArrow","down","visibleNodeListArray","toArray","newIndex","forceUpdatePosition","Update","UpdateSizeImpl","UpdateDisabledImpl","unbind","destroy","UpdateDisabled","mousedown","mouseup","_this3","$selectElement","get","contains","val","insertAfter","placement","modifiers","preventOverflow","enabled","flip","selectOptions","index","focusin","focusout","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","pluginName","createPlugin","prototypedName","charAt","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","optionsObject","useCss"],"mappings":"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","sourcesContent":["import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4Adapter from './Bs4Adapter'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, optionsObject, onDispose) => {\r\n                let adapter = optionsObject && optionsObject.useCss\r\n                ? new Bs4AdapterCss($, element, optionsObject)\r\n                : new Bs4Adapter($, element, optionsObject);\r\n                return new MultiSelect(element, optionsObject, onDispose, adapter, window, $);\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","class Bs4Commons {\r\n    \r\n    constructor(jQuery, hiddenSelect, dropDownItemHoverClass){\r\n        this.$=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.dropDownItemHoverClass = dropDownItemHoverClass;\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.$(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n    }\r\n\r\n    HandleLabel($selectedPanel, containerClass){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            let $filterInput = $selectedPanel.find('input');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $filterInput.attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    CreateDropDownItemContent(\r\n        $dropDownItem, optionId, itemText, isSelected,\r\n        containerClass, dropDownItemClass){\r\n        let checkBoxId = `${containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected) => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        $dropDownItem.addClass(dropDownItemClass)\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem,\r\n        selectedItemClass, removeSelectedItemButtonClass, disabled\r\n    ){\r\n        $selectedItem.addClass(selectedItemClass);\r\n        \r\n        this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .addClass(removeSelectedItemButtonClass)\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", disabled)\r\n        return $button;\r\n    }\r\n\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        if (isHover)\r\n            $dropDownItem.addClass(this.dropDownItemHoverClass);\r\n        else\r\n            $dropDownItem.removeClass(this.dropDownItemHoverClass);\r\n    }\r\n}\r\nexport default Bs4Commons;\r\n","import Bs4Commons from \"./Bs4Commons\";\r\n\r\nclass Bs4AdapterCss {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass: 'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.options.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        $container.addClass(this.options.containerClass);\r\n        $selectedPanel.addClass(this.options.selectedPanelClass);\r\n\r\n        $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n        $filterInputItem.addClass(this.options.filterInputItemClass)\r\n        $filterInput.addClass(this.options.filterInputClass);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.options.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        this.bs4Commons.UpdateIsValid($selectedPanel);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelDisabledClass)\r\n        this.bs4Commons.Enable($selectedPanel)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelDisabledClass)\r\n        this.bs4Commons.Disable($selectedPanel);\r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.options.containerClass, this.options.dropDownItemClass);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.options.selectedItemClass, this.options.removeSelectedItemButtonClass, disabled);\r\n    }\r\n\r\n    \r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n            $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n        }else{\r\n            $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","import Bs4Commons from \"./Bs4Commons\";\r\n//import styles from './../../scss/BsMutliSelect.scss'\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight: 'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight: 'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057'\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n\r\n        this.containerClass= 'dashboardcode-bsmultiselect';\r\n        this.dropDownMenuClass= 'dropdown-menu';\r\n        this.dropDownItemClass= 'px-2';\r\n        this.dropDownItemHoverClass= 'text-primary bg-light';\r\n        this.selectedPanelClass= 'form-control';\r\n        this.selectedItemClass= 'badge';\r\n        this.removeSelectedItemButtonClass= 'close';\r\n\r\n        this.selectedPanelStyle= {'margin-bottom': '0'};\r\n        this.selectedItemStyle= {'padding-left': '0px', 'line-height': '1.5em'};\r\n        this.removeSelectedItemButtonStyle= {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n\r\n        $container.addClass(this.containerClass);\r\n        $selectedPanel.addClass(this.selectedPanelClass);\r\n        $selectedPanel.css(this.selectedPanelStyle);\r\n\r\n        $dropDownMenu.addClass(this.dropDownMenuClass);\r\n        $filterInput.css(\"color\", this.options.filterInputColor);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n    \r\n    UpdateIsValid($selectedPanel){\r\n        this.bs4Commons.UpdateIsValid($selectedPanel)\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n        this.bs4Commons.Enable($selectedPanel)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor})\r\n        this.bs4Commons.Disable($selectedPanel);\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.containerClass, this.dropDownItemClass)\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        let $buttom = this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.selectedItemClass, this.removeSelectedItemButtonClass, disabled);\r\n        $buttom.css(this.removeSelectedItemButtonStyle);\r\n        $selectedItem.css(this.selectedItemStyle);\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n                if ($selectedPanel.hasClass(\"is-valid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n                } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n                } else {\r\n                    $selectedPanel\r\n                        .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                        .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n                }\r\n        }else{\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(selectElement, options, onDispose, adapter, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.selectElement = selectElement;\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.options = $.extend({}, options);\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(window.document);\r\n        this.init();\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.Hover(this.$(this.hoveredDropDownItem), false);\r\n            this.hoveredDropDownItem = null;\r\n        }\r\n        this.hoveredDropDownIndex = null;\r\n    }\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                if (!isSelected && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n    }\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    appendDropDownItem(optionElement) {\r\n        let optionId = optionElement.value;\r\n        let itemText = optionElement.text;\r\n        let isSelected = optionElement.selected;\r\n        let $dropDownItem = this.$(\"<LI/>\");\r\n        $dropDownItem.data(\"option-id\", optionId);\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n        let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\r\n        $dropDownItem.appendTo(this.dropDownMenu);\r\n        let appendItem = (doTrigger) => {\r\n            $dropDownItem.data(\"option-selected\", true);\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            $selectedItem.data(\"option-id\", optionId);\r\n            optionElement.selected = true;\r\n            adoptDropDownItem(true);\r\n            let removeItem = () => {\r\n                $dropDownItem.data(\"option-selected\", false);\r\n                $dropDownItem.data(\"option-toggle\", appendItem);\r\n                $selectedItem.data(\"option-remove\", null);\r\n                $selectedItem.remove();\r\n                optionElement.selected = false;\r\n                adoptDropDownItem(false);\r\n                this.$(this.selectElement).trigger('change');\r\n            };\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                itemText,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            $dropDownItem.data(\"option-toggle\", removeItem);\r\n            $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n            if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                this.$(this.selectElement).trigger('change');\r\n            return $selectedItem;\r\n        }\r\n        $dropDownItem.data(\"option-toggle\", appendItem );\r\n        \r\n        if (isSelected) {\r\n            appendItem(false);\r\n        }\r\n        let manageHover = (event, isOn) => {\r\n            this.adapter.Hover(this.$(event.target).closest(\"LI\"), isOn)\r\n        }\r\n        $dropDownItem.click(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let toggleItem = this.$(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        }).mouseover(e => manageHover(e, true)).mouseout(e => manageHover(e, false));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            if (this.hoveredDropDownItem === null) {\r\n                this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.Hover(this.$(this.hoveredDropDownItem), false);\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n            this.adapter.Hover(this.$(this.hoveredDropDownItem), true);\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n            // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.container !== null) {\r\n            this.$(this.container).remove();\r\n        }\r\n        // this.selectedPanel = null;\r\n        // this.filterInputItem = null;\r\n        // this.filterInput = null;\r\n        // this.dropDownMenu = null;\r\n        // this.selectElement = null;\r\n        // this.options = null;\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.selectElement.disabled;\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    init() {\r\n        let $selectElement = this.$(this.selectElement);\r\n        $selectElement.hide();\r\n        let $container = this.$(\"<DIV/>\");\r\n        this.container = $container.get(0);\r\n        let $selectedPanel = this.$(\"<UL/>\");\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        \r\n        this.selectedPanel = $selectedPanel.get(0);\r\n        \r\n        $selectedPanel.appendTo(this.container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        this.filterInput = $filterInput.get(0);\r\n        let $dropDownMenu = this.$(\"<UL/>\")\r\n            .css({\"display\":\"none\"})\r\n            .appendTo($container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(this.container === event.target || this.$.contains(this.container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.FilterClick(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu);\r\n        $container.insertAfter($selectElement);\r\n        \r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: { enabled:false }\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // bellow: ready shortcut\r\n        this.$(() => {\r\n            let selectOptions = $selectElement.find('OPTION');\r\n            selectOptions.each(\r\n                (index, optionElement) => {\r\n                    this.appendDropDownItem(optionElement);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = selectOptions.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        $dropDownMenu.click( event => event.stopPropagation());\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.Focus($selectedPanel, true))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.Focus($selectedPanel, false)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if (event.which == 38) {\r\n                event.preventDefault();\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                event.preventDefault()\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 13) {\r\n                event.preventDefault();\r\n            }\r\n            else if (event.which == 9) {\r\n                if (this.filterInput.value) {\r\n                    event.preventDefault();\r\n                }\r\n                else {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else {\r\n                if (event.which == 8) {\r\n                    // NOTE: this will process backspace only if there are no text in the input field\r\n                    // If user will find this inconvinient, we will need to calculate something like this\r\n                    // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                    if (!this.filterInput.value)\r\n                    {\r\n                        let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                        if ($penult.length){\r\n                            let removeItem = $penult.data(\"option-remove\");\r\n                            removeItem();\r\n                        }\r\n                        this.updateDropDownPosition(false);\r\n                    }\r\n                }\r\n                this.resetDropDownMenuHover();\r\n            }\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let isSelected = $dropDownItem.data(\"option-selected\");\r\n                        if (!isSelected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const prototypedName = pluginName.charAt(0).toLowerCase() + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypedName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named \"${methodName}\"`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypedName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypedName].noConflict = function () {\r\n        $.fn[prototypedName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}