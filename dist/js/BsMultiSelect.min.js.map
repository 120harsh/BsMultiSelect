{"version":3,"sources":["../../src/BsMultiSelect.es8.js"],"names":["_jquery","_interopRequireDefault","require","_popper","BsMultiSelect","window","$","Popper","JQUERY_NO_CONFLICT","fn","pluginName","dataKey","defaults","items","usePopper","selectedPanelMinHeight","selectedPanelReadonlyBackgroundColor","filterInputColor","containerClass","dropDownMenuClass","dropDownItemClass","selectedPanelClass","selectedPanelStyle","min-height","selectedPanelStyleSys","cursor","display","flex-wrap","align-items","margin-bottom","selectedPanelReadonlyStyle","background-color","selectedItemClass","selectedItemStyle","padding-left","selectedItemStyleSys","removeSelectedItemButtonClass","removeSelectedItemButtonStyle","font-size","filterInputItemClass","filterInputItemStyle","filterInputItemStyleSys","filterInputClass","filterInputStyle","color","filterInputStyleSys","width","border","padding","outline","Plugin","element","options","_classCallCheck","this","TypeError","extend","input","container","dropDownMenu","selectedPanel","filterInput","filterInputItem","popper","skipFocusout","backspaceAtStartPoint","selectedDropDownItem","selectedDropDownIndex","hasItems","init","_createClass","key","value","update","dropdown","removeClass","hasClass","addClass","optionId","isChecked","i","length","selected","val","clearFilterInput","hideDropDown","updateDropDownPosition","filterDropDownMenu","text","trim","visible","find","each","$item","show","itemText","prop","toLowerCase","includes","hide","resetSelectDropDownMenu","event","preventDefault","stopPropagation","menuItem","currentTarget","closest","$menuItem","data","$checkBox","$selectedItem","concat","removeSelectedItem","createAndAppendSelectedItem","focus","itemValue","checkBoxId","name","checked","appendTo","_this","css","insertBefore","$buttom","setCheck","click","style","item","_toConsumableArray","querySelectorAll","textContent","undefined","classList","remove","down","showDropDown","newIndex","add","_this2","$input","disabled","$container","insertAfter","get","$selectedPanel","$filterInputItem","$filterInput","$dropDownMenu","placement","modifiers","flip","behavior","reference","forEach","appendDropDownItem","selectOptions","index","option","inputId","id","formGroup","label","querySelector","attr","setAttribute","clickDropDownItem","on","target","nodeName","parentElement","which","keyCode","keydownArrow","selectionStart","selectionEnd","analyzeInputText","startPosition","array","itemToDelete","dataset","closeDropDown","adoptFilterInputLength","focusin","focusout","mousedown","document","mouseup","contains","jQueryInterface","test","optionsObject","_typeof","methodName","charAt","toUpperCase","slice","Constructor","noConflict","default"],"mappings":"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","sourcesContent":["import $ from 'jquery'\r\nimport Popper from 'popper.js'\r\n\r\n// TODO: \r\n// 2) require polyfill Element.closest polyfill IE 11\r\n// 3) require multiple classList.add polyfill IE 11\r\n\r\n// IIFE to declare private members\r\nconst BsMultiSelect = ((window, $, Popper) => {\r\n    const JQUERY_NO_CONFLICT = $.fn[pluginName];\r\n    const pluginName = \"dashboardCodeBsMultiSelect\";\r\n    const dataKey = \"plugin_\" + pluginName;\r\n    const defaults = {\r\n        items: [],\r\n        defaults: [],\r\n        usePopper: true,\r\n        selectedPanelMinHeight: \"calc(2.25rem + 2px)\",\r\n        selectedPanelReadonlyBackgroundColor: \"#e9ecef\",\r\n        filterInputColor: \"#495057\",\r\n\r\n        containerClass: \"dashboardcode-bs-multiselect\",\r\n        dropDownMenuClass: \"dropdown-menu\",\r\n        dropDownItemClass: \"px-2\",\r\n\r\n        selectedPanelClass: \"form-control btn border\",\r\n        selectedPanelStyle: { \"min-height\": \"calc(2.25rem + 2px)\" },\r\n        selectedPanelStyleSys: { \"cursor\": \"text\", \"display\": \"flex\", \"flex-wrap\": \"wrap\", \"align-items\": \"center\", \"margin-bottom\": \"0px\" }, \r\n        \r\n        selectedPanelReadonlyStyle: { \"background-color\":\"#e9ecef\"},\r\n        \r\n        selectedItemClass: \"badge\", \r\n        selectedItemStyle: { \"padding-left\": \"0px\"},\r\n        selectedItemStyleSys: { \"display\": \"flex\", \"align-items\": \"center\" },\r\n        \r\n        removeSelectedItemButtonClass: \"close\",\r\n        removeSelectedItemButtonStyle: { \"font-size\": \"100%\" }, \r\n        \r\n        filterInputItemClass: \"\", \r\n        filterInputItemStyle: {},\r\n        filterInputItemStyleSys: {\"display\": \"block\"},\r\n        \r\n        filterInputClass: \"\",\r\n        filterInputStyle: { \"color\": \"#495057\" },\r\n        filterInputStyleSys: { \"width\": \"2ch\", \"border\": \"0\", \"padding\": \"0\", \"outline\": \"none\", }\r\n    };\r\n\r\n    class Plugin {\r\n        constructor(element, options) {\r\n            if (typeof Popper === 'undefined') {\r\n                throw new TypeError('DashboardCode bsMultiSelect require Popper.js (https://popper.js.org)')\r\n            }\r\n\r\n            // readonly\r\n            this.element = element;\r\n            this.options = $.extend({}, defaults, options);\r\n            this.input = element;\r\n            this.container = null;\r\n            this.dropDownMenu = null;\r\n            this.selectedPanel = null;\r\n            this.filterInput = null;\r\n            this.filterInputItem = null;\r\n            this.popper = null;\r\n\r\n            // state\r\n            this.skipFocusout = false;\r\n            this.backspaceAtStartPoint = null;\r\n            this.selectedDropDownItem = null;\r\n            this.selectedDropDownIndex = null;\r\n            this.hasItems = false;\r\n\r\n            this.init();\r\n        }\r\n\r\n        updateDropDownPosition() {\r\n            //console.log(\"updateDropDownPosition\");\r\n            if (this.options.usePopper) {\r\n                this.popper.update();\r\n            } else {\r\n                $(this.dropDownMenu).dropdown('update');\r\n            }\r\n        }\r\n\r\n        hideDropDown() {\r\n            if (this.options.usePopper) {\r\n                //console.log(\"popper remove show\");\r\n                $(this.dropDownMenu).removeClass('show')\r\n            } else {\r\n                if ($(this.dropDownMenu).hasClass('show'))\r\n                    $(this.dropDownMenu).dropdown('toggle');\r\n            }\r\n        }\r\n\r\n        showDropDown() {\r\n            if (this.hasItems) {\r\n                if (this.options.usePopper) {\r\n                    //console.log(\"popper add show\");\r\n                    $(this.dropDownMenu).addClass('show')\r\n                } else {\r\n                    if (!$(this.dropDownMenu).hasClass('show'))\r\n                        $(this.dropDownMenu).dropdown('toggle');\r\n                }\r\n            }\r\n        }\r\n\r\n        setCheck(optionId, isChecked) {\r\n            for (var i = 0; i < this.input.options.length; i += 1) {\r\n                var option = this.input.options[i];\r\n                if (option.value == optionId) {\r\n                    this.input.options[i].selected = isChecked;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Public methods\r\n        getInputValue() {\r\n            return $(this.input).val();\r\n        }\r\n\r\n        closeDropDown() {\r\n            this.clearFilterInput();\r\n            this.hideDropDown();\r\n            this.updateDropDownPosition();\r\n        }\r\n\r\n\r\n        clearFilterInput() {\r\n            if (this.filterInput.value != '') {\r\n                this.filterInput.value = '';\r\n                this.filterDropDownMenu();\r\n                if (this.hasItems) {\r\n                    this.updateDropDownPosition(); \r\n                } \r\n            }\r\n        }\r\n\r\n        filterDropDownMenu() {\r\n            var text = this.filterInput.value.trim();\r\n            var visible = 0;\r\n            $(this.dropDownMenu).find('li').each(function () {\r\n                var $item = $(this);\r\n                if (text == \"\") {\r\n                    $item.show();\r\n                    visible++;\r\n                }\r\n                else {\r\n                    var itemText = $item.text();\r\n                    var $checkbox = $item.find('input[type=\"checkbox\"]');\r\n                    \r\n                    if (!$checkbox.prop('checked') && itemText.toLowerCase().includes(text.toLowerCase())) {\r\n                        $item.show();\r\n                        visible++;\r\n                    } else {\r\n                        $item.hide();\r\n                    }\r\n                }\r\n            });\r\n            this.hasItems = (visible > 0);\r\n            this.resetSelectDropDownMenu();\r\n        }\r\n\r\n        clickDropDownItem(event) {\r\n            //console.log(\"filter & stopPropagation\");\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            var menuItem = event.currentTarget.closest(\"LI\");\r\n            var $menuItem = $(menuItem);\r\n            var optionId = $menuItem.data(\"option-id\");\r\n            var $checkBox = $menuItem.find('input[type=\"checkbox\"]');\r\n            if ($checkBox.prop('checked')) {\r\n                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n            } else {\r\n                var itemText = $menuItem.find('label').text();\r\n                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                $checkBox.prop('checked', true);\r\n            }\r\n            this.clearFilterInput();\r\n            $(this.filterInput).focus();\r\n        }\r\n\r\n        \r\n        appendDropDownItem(itemValue, itemText, isChecked) {\r\n            var optionId = itemValue;\r\n            var checkBoxId = `dashboardcode-bs-multiselect-${this.input.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n            var checked = isChecked ? \"checked\" : \"\";\r\n            var $dropDownItem = $(\r\n                `<li data-option-id=\"${optionId}\">\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n                        <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n                    </div>\r\n                 </li>`).addClass(this.options.dropDownItemClass).appendTo($(this.dropDownMenu));\r\n\r\n            var $checkBox = $dropDownItem.find(`input[type=\"checkbox\"]`);\r\n            if (isChecked) {\r\n                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n            }\r\n        }\r\n        \r\n        createAndAppendSelectedItem($checkBox, optionId, itemText) {\r\n            var $selectedItem = $(`<li data-option-id=\"${optionId}\"><span>${itemText}</span></li>`)\r\n                .css(this.options.selectedItemStyleSys)\r\n                .css(this.options.selectedItemStyle)\r\n                .addClass(this.options.selectedItemClass) \r\n                .insertBefore($(this.filterInputItem));\r\n            var $buttom = $(\"<button aria-label='Close' tabIndex='-1' type='button'><span aria-hidden='true'>&times;</span></button>\")\r\n                .css(this.options.removeSelectedItemButtonStyle)\r\n                .addClass(this.options.removeSelectedItemButtonClass)\r\n                .appendTo($selectedItem); \r\n            this.setCheck(optionId, true);\r\n\r\n            $buttom.click((event) => {\r\n                this.removeSelectedItem($selectedItem, optionId, $checkBox)\r\n                this.updateDropDownPosition();\r\n                $(this.filterInput).focus();\r\n            });\r\n        }\r\n\r\n        adoptFilterInputLength() {\r\n            this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        }\r\n\r\n        analyzeInputText() {\r\n            var text = this.filterInput.value.trim().toLowerCase();\r\n            var item = [...this.dropDownMenu.querySelectorAll(\"LI\")]\r\n                .find(i => i.textContent.trim().toLowerCase() == text);\r\n            if (item != undefined) {\r\n                var $item = $(item);\r\n                var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                if (!$checkBox.prop('checked')) {\r\n                    var optionId = $item.data('option-id');\r\n                    var itemText = $item.find('label').text();\r\n                    this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                    $checkBox.prop('checked', true);\r\n\r\n                }\r\n                this.clearFilterInput();\r\n            }\r\n        }\r\n\r\n        resetSelectDropDownMenu() {\r\n            if (this.selectedDropDownItem != null) {\r\n                // IE11 doesn't support remove('text-primary', bg-light' )\r\n                this.selectedDropDownItem.classList.remove('bg-light');\r\n                this.selectedDropDownItem.classList.remove('text-primary');\r\n                this.selectedDropDownItem = null;\r\n            }\r\n            this.selectedDropDownIndex = null;\r\n        }\r\n        \r\n        keydownArrow(down) {\r\n            var items = [...this.dropDownMenu.querySelectorAll('LI:not([style*=\"display: none\"]')];\r\n            if (items.length > 0) {\r\n                this.showDropDown();\r\n                if (this.selectedDropDownItem == null) {\r\n                    \r\n                    this.selectedDropDownIndex = (down) ? 0 : items.length - 1;\r\n                }\r\n                else {\r\n                    // IE11 doesn't support remove('text-primary', bg-light' )\r\n                    this.selectedDropDownItem.classList.remove('bg-light');\r\n                    this.selectedDropDownItem.classList.remove('text-primary');\r\n                    if (down) {\r\n                        var newIndex = this.selectedDropDownIndex + 1;\r\n                        this.selectedDropDownIndex = (newIndex < items.length) ? newIndex : 0;\r\n                    } else {\r\n                        var newIndex = this.selectedDropDownIndex - 1;\r\n                        this.selectedDropDownIndex = (newIndex >= 0) ? newIndex : items.length - 1;\r\n                    }\r\n                }\r\n                this.selectedDropDownItem = items[this.selectedDropDownIndex];\r\n                // IE11 doesn't support add('text-primary', bg-light' )\r\n                this.selectedDropDownItem.classList.add('text-primary');\r\n                this.selectedDropDownItem.classList.add('bg-light' );\r\n                \r\n            }\r\n        }\r\n\r\n        removeSelectedItem($selectedItem, optionId, $checkBox) {\r\n            $selectedItem.remove();\r\n            this.setCheck(optionId, false);\r\n            $checkBox.prop('checked', false);\r\n        }\r\n\r\n        init() {\r\n            var $input = $(this.input);\r\n            $input.hide();\r\n            var disabled = this.input.disabled;\r\n\r\n            var $container = $(\"<div/>\")\r\n                .addClass(this.options.containerClass)\r\n                .insertAfter($input);\r\n                \r\n            this.container = $container.get(0);\r\n\r\n            var $selectedPanel = $(\"<ul/>\")\r\n                .addClass(this.options.selectedPanelClass)\r\n                .css(this.options.selectedPanelStyleSys)\r\n                .css(this.options.selectedPanelStyle)\r\n                .appendTo($container);\r\n            this.selectedPanel = $selectedPanel.get(0);\r\n\r\n            var $filterInputItem = $('<li/>')\r\n                .css(this.options.filterInputItemStyleSys)\r\n                .css(this.options.filterInputItemStyle)\r\n                .addClass(this.options.filterInputItemClass)\r\n                .appendTo($selectedPanel);\r\n            this.filterInputItem = $filterInputItem.get(0)\r\n\r\n            var $filterInput = $('<input type=\"search\" autocomplete=\"off\">')\r\n                .css(this.options.filterInputStyleSys)\r\n                .css(this.options.filterInputStyle)\r\n                .addClass(this.options.filterInputClass)\r\n                .appendTo($filterInputItem);\r\n            this.filterInput = $filterInput.get(0)\r\n\r\n            var $dropDownMenu = $(\"<ul/>\").appendTo($container);\r\n            this.dropDownMenu = $dropDownMenu.get(0);\r\n\r\n            $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n            if (this.options.usePopper) {\r\n                this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n                    placement: 'bottom-start',\r\n                    modifiers: {\r\n                        flip: {\r\n                            behavior: ['left', 'right']\r\n                        },\r\n                    },\r\n                });\r\n            } else {\r\n                $(this.dropDownMenu).addClass(\"dropdown dropdown-menu\")\r\n                $(this.dropDownMenu).data(\"\", \"\");\r\n                $(this.dropDownMenu).dropdown({\r\n                    placement: 'bottom-start',\r\n                    flip: false,\r\n                    reference: this.filterInput\r\n                });\r\n            }\r\n\r\n            if (this.options.items == null) {\r\n                this.options.items.forEach(item => {\r\n                    var itemValue = item['value'];\r\n                    var itemText = item['text'];\r\n                    var isChecked = item['isChecked'];\r\n                    this.appendDropDownItem(itemValue, itemText, isChecked);\r\n                });\r\n                this.hasItems = options.items.length > 0;\r\n            } else {\r\n                var selectOptions = $input.find('option');\r\n                selectOptions.each(\r\n                    (index, option) => {\r\n                        var itemValue = option.value;\r\n                        var itemText = option.text;\r\n                        var isChecked = option.selected;\r\n                        this.appendDropDownItem(itemValue, itemText, isChecked);\r\n                    }\r\n                );\r\n                this.hasItems = selectOptions.length > 0;\r\n            }\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                $selectedPanel.css(this.options.selectedPanelReadonlyStyle);\r\n                $selectedPanel.find('button').prop(\"disabled\", true);\r\n                $selectedPanel.addClass();\r\n            } else {\r\n                var inputId = this.input.id;\r\n                var formGroup = this.input.closest(\".form-group\");\r\n                if (formGroup != null) {\r\n                    var label = formGroup.querySelector(`label[for=\"${inputId}\"]`);\r\n                    var f = $(label).attr(\"for\");\r\n                    if ( f == this.input.id) {\r\n                        this.filterInput.id = \"dashboardcode-bs-multiselect-generated-filter-id-\" + this.input.id;\r\n                        label.setAttribute(\"for\", this.filterInput.id);\r\n                    }\r\n                }\r\n\r\n                this.updateDropDownPosition();\r\n\r\n                $dropDownMenu.click(event => {\r\n                    //console.log('dropDownMenu click - stopPropagation')\r\n                    event.stopPropagation();\r\n                });\r\n\r\n                $dropDownMenu.find('li').click((event) => {\r\n                    this.clickDropDownItem(event);\r\n                });\r\n\r\n                $dropDownMenu.on(\"mouseover\", (event) => {\r\n                    this.resetSelectDropDownMenu();\r\n                });\r\n\r\n                $dropDownMenu.find(\"li\").on(\"mouseover\", (event) => {\r\n                    event.target.closest(\"li\").classList.add('text-primary');\r\n                    event.target.closest(\"li\").classList.add('bg-light');\r\n                });\r\n\r\n                $dropDownMenu.find(\"li\").on(\"mouseout\", (event) => {\r\n                    event.target.closest(\"li\").classList.remove('text-primary');\r\n                    event.target.closest(\"li\").classList.remove('bg-light');\r\n                });\r\n\r\n                $selectedPanel.click((event) => {\r\n                    //console.log('selectedPanel click ' + event.target.nodeName);\r\n                    if (event.target.nodeName != \"INPUT\")\r\n                        $(this.filterInput).val('').focus();\r\n                    if (!(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\")))\r\n                        this.showDropDown();\r\n                });\r\n\r\n\r\n                $filterInput.on(\"keydown\", (event) => {\r\n                    if (event.which == 38 || event.keyCode == 38) {\r\n                        event.preventDefault();\r\n                        this.keydownArrow(false);\r\n                    }\r\n                    else if (event.which == 40 || event.keyCode == 40) {\r\n                        event.preventDefault()\r\n                        this.keydownArrow(true);\r\n                    }\r\n                    else if (event.which == 13 || event.keyCode == 13 || event.which == 9 || event.keyCode == 9) {\r\n                        event.preventDefault();\r\n                    }\r\n                    else {\r\n                        if (event.which == 8 || event.keyCode == 8) {\r\n                            // detect that backspace is at start of input field (this will be used at keydown)\r\n                            this.backspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                        }\r\n                        this.resetSelectDropDownMenu();\r\n                    }\r\n                });\r\n\r\n                $filterInput.on(\"keyup\", (event) => {\r\n                    if (event.which == 13 || event.keyCode == 13 || event.which == 9 || event.keyCode == 9) {\r\n                        if (this.selectedDropDownItem != null) {\r\n                            var $item = $(this.selectedDropDownItem);\r\n                            var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                            var optionId = $item.data('option-id');\r\n                            if (!$checkBox.prop('checked')) {\r\n                                var itemText = $item.find('label').text();\r\n                                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                                $checkBox.prop('checked', true);\r\n                                this.filterInput.value = \"\";\r\n                            } else {\r\n                                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n                            }\r\n                            //this.resetSelectDropDownMenu();\r\n                        } else {\r\n                            this.analyzeInputText();\r\n                        }\r\n                    } else if (event.which == 8 || event.keyCode == 8) {\r\n                        var startPosition = this.filterInput.selectionStart;\r\n                        var endPosition = this.filterInput.selectionEnd;\r\n                        if (endPosition == 0 && startPosition == 0 && this.backspaceAtStartPoint) {\r\n                            var array = [...this.selectedPanel.querySelectorAll(\"LI\")];\r\n                            if (array.length >= 2) {\r\n                                var itemToDelete = array[array.length - 2];\r\n                                var $itemToDelete = $(itemToDelete);\r\n                                var optionId = $itemToDelete.data(\"option-id\");\r\n                                var item = [...this.dropDownMenu.querySelectorAll(\"LI\")]\r\n                                    .find(i => i.dataset.optionId == optionId);\r\n                                var $item = $(item);\r\n                                var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n                            }\r\n                        }\r\n                        this.backspaceAtStartPoint = null;\r\n                    } else if (event.which == 27 || event.keyCode == 27) { // escape\r\n                        this.closeDropDown();\r\n                    }\r\n\r\n                });\r\n\r\n                // Set on change for filter input\r\n                $filterInput.on('input', (event) => { // keyup focus\r\n                    //console.log('filterInput input');\r\n                    this.adoptFilterInputLength();\r\n                    this.filterDropDownMenu();\r\n                    if (this.hasItems) {\r\n                        this.updateDropDownPosition(); // support case when textbox can change its place because of line break (texbox grow with each key press)\r\n                        this.showDropDown();\r\n                    } else {\r\n                        this.hideDropDown();\r\n                    }\r\n                });\r\n\r\n                $filterInput.focusin((event) => {\r\n                    $(this.selectedPanel).addClass(\"focus\");\r\n                });\r\n\r\n                $filterInput.focusout((event) => {\r\n                    if (!this.skipFocusout)\r\n                        $(this.selectedPanel).removeClass(\"focus\");\r\n                });\r\n\r\n                $container.mousedown((event) => {\r\n                    this.skipFocusout = true;\r\n\r\n                });\r\n\r\n                $(window.document).mouseup((event) => {\r\n                    this.skipFocusout = false;\r\n                    if (!(this.container === event.target || this.container.contains(event.target))) {\r\n                        //console.log(\"document mouseup outside container\");\r\n                        this.closeDropDown();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    var jQueryInterface = function (options) {\r\n        return this.each(function () {\r\n            let data = $(this).data(dataKey)\r\n\r\n            if (!data) {\r\n                if (/dispose|hide/.test(options)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    const optionsObject = (typeof options === 'object')? options:null;\r\n                    data = new Plugin(this, optionsObject);\r\n                    $(this).data(dataKey, data);\r\n                }\r\n            }\r\n\r\n            if (typeof options === 'string') {\r\n                var methodName = options;\r\n                if (typeof data[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named \"${methodName}\"`)\r\n                }\r\n                data[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[pluginName] = jQueryInterface;\r\n\r\n    // in case of mulitple $(this) it will return 1st element plugin instance\r\n    $.fn[pluginName.charAt(0).toUpperCase() + pluginName.slice(1)] = function (options) {\r\n        return $(this).data(\"plugin_\" + pluginName);\r\n    };\r\n\r\n    $.fn[pluginName].Constructor = Plugin;\r\n\r\n    $.fn[pluginName].noConflict = function () {\r\n        $.fn[pluginName] = JQUERY_NO_CONFLICT\r\n        return jQueryInterface;\r\n    }\r\n    return Plugin;\r\n})(window, $, Popper);\r\n\r\nexport default BsMultiSelect;\r\n"]}