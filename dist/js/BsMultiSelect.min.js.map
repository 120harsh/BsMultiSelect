{"version":3,"sources":["../../js/src/Bs4Commons.es8.js","../../js/src/Bs4AdapterCss.es8.js","../../js/src/Bs4Adapter.es8.js","../../js/src/BsMultiSelect.es8.js"],"names":["Bs4Commons","jQuery","hiddenSelect","dropDownItemHoverClass","this","$","HandleLabel","$selectedPanel","containerClass","inputId","id","$formGroup","closest","length","$label","find","forId","attr","$filterInput","CreateDropDownItemContent","$dropDownItem","optionId","itemText","isSelected","dropDownItemClass","checkBoxId","name","toLowerCase","checked","appendTo","$checkBox","addClass","prop","CreateSelectedItemContent","$selectedItem","removeSelectedItem","selectedItemClass","removeSelectedItemButtonClass","disabled","css","on","FilterClick","event","target","nodeName","parentElement","Hover","isHover","removeClass","Bs4AdapterCss","options","extend","dropDownMenuClass","selectedPanelClass","selectedPanelFocusClass","selectedPanelDisabledClass","filterInputItemClass","filterInputClass","bs4Commons","bs4CommonsLabelDispose","Init","$container","$filterInputItem","$dropDownMenu","Dispose","UpdateIsValid","$hiddenSelect","hasClass","Enable","isEnabled","Focus","isFocused","Bs4Adapter","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedPanelStyle","margin-bottom","selectedItemStyle","padding-left","line-height","removeSelectedItemButtonStyle","font-size","UpdateSize","background-color","window","Popper","JQUERY_NO_CONFLICT","fn","pluginName","dataKey","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","defaults","doManageFocus","useCss","adapter","Plugin","selectElement","TypeError","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","init","_proto","prototype","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","filterDropDownMenu","text","value","trim","visible","each","i","dropDownMenuItem","$dropDownMenuItem","show","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this","selected","adoptDropDownItem","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","manageHover","isOn","click","preventDefault","stopPropagation","currentTarget","toggleItem","focus","mouseover","e","mouseout","keydownArrow","down","visibleNodeListArray","toArray","newIndex","forceUpdatePosition","Update","UpdateSizeImpl","UpdateDisabledImpl","removeData","off","document","unbind","destroy","UpdateDisabled","mousedown","mouseup","_this2","$selectElement","get","contains","val","insertAfter","placement","modifiers","preventOverflow","enabled","flip","ready","selectOptions","index","focusin","focusout","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","jQueryInterface","test","methodName","charAt","toUpperCase","slice","Constructor","noConflict"],"mappings":";;;;;wWAAMA,aAEF,SAAAA,EAAYC,EAAQC,EAAcC,GAC9BC,KAAKC,EAAEJ,EACPG,KAAKF,aAAaA,EAClBE,KAAKD,uBAAyBA,6BAGlCG,YAAAA,SAAYC,EAAgBC,GACxB,IAAIC,EAAUL,KAAKF,aAAaQ,GAC5BC,EAAaP,KAAKC,EAAED,KAAKF,cAAcU,QAAQ,eACnD,GAAyB,GAArBD,EAAWE,OAAa,CACxB,IAAIC,EAASH,EAAWI,KAAX,cAA8BN,EAA9B,MACTO,EAAQF,EAAOG,KAAK,OACpBC,EAAeX,EAAeQ,KAAK,SACvC,GAAIC,GAASZ,KAAKF,aAAaQ,GAAI,CAC/B,IAAIA,EAAQF,EAAR,wBAA8CJ,KAAKF,aAAaQ,GAGpE,OAFAQ,EAAaD,KAAK,KAAMP,GACxBI,EAAOG,KAAK,MAAOP,GACZ,WACHI,EAAOG,KAAK,MAAOD,KAI/B,OAAO,QAGXG,0BAAAA,SACIC,EAAeC,EAAUC,EAAUC,EACnCf,EAAgBgB,GAChB,IAAIC,EAAgBjB,EAAhB,IAAkCJ,KAAKF,aAAawB,KAAKC,cAAzD,iBAAuFN,EAASM,cAChGC,EAAUL,EAAa,UAAY,GAEbnB,KAAKC,EAAL,qHACoCoB,EADpC,KACmDG,EADnD,2DAEqBH,EAFrB,KAEoCH,EAFpC,4BAILO,SAAST,GAC9B,IAAIU,EAAYV,EAAcL,KAAd,0BAKhB,OADAK,EAAcW,SAASP,GAHC,SAACD,GACrBO,EAAUE,KAAK,UAAWT,OAMlCU,0BAAAA,SAA0BC,EAAeZ,EAAUa,EAC/CC,EAAmBC,EAA+BC,GAWlD,OATAJ,EAAcH,SAASK,GAEvBhC,KAAKC,EAAL,SAAgBiB,EAAhB,WAAmCO,SAASK,GAC9B9B,KAAKC,EAAE,2GAChB0B,SAASM,GACTE,IAAI,cAAe,UACnBC,GAAG,QAASL,GACZN,SAASK,GACTF,KAAK,WAAYM,MAI1BG,YAAAA,SAAYC,GACR,QAAkC,UAAzBA,EAAMC,OAAOC,UAAkD,QAAzBF,EAAMC,OAAOC,UAA6D,UAAvCF,EAAMC,OAAOE,cAAcD,aAGjHE,MAAAA,SAAM1B,EAAe2B,GACbA,EACA3B,EAAcW,SAAS3B,KAAKD,wBAE5BiB,EAAc4B,YAAY5C,KAAKD,8BCnErC8C,aAEF,SAAAA,EAAYhD,EAAQC,EAAcgD,GAc9B9C,KAAK8C,QAAUjD,EAAOkD,OAAO,GAbZ,CACb3C,eAAgB,8BAChB4C,kBAAmB,gBACnB5B,kBAAmB,OACnBrB,uBAAwB,wBACxBkD,mBAAoB,eACpBC,wBAA0B,QAC1BC,2BAA4B,WAC5BnB,kBAAmB,QACnBC,8BAA+B,QAC/BmB,qBAAsB,GACtBC,iBAAkB,IAEqBP,GAC3C9C,KAAKH,OAAOA,EACZG,KAAKF,aAAaA,EAClBE,KAAKsD,WAAa,IAAI1D,EAAWC,EAAQC,EAAcE,KAAK8C,QAAQ/C,wBACpEC,KAAKuD,uBAAyB,gCAGlCC,KAAAA,SAAKC,EAAYtD,EAAgBuD,EAAkB5C,EAAc6C,GAC7DF,EAAW9B,SAAS3B,KAAK8C,QAAQ1C,gBACjCD,EAAewB,SAAS3B,KAAK8C,QAAQG,oBAErCU,EAAchC,SAAS3B,KAAK8C,QAAQE,mBACpCU,EAAiB/B,SAAS3B,KAAK8C,QAAQM,sBACvCtC,EAAaa,SAAS3B,KAAK8C,QAAQO,kBAEnCrD,KAAKuD,uBAAyBvD,KAAKsD,WAAWpD,YAAYC,EAAgBH,KAAK8C,QAAQ1C,mBAG3FwD,QAAAA,WACwC,OAAhC5D,KAAKuD,wBACLvD,KAAKuD,4BAGbM,cAAAA,SAAc1D,GACV,IAAI2D,EAAgB9D,KAAKH,OAAOG,KAAKF,cACjCgE,EAAcC,SAAS,aACvB5D,EAAewB,SAAS,YAGxBmC,EAAcC,SAAS,eACvB5D,EAAewB,SAAS,iBAIhCqC,OAAAA,SAAO7D,EAAgB8D,GAChBA,GACC9D,EAAeyC,YAAY5C,KAAK8C,QAAQK,4BACxChD,EAAeQ,KAAK,UAAUiB,KAAK,YAAY,KAG/CzB,EAAewB,SAAS3B,KAAK8C,QAAQK,4BACrChD,EAAeQ,KAAK,UAAUiB,KAAK,YAAY,OAIvDb,0BAAAA,SAA0BC,EAAeC,EAAUC,EAAUC,GACzD,OAAOnB,KAAKsD,WAAWvC,0BAA0BC,EAAeC,EAAUC,EAAUC,EAAYnB,KAAK8C,QAAQ1C,eAAgBJ,KAAK8C,QAAQ1B,sBAG9IS,0BAAAA,SAA0BC,EAAeZ,EAAUa,EAAoBG,GACnElC,KAAKsD,WAAWzB,0BAA0BC,EAAeZ,EAAUa,EAAoB/B,KAAK8C,QAAQd,kBAAmBhC,KAAK8C,QAAQb,8BAA+BC,MAIvKQ,MAAAA,SAAM1B,EAAe2B,GACjB3C,KAAKsD,WAAWZ,MAAM1B,EAAe2B,MAGzCN,YAAAA,SAAYC,GACR,OAAOtC,KAAKsD,WAAWjB,YAAYC,MAGvC4B,MAAAA,SAAM/D,EAAgBgE,GACdA,EACAhE,EAAewB,SAAS3B,KAAK8C,QAAQI,yBAErC/C,EAAeyC,YAAY5C,KAAK8C,QAAQI,+BCjF9CkB,aAEF,SAAAA,EAAYvE,EAAQC,EAAcgD,GAY9B9C,KAAK8C,QAAUjD,EAAOkD,OAAO,GAXZ,CACbsB,0BAA2B,sBAC3BC,yBAA0B,uBAC1BC,yBAA0B,wBAC1BC,qCAAsC,UACtCC,8BAA+B,UAC/BC,4BAA6B,uCAC7BC,iCAAkC,uCAClCC,mCAAoC,uCACpCC,iBAAkB,WAEqB/B,GAC3C9C,KAAKH,OAAOA,EACZG,KAAKF,aAAaA,EAElBE,KAAKI,eAAgB,8BACrBJ,KAAKgD,kBAAmB,gBACxBhD,KAAKoB,kBAAmB,OACxBpB,KAAKD,uBAAwB,wBAC7BC,KAAKiD,mBAAoB,eACzBjD,KAAKgC,kBAAmB,QACxBhC,KAAKiC,8BAA+B,QAEpCjC,KAAK8E,mBAAoB,CAACC,gBAAiB,KAC3C/E,KAAKgF,kBAAmB,CAACC,eAAgB,MAAOC,cAAe,SAC/DlF,KAAKmF,8BAA+B,CAACC,YAAY,QAASF,cAAe,QAEzElF,KAAKsD,WAAa,IAAI1D,EAAWC,EAAQC,EAAcE,KAAKD,wBAC5DC,KAAKuD,uBAAyB,gCAGlCC,KAAAA,SAAKC,EAAYtD,EAAgBuD,EAAkB5C,EAAc6C,GAE7DF,EAAW9B,SAAS3B,KAAKI,gBACzBD,EAAewB,SAAS3B,KAAKiD,oBAC7B9C,EAAegC,IAAInC,KAAK8E,oBAExBnB,EAAchC,SAAS3B,KAAKgD,mBAC5BlC,EAAaqB,IAAI,QAASnC,KAAK8C,QAAQ+B,kBAEvC7E,KAAKuD,uBAAyBvD,KAAKsD,WAAWpD,YAAYC,EAAgBH,KAAKI,mBAGnFwD,QAAAA,WACwC,OAAhC5D,KAAKuD,wBACLvD,KAAKuD,4BAGbM,cAAAA,SAAc1D,GACV,IAAI2D,EAAgB9D,KAAKH,OAAOG,KAAKF,cACjCgE,EAAcC,SAAS,aACvB5D,EAAewB,SAAS,YAGxBmC,EAAcC,SAAS,eACvB5D,EAAewB,SAAS,iBAIhC0D,WAAAA,SAAWlF,GACHA,EAAe4D,SAAS,mBACxB5D,EAAegC,IAAI,aAAcnC,KAAK8C,QAAQwB,0BACvCnE,EAAe4D,SAAS,mBAC/B5D,EAAegC,IAAI,aAAcnC,KAAK8C,QAAQyB,0BAE9CpE,EAAegC,IAAI,aAAcnC,KAAK8C,QAAQuB,8BAItDL,OAAAA,SAAO7D,EAAgB8D,GAChBA,GACC9D,EAAegC,IAAI,CAACmD,mBAAoB,KACxCnF,EAAeQ,KAAK,UAAUiB,KAAK,YAAY,KAG/CzB,EAAegC,IAAI,CAACmD,mBAAoBtF,KAAK8C,QAAQ0B,uCACrDrE,EAAeQ,KAAK,UAAUiB,KAAK,YAAY,OAIvDb,0BAAAA,SAA0BC,EAAeC,EAAUC,EAAUC,GACzD,OAAOnB,KAAKsD,WAAWvC,0BAA0BC,EAAeC,EAAUC,EAAUC,EAAYnB,KAAKI,eAAgBJ,KAAKoB,sBAG9HS,0BAAAA,SAA0BC,EAAeZ,EAAUa,EAAoBG,GACrDlC,KAAKsD,WAAWzB,0BAA0BC,EAAeZ,EAAUa,EAAoB/B,KAAKgC,kBAAmBhC,KAAKiC,8BAA+BC,GACzJC,IAAInC,KAAKmF,+BACjBrD,EAAcK,IAAInC,KAAKgF,sBAG3BtC,MAAAA,SAAM1B,EAAe2B,GACjB3C,KAAKsD,WAAWZ,MAAM1B,EAAe2B,MAGzCN,YAAAA,SAAYC,GACR,OAAOtC,KAAKsD,WAAWjB,YAAYC,MAGvC4B,MAAAA,SAAM/D,EAAgBgE,GACdA,EACQhE,EAAe4D,SAAS,YACxB5D,EAAegC,IAAI,aAAcnC,KAAK8C,QAAQ6B,kCACvCxE,EAAe4D,SAAS,cAC/B5D,EAAegC,IAAI,aAAcnC,KAAK8C,QAAQ8B,oCAE9CzE,EACKgC,IAAI,aAAcnC,KAAK8C,QAAQ4B,6BAC/BvC,IAAI,eAAgBnC,KAAK8C,QAAQ2B,+BAG9CtE,EAAegC,IAAI,aAAc,IAAKA,IAAI,eAAgB,iBC9G/C,SAACoD,EAAQtF,EAAGuF,GAC/B,IAAMC,EAAqBxF,EAAEyF,GAAGC,GAC1BA,EAAa,6BACbC,EAAAA,GAAaD,EAEbE,EAA2B,CAACC,QAAU,OAAQC,YAAY,OAAQC,kBAAkB,QACpFC,EAA2B,CAACC,MAAQ,MAAOC,OAAS,IAAKC,QAAU,IAAKC,QAAU,OAAQf,mBAAmB,eAC7GgB,EAA2B,CAACN,kBAAkB,QAE9CO,EAAW,CACbC,eAAc,EACdC,QAAO,EACPC,QAAQ,MAGNC,EAfoC,WAgBtC,SAAAA,EAAYC,EAAe9D,EAAS4D,GAChC,GAAsB,oBAAXlB,EACP,MAAM,IAAIqB,UAAU,yEAIxB7G,KAAK4G,cAAgBA,EACrB5G,KAAK8C,QAAU7C,EAAE8C,OAAO,GAAIwD,EAAUzD,GAGlC9C,KAAK0G,QADLA,IAGe1G,KAAK8C,QAAQ2D,OAAO,IAAI5D,EAAc5C,EAAGD,KAAK4G,cAAe5G,KAAK8C,SAAS,IAAIsB,EAAWnE,EAAGD,KAAK4G,cAAe5G,KAAK8C,UAEzI9C,KAAK8G,UAAY,KACjB9G,KAAK+G,cAAgB,KACrB/G,KAAKgH,gBAAkB,KACvBhH,KAAKiH,YAAc,KACnBjH,KAAKkH,aAAe,KACpBlH,KAAKmH,OAAS,KAGdnH,KAAKoH,mBAAsB,KAC3BpH,KAAKqH,gBAAoB,KACzBrH,KAAKsH,mBAAuB,KAC5BtH,KAAKuH,iBAAqB,KAG1BvH,KAAKkC,SAAS,KACdlC,KAAKwH,0BAA4B,KACjCxH,KAAKyH,cAAe,EACpBzH,KAAK0H,oBAAsB,KAC3B1H,KAAK2H,qBAAuB,KAC5B3H,KAAK4H,oBAAqB,EAC1B5H,KAAK6H,OAlD6B,IAAAC,EAAAnB,EAAAoB,UAAA,OAAAD,EAqDtCE,uBArDsC,SAqDfC,GACnB,IAAIC,EAAalI,KAAKgH,gBAAgBkB,YAClCD,GAASjI,KAAKwH,2BAA2BU,KACzClI,KAAKmH,OAAOgB,SACZnI,KAAKwH,0BAA0BU,IAzDDJ,EA6DtCM,aA7DsC,WA8DlCpI,KAAKkH,aAAamB,MAAMvC,QAAU,QA9DAgC,EAiEtCQ,aAjEsC,WAkElCtI,KAAKkH,aAAamB,MAAMvC,QAAU,SAlEAgC,EAsEtCS,uBAtEsC,WAuED,OAA7BvI,KAAK0H,sBACL1H,KAAK0G,QAAQhE,MAAMzC,EAAED,KAAK0H,sBAAsB,GAChD1H,KAAK0H,oBAAsB,MAE/B1H,KAAK2H,qBAAuB,MA3EMG,EA8EtCU,mBA9EsC,WA+ElC,IAAIC,EAAOzI,KAAKiH,YAAYyB,MAAMC,OAAOpH,cACrCqH,EAAU,EACd3I,EAAED,KAAKkH,cAAcvG,KAAK,MAAMkI,KAAK,SAACC,EAAGC,GACrC,IAAIC,EAAoB/I,EAAE8I,GAC1B,GAAY,IAARN,EACAO,EAAkBC,OAClBL,QAEC,CACD,IAAI1H,EAAW8H,EAAkBE,KAAK,gBACrBF,EAAkBE,KAAK,oBACG,GAAxBhI,EAASiI,QAAQV,IAChCO,EAAkBC,OAClBL,KAEAI,EAAkBI,UAI9BpJ,KAAK4H,mBAA+B,EAAVgB,EAC1B5I,KAAKuI,0BAnG6BT,EAsGtCuB,iBAtGsC,SAsGrBC,GACTtJ,KAAKiH,YAAYyB,QACjB1I,KAAKiH,YAAYyB,MAAQ,GACzB1I,KAAKuJ,MAAMD,KAzGmBxB,EA6GtC0B,cA7GsC,WA8GlCxJ,KAAKuI,yBACLvI,KAAKqJ,kBAAiB,GACtBrJ,KAAKoI,gBAhH6BN,EAmHtC2B,mBAnHsC,SAmHnBC,GAAe,IAAAC,EAAA3J,KAC1BiB,EAAWyI,EAAchB,MACzBxH,EAAWwI,EAAcjB,KACzBtH,EAAauI,EAAcE,SAC3B5I,EAAgBf,EAAE,SACtBe,EAAckI,KAAK,YAAajI,GAChCD,EAAckI,KAAK,cAAehI,EAASK,eAE3C,IAAIsI,EAAoB7J,KAAK0G,QAAQ3F,0BAA0BC,EAAeC,EAAUC,EAAUC,GAClGH,EAAcS,SAASzB,KAAKkH,cAE5B,IAAI4C,EAAa,SAAbA,EAAcC,GACd/I,EAAckI,KAAK,mBAAmB,GACtC,IAAIpH,EAAgB7B,EAAE,SACtB6B,EAAcoH,KAAK,YAAajI,GAChCyI,EAAcE,UAAW,EACzBC,GAAkB,GAElB,IAAIG,EAAa,WACbhJ,EAAckI,KAAK,mBAAmB,GACtClI,EAAckI,KAAK,gBAAiBY,GACpChI,EAAcoH,KAAK,gBAAiB,MACpCpH,EAAcmI,SACdP,EAAcE,UAAW,EACzBC,GAAkB,GAClB5J,EAAE0J,EAAK/C,eAAesD,QAAQ,WAE9BC,EAA6B,WAC7BH,IACAL,EAAKH,iBAaT,OAXAG,EAAKjD,QAAQ7E,0BACTC,EACAZ,EACAiJ,EACAR,EAAKzH,UAETJ,EAAcsI,aAAaT,EAAK3C,iBAChChG,EAAckI,KAAK,gBAAiBc,GACpClI,EAAcoH,KAAK,gBAAiBiB,GACX,oBAAdJ,IAAyC,IAAZA,GACnC9J,EAAE0J,EAAK/C,eAAesD,QAAQ,UAC5BpI,GAEXd,EAAckI,KAAK,gBAAiBY,GAEhC3I,GACA2I,GAAW,GAEf,IAAIO,EAAc,SAAC/H,EAAOgI,GACtBX,EAAKjD,QAAQhE,MAAMzC,EAAEqC,EAAMC,QAAQ/B,QAAQ,MAAO8J,IAEtDtJ,EAAcuJ,MAAM,SAAAjI,GAChBA,EAAMkI,iBACNlI,EAAMmI,kBACWxK,EAAEqC,EAAMoI,eAAelK,QAAQ,MAAM0I,KAAK,gBAC3DyB,GACAhB,EAAK1C,YAAY2D,UAClBC,UAAU,SAAAC,GAAA,OAAKT,EAAYS,GAAG,KAAOC,SAAS,SAAAD,GAAA,OAAKT,EAAYS,GAAG,MA7KnChD,EAgLtCkD,aAhLsC,SAgLzBC,GACT,IAAIC,EAAuBjL,EAAED,KAAKkH,cAAcvG,KAAK,oCAAoCwK,UACzF,GAAkC,EAA9BD,EAAqBzK,OAAY,CAKjC,GAJIT,KAAK4H,qBACL5H,KAAKgI,wBAAuB,GAC5BhI,KAAKsI,gBAEwB,OAA7BtI,KAAK0H,oBACL1H,KAAK2H,qBAAuBsD,EAAO,EAAIC,EAAqBzK,OAAS,OAIrE,GADAT,KAAK0G,QAAQhE,MAAMzC,EAAED,KAAK0H,sBAAsB,GAC5CuD,EAAM,CACN,IAAIG,EAAWpL,KAAK2H,qBAAuB,EAC3C3H,KAAK2H,qBAAuByD,EAAWF,EAAqBzK,OAAS2K,EAAW,MAC7E,CACH,IAAIA,EAAWpL,KAAK2H,qBAAuB,EAC3C3H,KAAK2H,qBAAmC,GAAZyD,EAAgBA,EAAWF,EAAqBzK,OAAS,EAG7FT,KAAK0H,oBAAsBwD,EAAqBlL,KAAK2H,sBACrD3H,KAAK0G,QAAQhE,MAAMzC,EAAED,KAAK0H,sBAAsB,KArMlBI,EAyMtCyB,MAzMsC,SAyMhC8B,GACFrL,KAAKiH,YAAYoB,MAAMnC,MAAsC,IAA9BlG,KAAKiH,YAAYyB,MAAMjI,OAAa,EAAI,KACvET,KAAKwI,qBACDxI,KAAK4H,oBACDyD,GACArL,KAAKgI,uBAAuBqD,GAChCrL,KAAKsI,gBAELtI,KAAKoI,gBAjNyBN,EAqNtCwD,OArNsC,WAsNlC,IAAInL,EAAkBH,KAAK+G,cAC3B/G,KAAK0G,QAAQ7C,cAAc1D,GAC3BH,KAAKuL,eAAepL,GACpBH,KAAKwL,mBAAmBvL,EAAED,KAAK8G,WAAY3G,IAzNT2H,EA4NtClE,QA5NsC,WA6NlC3D,EAAEwL,WAAWzL,KAAK4G,cAAehB,GACjC3F,EAAED,KAAK4G,eAAe8E,IAAI9F,GAI1B3F,EAAEsF,EAAOoG,UAAUC,OAAO,UAAW5L,KAAKqH,iBAE1CpH,EAAEsF,EAAOoG,UAAUC,OAAO,UAAW5L,KAAKuH,kBAErB,OAAjBvH,KAAK0G,SACL1G,KAAK0G,QAAQ9C,UAGG,OAAhB5D,KAAKmH,QACLnH,KAAKmH,OAAO0E,UAGO,OAAnB7L,KAAK8G,WACL7G,EAAED,KAAK8G,WAAWmD,UA/OYnC,EA0PtCzC,WA1PsC,WA2PlCrF,KAAKuL,eAAetL,EAAED,KAAK+G,iBA3POe,EA8PtCgE,eA9PsC,WA+PlC9L,KAAKwL,mBAAmBvL,EAAED,KAAK8G,WAAY7G,EAAED,KAAK+G,iBA/PhBe,EAkQtCyD,eAlQsC,SAkQvBpL,GACPH,KAAK0G,QAAQrB,YACbrF,KAAK0G,QAAQrB,WAAWlF,IApQM2H,EAuQtC0D,mBAvQsC,SAuQnB/H,EAAYtD,GAC3B,IAAI+B,EAAWlC,KAAK4G,cAAc1E,SAC9BlC,KAAKkC,WAAWA,IACZA,GACAlC,KAAKiH,YAAYoB,MAAMvC,QAAU,OACjC9F,KAAK0G,QAAQ1C,OAAO7D,GAAgB,GAEhCH,KAAK8C,QAAQ0D,gBACb/C,EAAWmI,OAAO,YAAa5L,KAAKsH,oBACpCrH,EAAEsF,EAAOoG,UAAUC,OAAO,UAAW5L,KAAKqH,kBAE9ClH,EAAeyL,OAAO,QAAS5L,KAAKoH,oBACpCnH,EAAEsF,EAAOoG,UAAUC,OAAO,UAAW5L,KAAKuH,oBAG1CvH,KAAKiH,YAAYoB,MAAMvC,QAAU,eACjC9F,KAAK0G,QAAQ1C,OAAO7D,GAAgB,GAEhCH,KAAK8C,QAAQ0D,gBACb/C,EAAWsI,UAAU/L,KAAKsH,oBAC1BrH,EAAEsF,EAAOoG,UAAUK,QAAQhM,KAAKqH,kBAEpClH,EAAeoK,MAAMvK,KAAKoH,oBAC1BnH,EAAEsF,EAAOoG,UAAUK,QAAQhM,KAAKuH,mBAEpCvH,KAAKkC,SAASA,IAhSgB4F,EAoStCD,KApSsC,WAoS/B,IAAAoE,EAAAjM,KACCkM,EAAiBjM,EAAED,KAAK4G,eAC5BsF,EAAe9C,OAEf,IAAI3F,EAAaxD,EAAE,UACnBD,KAAK8G,UAAYrD,EAAW0I,IAAI,GAEhC,IAAIhM,EAAiBF,EAAE,SACvBE,EAAegC,IAAI0D,GAEnB7F,KAAK+G,cAAgB5G,EAAegM,IAAI,GAExChM,EAAesB,SAASzB,KAAK8G,WAE7B,IAAIpD,EAAmBzD,EAAE,SACzBD,KAAKgH,gBAAkBtD,EAAiByI,IAAI,GAE5CzI,EAAiBjC,SAASzB,KAAK+G,eAE/B,IAAIjG,EAAeb,EAAE,4CACrBa,EAAaqB,IAAI8D,GACjBnF,EAAaW,SAASzB,KAAKgH,iBAC3BhH,KAAKiH,YAAcnG,EAAaqL,IAAI,GAEpC,IAAIxI,EAAgB1D,EAAE,SACjBkC,IAAI,CAAC2D,QAAU,SACfrE,SAASgC,GACdzD,KAAKkH,aAAevD,EAAcwI,IAAI,GAGtCxI,EAAcxB,IAAImE,GAGlBtG,KAAKqH,gBAAkB,WACnB4E,EAAKxE,cAAe,GAGxBzH,KAAKsH,mBAAqB,WACtB2E,EAAKxE,cAAe,GAGxBzH,KAAKuH,iBAAmB,SAAAjF,GACd2J,EAAKnF,YAAcxE,EAAMC,QAAUtC,EAAEmM,SAASH,EAAKnF,UAAWxE,EAAMC,SACtE0J,EAAKzC,iBAIbxJ,KAAKoH,mBAAqB,SAAA9E,GACO,SAAzBA,EAAMC,OAAOC,UACbvC,EAAEgM,EAAKhF,aAAaoF,IAAI,IAAIzB,QAC5BqB,EAAKrE,oBAAsBqE,EAAKvF,QAAQrE,YAAYC,KACpD2J,EAAKjE,wBAAuB,GAC5BiE,EAAK3D,iBAIbtI,KAAK0G,QAAQlD,KAAKC,EAAYtD,EAAgBuD,EAAkB5C,EAAc6C,GAC9EF,EAAW6I,YAAYJ,GAEvBlM,KAAKmH,OAAS,IAAI3B,EAAOxF,KAAKiH,YAAajH,KAAKkH,aAAc,CAC1DqF,UAAW,eACXC,UAAW,CACPC,gBAAiB,CAACC,SAAQ,GAC1BtD,KAAM,CAACsD,SAAQ,GACfC,KAAM,CAAED,SAAQ,MAGxB1M,KAAK0G,QAAQ7C,cAAc1D,GAC3BH,KAAKuL,eAAepL,GACpBH,KAAKwL,mBAAmB/H,EAAYtD,GAGpCF,EAAE0L,UAAUiB,MAAM,WACd,IAAIC,EAAgBX,EAAevL,KAAK,UACxCkM,EAAchE,KACV,SAACiE,EAAOpD,GACJuC,EAAKxC,mBAAmBC,KAGhCuC,EAAKrE,mBAA4C,EAAvBiF,EAAcpM,OACxCwL,EAAKjE,wBAAuB,KAGhCrE,EAAc4G,MAAO,SAAAjI,GAAA,OAASA,EAAMmI,oBAEpC9G,EAAckH,UAAU,WAAA,OAAMoB,EAAK1D,2BAE/BvI,KAAK8C,QAAQ0D,eAEb1F,EAAaiM,QAAQ,WAAA,OAAMd,EAAKvF,QAAQxC,MAAM/D,GAAgB,KACjD6M,SAAS,WACDf,EAAKxE,cACNwE,EAAKvF,QAAQxC,MAAM/D,GAAgB,KAI3DW,EAAasB,GAAG,UAAW,SAACE,GACxB,GAAmB,IAAfA,EAAM2K,MACN3K,EAAMkI,iBACNyB,EAAKjB,cAAa,QAEjB,GAAmB,IAAf1I,EAAM2K,MACX3K,EAAMkI,iBACNyB,EAAKjB,cAAa,QAEjB,GAAmB,IAAf1I,EAAM2K,MACX3K,EAAMkI,sBAEL,GAAmB,GAAflI,EAAM2K,MACPhB,EAAKhF,YAAYyB,MACjBpG,EAAMkI,iBAGNyB,EAAKzC,oBAGR,CACD,GAAmB,GAAflH,EAAM2K,QAIDhB,EAAKhF,YAAYyB,MACtB,CACI,IAAIwE,EAAUjN,EAAEgM,EAAKlF,eAAepG,KAAK,WAAWwM,OACpD,GAAID,EAAQzM,OACSyM,EAAQhE,KAAK,gBAC9Bc,GAEJiC,EAAKjE,wBAAuB,GAGpCiE,EAAK1D,4BAIbzH,EAAasB,GAAG,QAAS,SAACE,GACtB,GAAmB,IAAfA,EAAM2K,OAA8B,GAAf3K,EAAM2K,MAC3B,GAAIhB,EAAKvE,oBAAqB,CACCzH,EAAEgM,EAAKvE,qBACKwB,KAAK,gBAC5CyB,GACAsB,EAAKzC,oBACF,CAIH,IAHA,IAAIf,EAAOwD,EAAKhF,YAAYyB,MAAMC,OAAOpH,cACrC6L,EAAgBnB,EAAK/E,aAAamG,iBAAiB,MACnDC,EAAe,KACVxE,EAAI,EAAGA,EAAIsE,EAAc3M,SAAUqI,EAAG,CAC3C,IAAIyE,EAAKH,EAActE,GACvB,GAAIyE,EAAGC,YAAY7E,OAAOpH,eAAiBkH,EAC3C,CACI6E,EAAaC,EACb,OAGR,GAAID,EAAc,CACd,IAAItM,EAAgBf,EAAEqN,GAEtB,IADiBtM,EAAckI,KAAK,mBAEnBlI,EAAckI,KAAK,gBAChCuE,GAEJxB,EAAK5C,kBAAiB,SAIV,IAAf/G,EAAM2K,OACXhB,EAAKzC,kBAIb1I,EAAasB,GAAG,QAAS,WACrB6J,EAAK1C,OAAM,MA/cmB5C,EAAA,GAod1C,SAAS+G,EAAgB5K,GACrB,OAAO9C,KAAK6I,KAAK,WACb,IAAIK,EAAOjJ,EAAED,MAAMkJ,KAAKtD,GAExB,IAAKsD,EAAM,CACP,GAAI,UAAUyE,KAAK7K,GACf,OAGJoG,EAAO,IAAIvC,EAAO3G,KADwB,iBAAZ8C,EAAsBA,EAAQ,MAE5D7C,EAAED,MAAMkJ,KAAKtD,EAASsD,GAG1B,GAAuB,iBAAZpG,EAAsB,CAC7B,IAAI8K,EAAa9K,EACjB,GAAgC,oBAArBoG,EAAK0E,GACZ,MAAM,IAAI/G,UAAJ,oBAAkC+G,EAAlC,KAEV1E,EAAK0E,QAkBjB,OAbA3N,EAAEyF,GAAGC,GAAc+H,EAGnBzN,EAAEyF,GAAGC,EAAWkI,OAAO,GAAGC,cAAgBnI,EAAWoI,MAAM,IAAM,WAC7D,OAAO9N,EAAED,MAAMkJ,KAAKtD,IAGxB3F,EAAEyF,GAAGC,GAAYqI,YAAcrH,EAE/B1G,EAAEyF,GAAGC,GAAYsI,WAAa,WAE1B,OADAhO,EAAEyF,GAAGC,GAAcF,EACZiI,GAEJ/G,EAxfY,CAyfpBpB,OAAQtF,EAAGuF","sourcesContent":["class Bs4Commons {\r\n    \r\n    constructor(jQuery, hiddenSelect, dropDownItemHoverClass){\r\n        this.$=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.dropDownItemHoverClass = dropDownItemHoverClass;\r\n    }\r\n\r\n    HandleLabel($selectedPanel, containerClass){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            let $filterInput = $selectedPanel.find('input');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $filterInput.attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    CreateDropDownItemContent(\r\n        $dropDownItem, optionId, itemText, isSelected,\r\n        containerClass, dropDownItemClass){\r\n        let checkBoxId = `${containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected) => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        $dropDownItem.addClass(dropDownItemClass)\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem,\r\n        selectedItemClass, removeSelectedItemButtonClass, disabled\r\n    ){\r\n        $selectedItem.addClass(selectedItemClass);\r\n        \r\n        this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .addClass(removeSelectedItemButtonClass)\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", disabled)\r\n        return $button;\r\n    }\r\n\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        if (isHover)\r\n            $dropDownItem.addClass(this.dropDownItemHoverClass);\r\n        else\r\n            $dropDownItem.removeClass(this.dropDownItemHoverClass);\r\n    }\r\n}\r\nexport default Bs4Commons;\r\n","import Bs4Commons from \"./Bs4Commons.es8\";\r\n\r\nclass Bs4AdapterCss {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass: 'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.options.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        $container.addClass(this.options.containerClass);\r\n        $selectedPanel.addClass(this.options.selectedPanelClass);\r\n\r\n        $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n        $filterInputItem.addClass(this.options.filterInputItemClass)\r\n        $filterInput.addClass(this.options.filterInputClass);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.options.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            $selectedPanel.removeClass(this.options.selectedPanelDisabledClass);\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n        }\r\n        else{\r\n            $selectedPanel.addClass(this.options.selectedPanelDisabledClass);\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n        }\r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.options.containerClass, this.options.dropDownItemClass);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.options.selectedItemClass, this.options.removeSelectedItemButtonClass, disabled);\r\n    }\r\n\r\n    \r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n            $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n        }else{\r\n            $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","import Bs4Commons from \"./Bs4Commons.es8\";\r\n//import styles from './../../scss/BsMutliSelect.scss'\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight: 'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight: 'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057'\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n\r\n        this.containerClass= 'dashboardcode-bsmultiselect';\r\n        this.dropDownMenuClass= 'dropdown-menu';\r\n        this.dropDownItemClass= 'px-2';\r\n        this.dropDownItemHoverClass= 'text-primary bg-light';\r\n        this.selectedPanelClass= 'form-control';\r\n        this.selectedItemClass= 'badge';\r\n        this.removeSelectedItemButtonClass= 'close';\r\n\r\n        this.selectedPanelStyle= {'margin-bottom': '0'};\r\n        this.selectedItemStyle= {'padding-left': '0px', 'line-height': '1.5em'};\r\n        this.removeSelectedItemButtonStyle= {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\n        this.bs4Commons = new Bs4Commons(jQuery, hiddenSelect, this.dropDownItemHoverClass);\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n\r\n        $container.addClass(this.containerClass);\r\n        $selectedPanel.addClass(this.selectedPanelClass);\r\n        $selectedPanel.css(this.selectedPanelStyle);\r\n\r\n        $dropDownMenu.addClass(this.dropDownMenuClass);\r\n        $filterInput.css(\"color\", this.options.filterInputColor);\r\n\r\n        this.bs4CommonsLabelDispose = this.bs4Commons.HandleLabel($selectedPanel, this.containerClass);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose !== null)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n    \r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            $selectedPanel.css({\"background-color\": \"\"});\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n        }\r\n        else{\r\n            $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor});\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n        }\r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        return this.bs4Commons.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, this.containerClass, this.dropDownItemClass)\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        let $buttom = this.bs4Commons.CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, this.selectedItemClass, this.removeSelectedItemButtonClass, disabled);\r\n        $buttom.css(this.removeSelectedItemButtonStyle);\r\n        $selectedItem.css(this.selectedItemStyle);\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        this.bs4Commons.Hover($dropDownItem, isHover);\r\n    }\r\n\r\n    FilterClick(event){\r\n        return this.bs4Commons.FilterClick(event)\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n                if ($selectedPanel.hasClass(\"is-valid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n                } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n                } else {\r\n                    $selectedPanel\r\n                        .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                        .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n                }\r\n        }else{\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import $ from 'jquery'\r\nimport Popper from 'popper.js'\r\nimport Bs4AdapterCss from './Bs4AdapterCss.es8'\r\nimport Bs4Adapter from './Bs4Adapter.es8'\r\n\r\n// TODO: try to find convinient way to declare private members. Is it convinient enough to move them into IIFE?\r\nconst BsMultiSelect = ((window, $, Popper) => {\r\n    const JQUERY_NO_CONFLICT = $.fn[pluginName];\r\n    const pluginName = 'dashboardCodeBsMultiSelect';\r\n    const dataKey = `${pluginName}`;\r\n\r\n    const defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\n    const defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\n    const defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n    const defaults = {\r\n        doManageFocus:true,\r\n        useCss:false,\r\n        adapter:null\r\n    }\r\n\r\n    class Plugin {\r\n        constructor(selectElement, options, adapter) {\r\n            if (typeof Popper === 'undefined') {\r\n                throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n            }\r\n\r\n            // readonly\r\n            this.selectElement = selectElement;\r\n            this.options = $.extend({}, defaults, options);\r\n\r\n            if (adapter)\r\n                this.adapter = adapter;\r\n            else\r\n                this.adapter = this.options.useCss?new Bs4AdapterCss($, this.selectElement, this.options):new Bs4Adapter($, this.selectElement, this.options);\r\n            \r\n            this.container = null;\r\n            this.selectedPanel = null;\r\n            this.filterInputItem = null;\r\n            this.filterInput = null;\r\n            this.dropDownMenu = null;\r\n            this.popper = null;\r\n\r\n            // removable handlers\r\n            this.selectedPanelClick  = null;\r\n            this.documentMouseup   = null;\r\n            this.containerMousedown   = null;\r\n            this.documentMouseup2   = null;\r\n\r\n            // state\r\n            this.disabled=null;\r\n            this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n            this.skipFocusout = false;\r\n            this.hoveredDropDownItem = null;\r\n            this.hoveredDropDownIndex = null;\r\n            this.hasDropDownVisible = false;\r\n            this.init();\r\n        }\r\n\r\n        updateDropDownPosition(force) {\r\n            let offsetLeft = this.filterInputItem.offsetLeft;\r\n            if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n                this.popper.update();\r\n                this.filterInputItemOffsetLeft=offsetLeft;\r\n            }\r\n        }\r\n\r\n        hideDropDown() {\r\n            this.dropDownMenu.style.display = 'none';\r\n        }\r\n\r\n        showDropDown() {\r\n            this.dropDownMenu.style.display = 'block';\r\n        }\r\n\r\n        // Public methods\r\n        resetDropDownMenuHover() {\r\n            if (this.hoveredDropDownItem !== null) {\r\n                this.adapter.Hover($(this.hoveredDropDownItem), false);\r\n                this.hoveredDropDownItem = null;\r\n            }\r\n            this.hoveredDropDownIndex = null;\r\n        }\r\n\r\n        filterDropDownMenu() {\r\n            let text = this.filterInput.value.trim().toLowerCase();\r\n            let visible = 0;\r\n            $(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n                let $dropDownMenuItem = $(dropDownMenuItem);\r\n                if (text == '') {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                }\r\n                else {\r\n                    let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                    let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                    if (!isSelected && itemText.indexOf(text)>=0) {\r\n                        $dropDownMenuItem.show();\r\n                        visible++;\r\n                    } else {\r\n                        $dropDownMenuItem.hide();\r\n                    }\r\n                }\r\n            });\r\n            this.hasDropDownVisible = visible > 0;\r\n            this.resetDropDownMenuHover();\r\n        }\r\n\r\n        clearFilterInput(updatePosition) {\r\n            if (this.filterInput.value) {\r\n                this.filterInput.value = '';\r\n                this.input(updatePosition);\r\n            }\r\n        }\r\n\r\n        closeDropDown() {\r\n            this.resetDropDownMenuHover();\r\n            this.clearFilterInput(true);\r\n            this.hideDropDown();\r\n        }\r\n\r\n        appendDropDownItem(optionElement) {\r\n            let optionId = optionElement.value;\r\n            let itemText = optionElement.text;\r\n            let isSelected = optionElement.selected;\r\n            let $dropDownItem = $(\"<LI/>\");\r\n            $dropDownItem.data(\"option-id\", optionId);\r\n            $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n\r\n            let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\r\n            $dropDownItem.appendTo(this.dropDownMenu);\r\n\r\n            let appendItem = (doTrigger) => {\r\n                $dropDownItem.data(\"option-selected\", true);\r\n                let $selectedItem = $(\"<LI/>\");\r\n                $selectedItem.data(\"option-id\", optionId);\r\n                optionElement.selected = true;\r\n                adoptDropDownItem(true);\r\n\r\n                let removeItem = () => {\r\n                    $dropDownItem.data(\"option-selected\", false);\r\n                    $dropDownItem.data(\"option-toggle\", appendItem);\r\n                    $selectedItem.data(\"option-remove\", null);\r\n                    $selectedItem.remove();\r\n                    optionElement.selected = false;\r\n                    adoptDropDownItem(false);\r\n                    $(this.selectElement).trigger('change');\r\n                };\r\n                let removeItemAndCloseDropDown = () => {\r\n                    removeItem();\r\n                    this.closeDropDown();\r\n                };\r\n                this.adapter.CreateSelectedItemContent(\r\n                    $selectedItem,\r\n                    itemText,\r\n                    removeItemAndCloseDropDown,\r\n                    this.disabled\r\n                );\r\n                $selectedItem.insertBefore(this.filterInputItem);\r\n                $dropDownItem.data(\"option-toggle\", removeItem);\r\n                $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n                if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                     $(this.selectElement).trigger('change');\r\n                return $selectedItem;\r\n            }\r\n            $dropDownItem.data(\"option-toggle\", appendItem );\r\n            \r\n            if (isSelected) {\r\n                appendItem(false);\r\n            }\r\n            let manageHover = (event, isOn) => {\r\n                this.adapter.Hover($(event.target).closest(\"LI\"), isOn)\r\n            }\r\n            $dropDownItem.click(event => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                let toggleItem = $(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n                toggleItem();\r\n                this.filterInput.focus();\r\n            }).mouseover(e => manageHover(e, true)).mouseout(e => manageHover(e, false));\r\n        }\r\n\r\n        keydownArrow(down) {\r\n            let visibleNodeListArray = $(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n            if (visibleNodeListArray.length > 0) {\r\n                if (this.hasDropDownVisible) {\r\n                    this.updateDropDownPosition(true);\r\n                    this.showDropDown();\r\n                }\r\n                if (this.hoveredDropDownItem === null) {\r\n                    this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n                }\r\n                else {\r\n                    this.adapter.Hover($(this.hoveredDropDownItem), false);\r\n                    if (down) {\r\n                        let newIndex = this.hoveredDropDownIndex + 1;\r\n                        this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                    } else {\r\n                        let newIndex = this.hoveredDropDownIndex - 1;\r\n                        this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                    }\r\n                }\r\n                this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n                this.adapter.Hover($(this.hoveredDropDownItem), true);\r\n            }\r\n        }\r\n\r\n        input(forceUpdatePosition) {\r\n            this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n            this.filterDropDownMenu();\r\n            if (this.hasDropDownVisible) {\r\n                if (forceUpdatePosition) // ignore it if it is called from\r\n                    this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n                this.showDropDown();\r\n            } else {\r\n                this.hideDropDown();\r\n            }\r\n        }\r\n\r\n        Update(){\r\n            let $selectedPanel = (this.selectedPanel);\r\n            this.adapter.UpdateIsValid($selectedPanel);\r\n            this.UpdateSizeImpl($selectedPanel);\r\n            this.UpdateDisabledImpl($(this.container), $selectedPanel);\r\n        }\r\n\r\n        Dispose(){\r\n            $.removeData(this.selectElement, dataKey);\r\n            $(this.selectElement).off(dataKey)\r\n\r\n            // removable handlers\r\n            //$(window.selectedPanelClick).unbind(\"click\", this.selectedPanelClick);\r\n            $(window.document).unbind(\"mouseup\", this.documentMouseup);\r\n            //$(this.container).unbind(\"mousedown\", this.containerMousedown);\r\n            $(window.document).unbind(\"mouseup\", this.documentMouseup2);\r\n            \r\n            if (this.adapter !== null) {\r\n                this.adapter.Dispose()\r\n            }\r\n\r\n            if (this.popper !== null) {\r\n                this.popper.destroy()\r\n            }\r\n            \r\n            if (this.container !== null) {\r\n                $(this.container).remove();\r\n            }\r\n\r\n            // this.selectedPanel = null;\r\n            // this.filterInputItem = null;\r\n            // this.filterInput = null;\r\n            // this.dropDownMenu = null;\r\n            // this.selectElement = null;\r\n            // this.options = null;\r\n        }\r\n\r\n        UpdateSize(){\r\n            this.UpdateSizeImpl($(this.selectedPanel));\r\n        }\r\n\r\n        UpdateDisabled(){\r\n            this.UpdateDisabledImpl($(this.container), $(this.selectedPanel));\r\n        }\r\n\r\n        UpdateSizeImpl($selectedPanel){\r\n            if (this.adapter.UpdateSize)\r\n                this.adapter.UpdateSize($selectedPanel);\r\n        }\r\n\r\n        UpdateDisabledImpl($container, $selectedPanel){\r\n            let disabled = this.selectElement.disabled;\r\n            if (this.disabled!==disabled){\r\n                if (disabled) {\r\n                    this.filterInput.style.display = \"none\";\r\n                    this.adapter.Enable($selectedPanel, false);\r\n\r\n                    if (this.options.doManageFocus){\r\n                        $container.unbind(\"mousedown\", this.containerMousedown);\r\n                        $(window.document).unbind(\"mouseup\", this.documentMouseup);\r\n                    }\r\n                    $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                    $(window.document).unbind(\"mouseup\", this.documentMouseup2);\r\n                    \r\n                } else {\r\n                    this.filterInput.style.display = \"inline-block\";\r\n                    this.adapter.Enable($selectedPanel, true);\r\n\r\n                    if (this.options.doManageFocus) {\r\n                        $container.mousedown(this.containerMousedown);    // removable\r\n                        $(window.document).mouseup(this.documentMouseup); // removable\r\n                    }\r\n                    $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                    $(window.document).mouseup(this.documentMouseup2); // removable\r\n                }\r\n                this.disabled=disabled;\r\n            }\r\n        }\r\n\r\n        init() {\r\n            let $selectElement = $(this.selectElement);\r\n            $selectElement.hide();\r\n\r\n            let $container = $(\"<DIV/>\");\r\n            this.container = $container.get(0);\r\n\r\n            let $selectedPanel = $(\"<UL/>\");\r\n            $selectedPanel.css(defSelectedPanelStyleSys);\r\n            \r\n            this.selectedPanel = $selectedPanel.get(0);\r\n            \r\n            $selectedPanel.appendTo(this.container);\r\n\r\n            let $filterInputItem = $('<LI/>');\r\n            this.filterInputItem = $filterInputItem.get(0)\r\n\r\n            $filterInputItem.appendTo(this.selectedPanel);\r\n\r\n            let $filterInput = $('<INPUT type=\"search\" autocomplete=\"off\">');\r\n            $filterInput.css(defFilterInputStyleSys);\r\n            $filterInput.appendTo(this.filterInputItem);\r\n            this.filterInput = $filterInput.get(0);\r\n\r\n            let $dropDownMenu = $(\"<UL/>\")\r\n                .css({\"display\":\"none\"})\r\n                .appendTo($container);\r\n            this.dropDownMenu = $dropDownMenu.get(0);\r\n            \r\n            // prevent heavy understandable styling error\r\n            $dropDownMenu.css(defDropDownMenuStyleSys);\r\n\r\n            // create handlers\r\n            this.documentMouseup = () => {\r\n                this.skipFocusout = false;\r\n            }\r\n    \r\n            this.containerMousedown = () => {\r\n                this.skipFocusout = true;\r\n            };\r\n\r\n            this.documentMouseup2 = event => {\r\n                if (!(this.container === event.target || $.contains(this.container, event.target))) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n\r\n            this.selectedPanelClick = event => {\r\n                if (event.target.nodeName != \"INPUT\")\r\n                    $(this.filterInput).val('').focus();\r\n                if (this.hasDropDownVisible && this.adapter.FilterClick(event)){\r\n                    this.updateDropDownPosition(true);\r\n                    this.showDropDown();\r\n                }\r\n            };\r\n\r\n            this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu);\r\n            $container.insertAfter($selectElement);\r\n            \r\n            this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n                placement: 'bottom-start',\r\n                modifiers: {\r\n                    preventOverflow: {enabled:false},\r\n                    hide: {enabled:false},\r\n                    flip: { enabled:false }\r\n                    }\r\n            });\r\n            this.adapter.UpdateIsValid($selectedPanel);\r\n            this.UpdateSizeImpl($selectedPanel);\r\n            this.UpdateDisabledImpl($container, $selectedPanel);\r\n\r\n            // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n            $(document).ready(() => {\r\n                let selectOptions = $selectElement.find('OPTION');\r\n                selectOptions.each(\r\n                    (index, optionElement) => {\r\n                        this.appendDropDownItem(optionElement);\r\n                    }\r\n                );\r\n                this.hasDropDownVisible = selectOptions.length > 0;\r\n                this.updateDropDownPosition(false);\r\n            });\r\n\r\n            $dropDownMenu.click( event => event.stopPropagation());\r\n\r\n            $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n            if (this.options.doManageFocus)\r\n            {\r\n                $filterInput.focusin(() => this.adapter.Focus($selectedPanel, true))\r\n                            .focusout(() => {\r\n                                if (!this.skipFocusout)\r\n                                    this.adapter.Focus($selectedPanel, false)\r\n                                });\r\n            }\r\n\r\n            $filterInput.on(\"keydown\", (event) => {\r\n                if (event.which == 38) {\r\n                    event.preventDefault();\r\n                    this.keydownArrow(false);\r\n                }\r\n                else if (event.which == 40) {\r\n                    event.preventDefault()\r\n                    this.keydownArrow(true);\r\n                }\r\n                else if (event.which == 13) {\r\n                    event.preventDefault();\r\n                }\r\n                else if (event.which == 9) {\r\n                    if (this.filterInput.value) {\r\n                        event.preventDefault();\r\n                    }\r\n                    else {\r\n                        this.closeDropDown();\r\n                    }\r\n                }\r\n                else {\r\n                    if (event.which == 8) {\r\n                        // NOTE: this will process backspace only if there are no text in the input field\r\n                        // If user will find this inconvinient, we will need to calculate something like this\r\n                        // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                        if (!this.filterInput.value)\r\n                        {\r\n                            let $penult = $(this.selectedPanel).find(\"LI:last\").prev();\r\n                            if ($penult.length){\r\n                                let removeItem = $penult.data(\"option-remove\");\r\n                                removeItem();\r\n                            }\r\n                            this.updateDropDownPosition(false);\r\n                        }\r\n                    }\r\n                    this.resetDropDownMenuHover();\r\n                }\r\n            });\r\n\r\n            $filterInput.on(\"keyup\", (event) => {\r\n                if (event.which == 13 || event.which == 9 ) {\r\n                    if (this.hoveredDropDownItem) {\r\n                        let $hoveredDropDownItem = $(this.hoveredDropDownItem);\r\n                        let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                        toggleItem();\r\n                        this.closeDropDown();\r\n                    } else {\r\n                        let text = this.filterInput.value.trim().toLowerCase();\r\n                        let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                        let dropDownItem = null;\r\n                        for (let i = 0; i < dropDownItems.length; ++i) {\r\n                            let it = dropDownItems[i];\r\n                            if (it.textContent.trim().toLowerCase() == text)\r\n                            {\r\n                                dropDownItem=it;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (dropDownItem) {\r\n                            let $dropDownItem = $(dropDownItem);\r\n                            let isSelected = $dropDownItem.data(\"option-selected\");\r\n                            if (!isSelected){\r\n                                let toggle = $dropDownItem.data(\"option-toggle\");\r\n                                toggle();\r\n                            }\r\n                            this.clearFilterInput(true);\r\n                        }\r\n                    }\r\n                }\r\n                else if (event.which == 27) { // escape\r\n                    this.closeDropDown();\r\n                }\r\n            });\r\n\r\n            $filterInput.on('input', () => {\r\n                this.input(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    function jQueryInterface(options) {\r\n        return this.each(function () {\r\n            let data = $(this).data(dataKey)\r\n\r\n            if (!data) {\r\n                if (/Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n                data = new Plugin(this, optionsObject);\r\n                $(this).data(dataKey, data);\r\n            }\r\n\r\n            if (typeof options === 'string') {\r\n                let methodName = options;\r\n                if (typeof data[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named \"${methodName}\"`)\r\n                }\r\n                data[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[pluginName] = jQueryInterface;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName.charAt(0).toUpperCase() + pluginName.slice(1)] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[pluginName].Constructor = Plugin;\r\n\r\n    $.fn[pluginName].noConflict = function () {\r\n        $.fn[pluginName] = JQUERY_NO_CONFLICT\r\n        return jQueryInterface;\r\n    }\r\n    return Plugin;\r\n})(window, $, Popper);\r\n\r\nexport default BsMultiSelect;\r\n"]}