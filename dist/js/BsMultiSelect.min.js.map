{"version":3,"sources":["../../js/src/FilterPanel.js","../../js/src/MultiSelect.js","../../js/src/Tools.js","../../js/src/Bs4StylingMethodCss.js","../../js/src/Bs4StylingMethodJs.js","../../js/src/Bs4Styling.js","../../js/src/Bs4SelectedItemContent.js","../../js/src/Bs4DropDownItemContent.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js","../../js/src/OptionsAdapters.js","../../js/src/LabelAdapter.js"],"names":["FilterPanel","insertIntoDom","onFilterInputFocusIn","onFilterInputFocusOut","keyDownArrowUp","keyDownArrowDown","hideDropDown","removeSelectedTail","resetDropDownMenuHover","toggleHovered","resetFilterAndHideDropDown","input","s","filterInput","document","createElement","setAttribute","style","width","border","padding","outline","backgroundColor","onfilterInputKeyDown","event","console","log","which","indexOf","value","preventDefault","onFilterInputKeyUp","onFilterInputInput","filterInputValue","length","setEmptyLength","addEventListener","isEmpty","setEmpty","setFocus","focus","isEventTarget","target","dispose","removeEventListener","removeElement","e","parentNode","removeChild","filterMultiSelectData","MultiSelectData","isFiltered","visibleIndex","visible","dropDownMenuItemElement","display","MultiSelect","optionsAdapter","styling","selectedItemContent","dropDownItemContent","labelAdapter","createStylingComposite","configuration","onDispose","window","Popper","TypeError","this","container","isDisposed","popper","visibleCount","selectedPanel","filterInputItem","dropDownMenu","stylingComposite","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","isComponentDisabled","filterInputItemOffsetLeft","resetMultiSelectDataList","skipFocusout","hoveredMultiSelectData","hoveredMultiSelectDataIndex","MultiSelectDataList","MultiSelectDataSelectedTail","visibleMultiSelectDataList","getVisibleMultiSelectDataList","toggle","updateDropDownLocation","force","offsetLeft","update","candidateToHoveredMultiSelectData","resetCandidateToHoveredMultiSelectData","setInShowDropDown","_this","inShowDropDown","setTimeout","showDropDown","hoverInInternal","index","HoverIn","HoverOut","resetFilter","filterPanel","processEmptyInput","hideDropDownAndResetFilter","removeSelectedFromList","selectedPrev","selectedNext","insertDropDownItem","insertToDropDownMenu","isSelected","isOptionDisabled","onDropDownMenuItemElementMouseover","_this2","processCandidateToHovered","onDropDownMenuItemElementMouseleave","option","DropDownItemContent","DisposeDropDownMenuItemElement","setDropDownItemContentDisabled","disabledStyle","disable","onSelected","setPreventDefaultMultiSelectEvent","preventDefaultMultiSelectEvent","createSelectedItem","selectedItemElement","removeSelectedItem","selected","excludedFromSearch","triggerChange","select","SelectedItemContent","isDisabled","insertBefore","removeDropDownMenuItemElement","keyDownArrow","down","newIndex","i","multiSelectData","isHidden","resetFilterDropDownMenu","Update","UpdateIsValid","getIsValid","getIsInvalid","UpdateSize","UpdateDisabled","UpdateOption","_this3","searchText","text","toLowerCase","trim","appendChild","UpdateData","updateDataImpl","createDropDownItems","options","_this4","getOptions","disabled","hidden","remove","push","readyState","createDropDownItemsHandler","Dispose","destroy","iterateAll","_this5","getDisabled","Disable","Enable","resetLength","list","j","filterDropDownMenu","fullMatchMultiSelectData","init","_this6","flexWrap","listStyleType","FocusIn","FocusOut","skipContainerMousedownEvent","contains","Init","afterContainerFilled","placement","modifiers","preventOverflow","enabled","hide","flip","ExtendIfUndefined","destination","source","property","undefined","bs4StylingMethodCssDefaults","selectedPanelFocusClass","selectedPanelDisabledClass","dropDownItemDisabledClass","defSelectedPanelStyle","margin-bottom","height","bs4StylingMethodJsDefaults","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","bs4StylingDefaults","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4StylingMethodCssdefaults","selectedItemContentDisabledClass","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","selectedItemContentDisabledOpacity","bs4SelectedItemContentDefaults","dropdDownLabelDisabledColor","$","bs4DropDownItemContentDefaults","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","each","$e","instance","data","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","settings","extend","preBuildConfiguration","trigger","$element","eventName","firstChild","createInputId","id","label","$formGroup","closest","$label","find","get","getAttribute","selectElement","getElementsByTagName","nextSibling","classList","OptionsAdapterElement","name","backupedFor","stylingMethod","newId","useCss","adapter","$selectedPanel","removeClass","addClass","OnInit","composite","css","$filterInput","hasClass","$container","$dropDownMenu","$filterInputItem","isValid","isInvalid","dropDownItem","selectedItemContentStylingMethod","disableSelectedItemContent","$content","createSelectedItemContent","$selectedItem","$button","selectedItem","optionItem","preventDefaultMultiSelect","appendTo","on","jqEvent","originalEvent","prop","unbind","bs4DropDownItemContent","dropDownItemContentStylingMethod","$checkBox","$checkBoxLabel","isDisbaled","$dropDownItem","$dropDownItemContent","multiSelect","postBuildConfiguration"],"mappings":"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","sourcesContent":["function defFilterInputStyleSys(s) {s.width='2ch'; s.border='0'; s.padding='0'; s.outline='none'; s.backgroundColor='transparent' };\r\n\r\nfunction FilterPanel(\r\n        insertIntoDom,\r\n        onFilterInputFocusIn,  // show dropdown\r\n        onFilterInputFocusOut, // hide dropdown\r\n        keyDownArrowUp, \r\n        keyDownArrowDown,\r\n        hideDropDown,  \r\n        removeSelectedTail, // backspace alike\r\n        resetDropDownMenuHover, \r\n        toggleHovered, // \"compleate alike\"\r\n        resetFilterAndHideDropDown, // \"esc\" alike\r\n        input // filter\r\n    ) {\r\n    \r\n    var filterInput = document.createElement('INPUT'); \r\n    \r\n    filterInput.setAttribute(\"type\",\"search\");\r\n    filterInput.setAttribute(\"autocomplete\",\"off\");\r\n\r\n    defFilterInputStyleSys(filterInput.style);\r\n\r\n    insertIntoDom(filterInput);\r\n\r\n    var onfilterInputKeyDown = (event) => {\r\n        console.log(\"down \"+ event.which);\r\n        if ([38, 40, 13 ,27].indexOf(event.which)>=0 || (event.which == 9 && filterInput.value) ) {\r\n            event.preventDefault(); // for 9 it enables keyup\r\n        }\r\n\r\n        if (event.which == 38) {\r\n            keyDownArrowUp();\r\n        }\r\n        else if (event.which == 40) {\r\n            keyDownArrowDown();\r\n        }\r\n        else if (event.which == 9  /*tab*/) { // no keydown for this\r\n            if (!filterInput.value) {\r\n                hideDropDown(); // filter is empty, nothing to reset\r\n            }\r\n        }\r\n        else if (event.which == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (!filterInput.value)\r\n            { \r\n                removeSelectedTail();\r\n            }\r\n        }\r\n\r\n        if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n            resetDropDownMenuHover();\r\n    }\r\n   \r\n\r\n    \r\n   var onFilterInputKeyUp = (event) => {\r\n        if (event.which == 13 || event.which == 9 ) {\r\n            toggleHovered();\r\n        }\r\n        else if (event.which == 27) { // escape\r\n            resetFilterAndHideDropDown();\r\n        }\r\n    }\r\n    \r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n    var onFilterInputInput = () => {\r\n        var filterInputValue = filterInput.value;\r\n        input(\r\n            filterInputValue, \r\n            ()=> filterInput.style.width = filterInputValue.length*1.3 + 2 + \"ch\"\r\n        );\r\n    }\r\n    \r\n    var setEmptyLength =() =>{\r\n        filterInput.style.width=\"2ch\";\r\n    }\r\n    var setEmpty= ()=> {\r\n        filterInput.value ='';\r\n        setEmptyLength();\r\n    };\r\n\r\n    filterInput.addEventListener('focusin', onFilterInputFocusIn);\r\n    filterInput.addEventListener('focusout', onFilterInputFocusOut);\r\n    filterInput.addEventListener('keydown', onfilterInputKeyDown);    \r\n    filterInput.addEventListener('keyup', onFilterInputKeyUp);\r\n    filterInput.addEventListener('input', onFilterInputInput);\r\n\r\n    var filterPanel = {\r\n        input:filterInput,\r\n        isEmpty(){\r\n            return filterInput.value ? false:true;\r\n        },\r\n        setEmpty,\r\n        setEmptyLength,\r\n        setFocus(){\r\n            filterInput.focus();\r\n        },\r\n        isEventTarget(event){\r\n            return event.target == filterInput;\r\n        },\r\n        dispose(){\r\n            filterInput.removeEventListener('focusin', onFilterInputFocusIn);\r\n            filterInput.removeEventListener('focusout', onFilterInputFocusOut);\r\n            filterInput.removeEventListener('keydown', onfilterInputKeyDown);\r\n            filterInput.removeEventListener('keyup', onFilterInputKeyUp);\r\n            filterInput.removeEventListener('input', onFilterInputInput);\r\n        }\r\n    }\r\n    return filterPanel;\r\n}\r\n\r\nexport default FilterPanel;\r\n","import Popper from 'popper.js'\r\nimport FilterPanel from './FilterPanel.js'\r\n\r\nfunction defSelectedPanelStyleSys(s) {s.display='flex'; s.flexWrap='wrap'; s.listStyleType='none'};  // remove bullets since this is ul\r\nfunction defDropDownMenuStyleSys(s) {s.listStyleType='none'}; // remove bullets since this is ul\r\nfunction removeElement(e) {e.parentNode.removeChild(e)}\r\n\r\nfunction filterMultiSelectData(MultiSelectData, isFiltered, visibleIndex) {\r\n    MultiSelectData.visible = isFiltered;\r\n    MultiSelectData.visibleIndex = visibleIndex;\r\n    MultiSelectData.dropDownMenuItemElement.style.display = isFiltered ? 'block': 'none';\r\n} \r\n\r\nfunction resetFilterDropDownMenu(MultiSelectDataList) {\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            filterMultiSelectData(multiSelectData, true, i);\r\n        }\r\n    }\r\n}\r\n\r\nfunction filterDropDownMenu(MultiSelectDataList, text) {\r\n    var list = [];\r\n    var j = 0;\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            if ( multiSelectData.excludedFromSearch || multiSelectData.searchText.indexOf(text)<0 )\r\n            {\r\n                filterMultiSelectData(multiSelectData, false);\r\n            }\r\n            else \r\n            {\r\n                filterMultiSelectData(multiSelectData, true, j++);\r\n                list.push( multiSelectData );\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, styling, \r\n        selectedItemContent, dropDownItemContent, \r\n        labelAdapter, createStylingComposite,\r\n        configuration, onDispose, window) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n\r\n        // readonly\r\n        this.optionsAdapter = optionsAdapter;\r\n        this.container = optionsAdapter.container; // part of published api\r\n        this.styling = styling;\r\n        this.selectedItemContent = selectedItemContent;\r\n        this.dropDownItemContent = dropDownItemContent;\r\n        this.labelAdapter = labelAdapter;\r\n        this.createStylingComposite = createStylingComposite;\r\n        this.configuration = configuration;\r\n        this.onDispose = onDispose;\r\n        this.isDisposed = false;\r\n        this.window = window;\r\n        this.document = window.document;\r\n\r\n        this.popper = null;\r\n\r\n        this.visibleCount=10;\r\n\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n\r\n        this.dropDownMenu = null;\r\n\r\n        this.stylingComposite = null;\r\n\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup = null;\r\n        this.containerMousedown = null;\r\n        this.documentMouseup2 = null;\r\n\r\n        // state\r\n        this.isComponentDisabled = null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        \r\n        this.resetMultiSelectDataList();\r\n        this.skipFocusout = false;\r\n        this.hoveredMultiSelectData = null;\r\n        this.hoveredMultiSelectDataIndex = null;\r\n        \r\n    }\r\n\r\n    resetMultiSelectDataList(){\r\n        this.MultiSelectDataList = [];\r\n        this.MultiSelectDataSelectedTail = null;\r\n        this.visibleMultiSelectDataList = null;\r\n    }\r\n\r\n    getVisibleMultiSelectDataList(){\r\n        if (this.visibleMultiSelectDataList)\r\n            return this.visibleMultiSelectDataList;\r\n        else\r\n            return this.MultiSelectDataList;\r\n    }\r\n\r\n    removeSelectedTail(){\r\n        if (this.MultiSelectDataSelectedTail){ \r\n            this.MultiSelectDataSelectedTail.toggle(); // always remove in this case\r\n        }\r\n        this.updateDropDownLocation(false);\r\n    }\r\n\r\n    updateDropDownLocation(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n\r\n    hideDropDown() {\r\n        if (this.candidateToHoveredMultiSelectData){\r\n            this.resetCandidateToHoveredMultiSelectData();\r\n        }\r\n        if (this.dropDownMenu.style.display != 'none')\r\n        {\r\n            this.dropDownMenu.style.display = 'none';\r\n            // remove listeners that manages close dropdown on input's focusout and click outside container\r\n            this.container.removeEventListener(\"mousedown\", this.containerMousedown);\r\n            this.document.removeEventListener(\"mouseup\", this.documentMouseup);\r\n            this.document.removeEventListener(\"mouseup\", this.documentMouseup2);\r\n        }\r\n    }\r\n\r\n    setInShowDropDown(){\r\n        this.inShowDropDown = true;\r\n            setTimeout( () => {  \r\n                this.inShowDropDown = null;\r\n            }, 0)\r\n    }    \r\n\r\n    showDropDown() {\r\n        if (this.dropDownMenu.style.display != 'block')\r\n        {\r\n            this.setInShowDropDown();\r\n            this.dropDownMenu.style.display = 'block';\r\n            // add listeners that manages close dropdown on input's focusout and click outside container\r\n            this.container.addEventListener(\"mousedown\", this.containerMousedown);\r\n            this.document.addEventListener(\"mouseup\", this.documentMouseup);\r\n            this.document.addEventListener(\"mouseup\", this.documentMouseup2);\r\n        }\r\n    }\r\n\r\n    hoverInInternal(index){\r\n        this.hoveredMultiSelectDataIndex = index;\r\n        this.hoveredMultiSelectData = this.getVisibleMultiSelectDataList()[index];\r\n        this.styling.HoverIn(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n    }\r\n\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredMultiSelectData) {\r\n            this.styling.HoverOut(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n            this.hoveredMultiSelectData = null;\r\n            this.hoveredMultiSelectDataIndex = null;\r\n        }\r\n    }\r\n\r\n    resetFilter(){\r\n        if (!this.filterPanel.isEmpty()) {\r\n            this.filterPanel.setEmpty();\r\n            this.processEmptyInput();\r\n        }\r\n    }\r\n\r\n    hideDropDownAndResetFilter() {\r\n        this.hideDropDown(); // always hide 1st\r\n        this.resetFilter();\r\n    }\r\n    \r\n    removeSelectedFromList(MultiSelectData){\r\n        if (MultiSelectData.selectedPrev){\r\n            (MultiSelectData.selectedPrev).selectedNext = MultiSelectData.selectedNext;\r\n        }\r\n        if (MultiSelectData.selectedNext){\r\n           (MultiSelectData.selectedNext).selectedPrev = MultiSelectData.selectedPrev;\r\n        }\r\n        if (this.MultiSelectDataSelectedTail == MultiSelectData){\r\n            this.MultiSelectDataSelectedTail = MultiSelectData.selectedPrev;\r\n        }\r\n        MultiSelectData.selectedNext=null;\r\n        MultiSelectData.selectedPrev=null;\r\n    }\r\n\r\n    insertDropDownItem(MultiSelectData, insertToDropDownMenu, isSelected, isOptionDisabled) {\r\n        var dropDownMenuItemElement = this.document.createElement('LI');\r\n        \r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onDropDownMenuItemElementMouseover = () => \r\n        {\r\n            if (!this.inShowDropDown)\r\n            {\r\n                \r\n                if (this.hoveredMultiSelectData!=MultiSelectData)\r\n                {\r\n                    // mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually\r\n                    this.resetDropDownMenuHover(); \r\n                    this.hoverInInternal(MultiSelectData.visibleIndex);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.candidateToHoveredMultiSelectData = MultiSelectData;\r\n                dropDownMenuItemElement.addEventListener('mousemove', this.processCandidateToHovered);\r\n                dropDownMenuItemElement.addEventListener('mousedown', this.processCandidateToHovered);\r\n            }\r\n        }\r\n\r\n        dropDownMenuItemElement.addEventListener('mouseover', onDropDownMenuItemElementMouseover);\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onDropDownMenuItemElementMouseleave = () => this.resetDropDownMenuHover();\r\n        dropDownMenuItemElement.addEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n\r\n\r\n        insertToDropDownMenu(dropDownMenuItemElement);\r\n\r\n        let dropDownItemContent = this.dropDownItemContent(dropDownMenuItemElement, MultiSelectData.option); \r\n        MultiSelectData.dropDownMenuItemElement = dropDownMenuItemElement;\r\n        MultiSelectData.DropDownItemContent = dropDownItemContent;\r\n\r\n        MultiSelectData.DisposeDropDownMenuItemElement = ()=> {\r\n            dropDownMenuItemElement.removeEventListener('mouseover',  onDropDownMenuItemElementMouseover);\r\n            dropDownMenuItemElement.removeEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n        }\r\n\r\n        var setDropDownItemContentDisabled = (dropDownItemContent,  isSelected) => {\r\n            dropDownItemContent.disabledStyle(true);\r\n            // do not desable if selected! there should be possibility to unselect \"disabled\"\r\n            dropDownItemContent.disable(!isSelected);\r\n        }\r\n\r\n        if (isOptionDisabled)\r\n            setDropDownItemContentDisabled(dropDownItemContent, isSelected )\r\n\r\n        dropDownItemContent.onSelected(() => {\r\n            MultiSelectData.toggle();\r\n            this.filterPanel.setFocus();\r\n        });\r\n        // ------------------------------------------------------------------------------\r\n        \r\n        var setPreventDefaultMultiSelectEvent = (event)=>{\r\n                this.preventDefaultMultiSelectEvent = event;\r\n            }\r\n       \r\n        \r\n        var createSelectedItem = ()=>{\r\n            var selectedItemElement = this.document.createElement('LI');\r\n            MultiSelectData.selectedItemElement = selectedItemElement;\r\n            if (this.MultiSelectDataSelectedTail){\r\n                this.MultiSelectDataSelectedTail.selectedNext = MultiSelectData;\r\n                MultiSelectData.selectedPrev = this.MultiSelectDataSelectedTail;\r\n            }\r\n            this.MultiSelectDataSelectedTail = MultiSelectData;\r\n\r\n            var removeSelectedItem = () => {\r\n                MultiSelectData.option.selected = false;\r\n                MultiSelectData.excludedFromSearch = isOptionDisabled;\r\n                if (isOptionDisabled)\r\n                {\r\n                    setDropDownItemContentDisabled(dropDownItemContent, false);\r\n                    MultiSelectData.toggle = ()=> {};\r\n                }\r\n                else\r\n                {\r\n                    MultiSelectData.toggle = ()=>{\r\n                        createSelectedItem();\r\n                        this.optionsAdapter.triggerChange();\r\n                    };\r\n                }\r\n                dropDownItemContent.select(false);\r\n                removeElement(selectedItemElement);\r\n                MultiSelectData.SelectedItemContent.dispose();\r\n                MultiSelectData.SelectedItemContent=null;\r\n                MultiSelectData.selectedItemElement=null;\r\n\r\n                this.removeSelectedFromList(MultiSelectData);\r\n                this.optionsAdapter.triggerChange();\r\n            }\r\n\r\n            // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n            // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n            // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n            // because of the event's bubling process removeSelectedItem runs first. \r\n            // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n            // before we could analize is it belong to our dropdown or not.\r\n            // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n            // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n            // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n            // the situation described above: click outside dropdown on the same component.\r\n            // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n    \r\n            let removeSelectedItemAndCloseDropDown = () => {\r\n                removeSelectedItem();\r\n                this.hideDropDownAndResetFilter();\r\n            };\r\n        \r\n            let onRemoveSelectedItemEvent = () => {\r\n                setTimeout( () => {  \r\n                    removeSelectedItemAndCloseDropDown();\r\n                }, 0);\r\n            };\r\n\r\n            MultiSelectData.SelectedItemContent = this.selectedItemContent(\r\n                selectedItemElement,\r\n                MultiSelectData.option,\r\n                onRemoveSelectedItemEvent,\r\n                setPreventDefaultMultiSelectEvent);\r\n    \r\n            var disable = (isDisabled) =>\r\n                MultiSelectData.SelectedItemContent.disable(isDisabled);\r\n            disable(this.isComponentDisabled);\r\n\r\n            MultiSelectData.option.selected = true;\r\n            MultiSelectData.excludedFromSearch = true; // all selected excluded from search\r\n            //MultiSelectData.remove  = removeSelectedItemAndCloseDropDown;\r\n            MultiSelectData.disable = disable;\r\n            this.selectedPanel.insertBefore(selectedItemElement, this.filterInputItem);\r\n\r\n\r\n            MultiSelectData.toggle = () => removeSelectedItem();\r\n            dropDownItemContent.select(true);\r\n            \r\n        }\r\n\r\n        \r\n        \r\n        if (isSelected)\r\n        {\r\n            createSelectedItem();\r\n        }\r\n        else\r\n        {\r\n            MultiSelectData.excludedFromSearch =  isOptionDisabled;\r\n            if (isOptionDisabled)\r\n                MultiSelectData.toggle = () => { }\r\n            else\r\n                MultiSelectData.toggle = () =>  {\r\n                    createSelectedItem();\r\n                    this.optionsAdapter.triggerChange();\r\n                }\r\n        }\r\n        MultiSelectData.removeDropDownMenuItemElement = () => {\r\n            removeElement(dropDownMenuItemElement);\r\n            if (MultiSelectData.selectedItemElement!=null)\r\n                removeElement(MultiSelectData.selectedItemElement);\r\n        }\r\n    }\r\n\r\n    keyDownArrowDown() {\r\n        this.keyDownArrow(true);\r\n    }\r\n    keyDownArrowUp() {\r\n        this.keyDownArrow(false);\r\n    }\r\n    keyDownArrow(down) {\r\n        let visibleMultiSelectDataList = this.getVisibleMultiSelectDataList();\r\n        let length = visibleMultiSelectDataList.length;\r\n        let newIndex=null;\r\n        if (length > 0) {\r\n            if (down) {\r\n                let i = this.hoveredMultiSelectDataIndex==null?0:this.hoveredMultiSelectDataIndex+1;\r\n                while(i<length){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                let i = this.hoveredMultiSelectDataIndex==null?length-1:this.hoveredMultiSelectDataIndex-1;\r\n                while(i>=0){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (newIndex!=null)\r\n        {\r\n            if (this.hoveredMultiSelectData)\r\n                this.styling.HoverOut(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n            this.updateDropDownLocation(true);\r\n            this.showDropDown(); \r\n            this.hoverInInternal(newIndex);\r\n        }\r\n    }\r\n\r\n    processEmptyInput(){\r\n        this.filterPanel.setEmptyLength();\r\n        resetFilterDropDownMenu(this.MultiSelectDataList);\r\n        this.visibleMultiSelectDataList = null;\r\n    }\r\n\r\n    Update(){\r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n    }\r\n\r\n    UpdateOption(index){\r\n        let multiSelectData = this.MultiSelectDataList[index];\r\n        let option = multiSelectData.option;\r\n        multiSelectData.searchText = option.text.toLowerCase().trim();\r\n        if (multiSelectData.isHidden != option.isHidden)\r\n        {\r\n            multiSelectData.isHidden=option.isHidden;\r\n            if (multiSelectData.isHidden)\r\n                this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), option.isSelected, option.isDisabled);\r\n            else\r\n                multiSelectData.removeDropDownMenuItemElement();\r\n        }\r\n        else \r\n        {\r\n            if (multiSelectData.isSelected != option.isSelected)\r\n            {\r\n                multiSelectData.isSelected=option.isSelected;\r\n                if (multiSelectData.isSelected)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n            if (multiSelectData.isDisabled != option.isDisabled)\r\n            {\r\n                multiSelectData.isDisabled=option.isDisabled;\r\n                if (multiSelectData.isDisabled)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n        }    \r\n        //multiSelectData.updateOption();\r\n    }\r\n\r\n    UpdateData(){\r\n        // close drop down , remove filter and listeners\r\n        this.hideDropDownAndResetFilter();\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.removeDropDownMenuItemElement)\r\n                multiSelectData.removeDropDownMenuItemElement();\r\n        }\r\n        this.resetMultiSelectDataList();\r\n\r\n        // reinitiate\r\n        this.updateDataImpl();\r\n    }\r\n\r\n    updateDataImpl(){\r\n        var createDropDownItems = () => {\r\n            let options = this.optionsAdapter.getOptions();\r\n            var j = 0;\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n\r\n                let isDisabled = option.disabled;\r\n                let isHidden   = option.hidden;\r\n                let isSelected = option.selected;\r\n                \r\n                var MultiSelectData = {\r\n                    searchText: option.text.toLowerCase().trim(),\r\n                    excludedFromSearch: isSelected || isDisabled || isHidden,\r\n                    option: option,\r\n                    isHidden: isHidden,\r\n                    dropDownMenuItemElement: null,\r\n                    dropDownItemContent: null,\r\n                    selectedPrev: null,\r\n                    selectedNext: null,\r\n                    visible: false,\r\n                    toggle: null,\r\n                    selectedItemElement: null,\r\n                    remove: null,\r\n                    disable: null,\r\n                    removeDropDownMenuItemElement: null\r\n                };\r\n\r\n                this.MultiSelectDataList.push(MultiSelectData);\r\n                if (!isHidden){\r\n                    MultiSelectData.visible = true;\r\n                    MultiSelectData.visibleIndex=i;\r\n                    this.insertDropDownItem(MultiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n            } \r\n            this.updateDropDownLocation(false);\r\n        }\r\n\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        if (document.readyState != 'loading'){\r\n            createDropDownItems();\r\n        } else {\r\n            var createDropDownItemsHandler = function(){\r\n                createDropDownItems();\r\n                document.removeEventListener(\"DOMContentLoaded\", createDropDownItemsHandler);\r\n            }\r\n            document.addEventListener('DOMContentLoaded', createDropDownItemsHandler); // IE9+\r\n        }\r\n    }\r\n\r\n    Dispose(){\r\n        this.isDisposed = true;\r\n        if (this.onDispose)\r\n            this.onDispose(); // primary used to remove from jQuery tables\r\n        \r\n        // remove event listeners\r\n        // TODO check if open\r\n        this.hideDropDown();\r\n        \r\n        this.selectedPanel.removeEventListener(\"click\", this.selectedPanelClick); // OPEN dropdown\r\n        this.filterPanel.dispose();\r\n        \r\n        this.labelAdapter.dispose();\r\n\r\n        \r\n        if (this.popper) {\r\n            this.popper.destroy();\r\n        }\r\n        \r\n        if (this.optionsAdapter.dispose) {\r\n            this.optionsAdapter.dispose();\r\n        }\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.DisposeDropDownMenuItemElement)\r\n                multiSelectData.DisposeDropDownMenuItemElement();\r\n            \r\n            if (multiSelectData.SelectedItemContent)\r\n                multiSelectData.SelectedItemContent.dispose();\r\n            if (multiSelectData.DropDownItemContent)\r\n                multiSelectData.DropDownItemContent.dispose();\r\n        }\r\n\r\n        // this.resetMultiSelectDataList();\r\n        // this.onFilterInputInput = null;\r\n        // this.onFilterInputKeyUp = null;\r\n        // this.onfilterInputKeyDown = null;\r\n        // this.onFilterInputFocusOut = null;\r\n        // this.onFilterInputFocusIn = null;\r\n        // this.selectedPanelClick = null;\r\n        // this.containerMousedown = null;\r\n        // this.documentMouseup = null;\r\n        // this.documentMouseup2 = null;\r\n        // this.processCandidateToHovered = null;\r\n    }\r\n\r\n    UpdateSize(){\r\n        if (this.styling.UpdateSize)\r\n            this.styling.UpdateSize(this.stylingComposite);\r\n    }\r\n\r\n    UpdateDisabled(){\r\n        let isComponentDisabled = this.optionsAdapter.getDisabled();\r\n        let iterateAll = (isDisabled)=>{\r\n            let i = this.MultiSelectDataSelectedTail;\r\n            while(i){\r\n                i.disable(isDisabled); \r\n                i = i.selectedPrev;\r\n            }\r\n        }\r\n        if (this.isComponentDisabled!==isComponentDisabled){\r\n            if (isComponentDisabled) {\r\n                //this.filterInput.style.display = \"none\";\r\n                this.filterInputItem.style.display = \"none\";\r\n                this.styling.Disable(this.stylingComposite);\r\n                iterateAll(true);\r\n                    \r\n                this.selectedPanel.removeEventListener(\"click\", this.selectedPanelClick);\r\n            } else {\r\n                //this.filterInput.style.display = \"inline-block\";\r\n                this.filterInputItem.style.display = \"list-item\";\r\n                this.styling.Enable(this.stylingComposite);\r\n                iterateAll(false);\r\n\r\n                this.selectedPanel.addEventListener(\"click\", this.selectedPanelClick);\r\n            }\r\n            this.isComponentDisabled=isComponentDisabled;\r\n        }\r\n    }\r\n    \r\n    resetCandidateToHoveredMultiSelectData(){\r\n        this.candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousemove', this.processCandidateToHovered);\r\n        this.candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousedown', this.processCandidateToHovered);\r\n        this.candidateToHoveredMultiSelectData = null;\r\n    }\r\n\r\n    toggleHovered(){\r\n        if (this.hoveredMultiSelectData) {\r\n            this.hoveredMultiSelectData.toggle();\r\n            this.resetDropDownMenuHover();\r\n            this.hideDropDownAndResetFilter();\r\n        } \r\n    }\r\n\r\n    input(filterInputValue, resetLength){\r\n        let text = filterInputValue.trim().toLowerCase();\r\n        var isEmpty=false;\r\n        if (text == '')\r\n            isEmpty=true;\r\n        else\r\n        {\r\n            // check if exact match, otherwise new search\r\n            this.visibleMultiSelectDataList = filterDropDownMenu(this.MultiSelectDataList, text);\r\n            if (this.visibleMultiSelectDataList.length == 1)\r\n            {\r\n                let fullMatchMultiSelectData =  this.visibleMultiSelectDataList[0];\r\n                if (fullMatchMultiSelectData.searchText == text)\r\n                {\r\n                    fullMatchMultiSelectData.toggle();\r\n                    this.filterPanel.setEmpty(); // clear\r\n                    isEmpty=true;\r\n                }\r\n            }\r\n        }\r\n        if (isEmpty)\r\n            this.processEmptyInput();\r\n        else\r\n            resetLength();  \r\n        this.setInShowDropDown();\r\n\r\n        this.resetDropDownMenuHover();\r\n\r\n        if (this.getVisibleMultiSelectDataList().length == 1) {\r\n            this.hoverInInternal(0)\r\n        }\r\n\r\n        if (this.getVisibleMultiSelectDataList().length > 0) {\r\n            this.updateDropDownLocation(true); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n\r\n    init() {\r\n        var document = this.document;\r\n        let container = this.optionsAdapter.container;\r\n        this.selectedPanel = document.createElement('UL');\r\n        defSelectedPanelStyleSys(this.selectedPanel.style); \r\n        container.appendChild(this.selectedPanel);\r\n        \r\n        this.filterInputItem = document.createElement('LI');\r\n        this.selectedPanel.appendChild(this.filterInputItem);\r\n        \r\n        this.filterPanel = FilterPanel(\r\n            (input) => {\r\n                this.filterInputItem.appendChild(input);\r\n                this.labelAdapter.init(input); \r\n            },\r\n            () => this.styling.FocusIn(this.stylingComposite),  // show dropdown\r\n            () => {\r\n                if (!this.skipFocusout)\r\n                {\r\n                    this.resetFilter(); // if do not do this we will return to filtered list without text filter in input\r\n                    this.resetDropDownMenuHover(); // if do not do this tab will select \"only one hovered\"\r\n                    this.styling.FocusOut(this.stylingComposite)\r\n                }\r\n            }, // hide dropdown\r\n            () => this.keyDownArrowUp(), \r\n            () => this.keyDownArrowDown(),\r\n            () => this.hideDropDown(),  \r\n            () => this.removeSelectedTail(), // backspace alike\r\n            () => this.resetDropDownMenuHover(), \r\n            () => this.toggleHovered(), // \"compleate alike\"\r\n            () => this.hideDropDownAndResetFilter(), // \"esc\" alike\r\n            (filterInputValue, resetLength) => this.input(filterInputValue, resetLength) // filter\r\n        );\r\n        \r\n        //defFilterInputStyleSys(this.filterInput.style);\r\n\r\n        this.dropDownMenu = document.createElement('UL');\r\n        this.dropDownMenu.style.display=\"none\";\r\n        container.appendChild(this.dropDownMenu);\r\n        \r\n        // prevent heavy understandable styling error\r\n        defDropDownMenuStyleSys(this.dropDownMenu.style);\r\n\r\n        // we want to escape the closing of the menu on a user's click inside the container\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n            this.skipContainerMousedownEvent = event;\r\n        };\r\n        \r\n        this.processCandidateToHovered = () => {\r\n            if (this.hoveredMultiSelectData!=this.candidateToHoveredMultiSelectData)\r\n            {\r\n                this.resetDropDownMenuHover(); \r\n                this.hoverInInternal(this.candidateToHoveredMultiSelectData.visibleIndex);\r\n            }\r\n            this.resetCandidateToHoveredMultiSelectData();\r\n        }\r\n\r\n        // document.Mouseup used for better realiability\r\n        // TODO : this.containerMousedown , this.documentMouseup and filterInput.focusOut are actual only when menu is open\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.documentMouseup2 = event => {\r\n            if (!(container === event.target || container.contains(event.target))) {\r\n                this.hideDropDownAndResetFilter();\r\n            }\r\n        }\r\n\r\n        this.selectedPanelClick = event => {\r\n            if (!this.filterPanel.isEventTarget(event))\r\n            {   \r\n                //this.filterPanel.setEmpty();\r\n                this.filterPanel.setFocus();\r\n            }\r\n            if (this.getVisibleMultiSelectDataList().length > 0 && this.preventDefaultMultiSelectEvent != event) {\r\n                this.updateDropDownLocation(true);\r\n                this.showDropDown();\r\n            }\r\n            this.preventDefaultMultiSelectEvent=null;\r\n        };\r\n\r\n        this.stylingComposite = this.createStylingComposite(container, this.selectedPanel,\r\n            this.filterInputItem, this.filterPanel.input, this.dropDownMenu);\r\n        \r\n        this.styling.Init(this.stylingComposite);\r\n\r\n        if (this.optionsAdapter.afterContainerFilled)\r\n            this.optionsAdapter.afterContainerFilled();\r\n\r\n        this.popper = new Popper( this.filterInputItem, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n                }\r\n        });\r\n        \r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        \r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n        \r\n        this.updateDataImpl();\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","export function ExtendIfUndefined(destination, source) {\r\n    for (var property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function ExtendIfUndefinedFluent(destination, source) {\r\n    ExtendIfUndefined(destination, source);\r\n    return destination;\r\n}","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedPanelFocusClass : 'focus',\r\n    selectedPanelDisabledClass: 'disabled',\r\n    dropDownItemDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4StylingMethodCss(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n\r\n    return {\r\n        Enable($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelFocusClass);\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodCss;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n    selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n    selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n    selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n    selectedPanelFocusBorderColor: '#80bdff',\r\n    selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n    selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n    selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n    filterInputColor: '#495057',\r\n    //selectedItemContentDisabledOpacity: '.65'\r\n};\r\n\r\nfunction Bs4StylingMethodJs(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n\r\n    return {\r\n        OnInit(composite){\r\n            composite.$selectedPanel.css(defSelectedPanelStyle);\r\n            composite.$filterInput.css(\"color\", configuration.filterInputColor);\r\n        },\r\n    \r\n        UpdateSize($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelLgMinHeight);\r\n            } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelSmMinHeight);\r\n            } else {\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelDefMinHeight);\r\n            }\r\n        },\r\n    \r\n        Enable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", \"\")\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", configuration.selectedPanelDisabledBackgroundColor)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"is-valid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusValidBoxShadow);\r\n            } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusInvalidBoxShadow);\r\n            } else {\r\n                $selectedPanel\r\n                    .css(\"box-shadow\", configuration.selectedPanelFocusBoxShadow)\r\n                    .css(\"border-color\", configuration.selectedPanelFocusBorderColor);\r\n            }\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        },\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodJs;","import  { ExtendIfUndefined } from './Tools';\r\n\r\n// Bs4Styling\r\nconst bs4StylingDefaults = {\r\n    containerClass: 'dashboardcode-bsmultiselect',\r\n    dropDownMenuClass: 'dropdown-menu',\r\n    dropDownItemClass:  'px-2',\r\n    dropDownItemHoverClass: 'text-primary bg-light',\r\n    selectedPanelClass: 'form-control',\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close',\r\n    filterInputItemClass: '',\r\n    filterInputClass: ''\r\n}\r\n\r\nfunction Bs4Styling(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4StylingDefaults);\r\n\r\n    return {\r\n        Init(composite){\r\n            composite.$container.addClass(configuration.containerClass);\r\n            composite.$selectedPanel.addClass(configuration.selectedPanelClass);\r\n            composite.$dropDownMenu.addClass(configuration.dropDownMenuClass);\r\n            composite.$filterInputItem.addClass(configuration.filterInputItemClass);\r\n            composite.$filterInput.addClass(configuration.filterInputClass);\r\n            if (stylingMethod.OnInit)\r\n                stylingMethod.OnInit(composite)\r\n        },\r\n\r\n        UpdateIsValid(composite, isValid, isInvalid){\r\n            if (isValid)\r\n                composite.$selectedPanel.addClass('is-valid');\r\n\r\n            if (isInvalid)\r\n                composite.$selectedPanel.addClass('is-invalid');\r\n        },\r\n\r\n        UpdateSize(composite){\r\n            if(stylingMethod.UpdateSize)\r\n               stylingMethod.UpdateSize(composite.$selectedPanel)\r\n        },\r\n\r\n        Enable(composite){\r\n            stylingMethod.Enable(composite.$selectedPanel)\r\n        },\r\n\r\n        Disable(composite){\r\n            stylingMethod.Disable(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusIn(composite){\r\n            stylingMethod.FocusIn(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusOut(composite){\r\n            stylingMethod.FocusOut(composite.$selectedPanel)\r\n        },\r\n\r\n        HoverIn(dropDownItem){\r\n            $(dropDownItem).addClass(configuration.dropDownItemHoverClass);\r\n        },\r\n\r\n        HoverOut(dropDownItem){\r\n            $(dropDownItem).removeClass(configuration.dropDownItemHoverClass);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Bs4Styling;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssdefaults = {\r\n    selectedItemContentDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4SelectedItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssdefaults);\r\n\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.addClass(configuration.selectedItemContentDisabledClass )\r\n        }\r\n    }\r\n}\r\n\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65'\r\n };\r\n\r\nfunction Bs4SelectedItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.css(\"opacity\", configuration.selectedItemContentDisabledOpacity )\r\n        },\r\n    \r\n        createSelectedItemContent($selectedItem, $button){\r\n            $selectedItem.css(defSelectedItemStyle);\r\n            if ($button)\r\n                $button.css(defRemoveSelectedItemButtonStyle);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4SelectedItemContentDefaults = {\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close'\r\n};\r\nfunction Bs4SelectedItemContent(stylingMethod, configuration, $) {\r\n        ExtendIfUndefined(configuration, bs4SelectedItemContentDefaults);\r\n        \r\n        return function (selectedItem, optionItem, removeSelectedItem, preventDefaultMultiSelect){\r\n                let $selectedItem = $(selectedItem)\r\n                $selectedItem.addClass(configuration.selectedItemClass);\r\n                let $content = $(`<span/>`).text(optionItem.text);\r\n                $content.appendTo($selectedItem);\r\n                if (optionItem.disabled)\r\n                    stylingMethod.disableSelectedItemContent($content);\r\n                let $button = $('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                    // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                    // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                    .css(\"float\", \"none\").appendTo($selectedItem)\r\n                    .addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n                    .on(\"click\", (jqEvent) => \r\n                        {   \r\n                            removeSelectedItem(); \r\n                            preventDefaultMultiSelect(jqEvent.originalEvent);\r\n                        });\r\n                \r\n                if (stylingMethod.createSelectedItemContent)\r\n                    stylingMethod.createSelectedItemContent($selectedItem, $button);\r\n                return {\r\n                    disable(isDisabled){ \r\n                        $button.prop('disabled', isDisabled); \r\n                    },\r\n                    dispose(){\r\n                        $button.unbind();\r\n                    }\r\n                };\r\n            }\r\n}\r\n\r\nexport { Bs4SelectedItemContent as Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss};","import  { ExtendIfUndefined} from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedItemContentDisabledClass: 'disabled',\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n    return {\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            if (isDisbaled) \r\n                $checkBox.addClass(configuration.dropDownItemDisabledClass);\r\n            else\r\n                $checkBox.removeClass(configuration.dropDownItemDisabledClass);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65',\r\n    dropdDownLabelDisabledColor: '#6c757d'\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return{\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            $checkBoxLabel.css('color', isDisbaled?configuration.dropdDownLabelDisabledColor:'')\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4DropDownItemContentDefaults = {\r\n    dropDownItemClass:  'px-2',\r\n}\r\n\r\nfunction Bs4DropDownItemContent(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4DropDownItemContentDefaults);\r\n    return function(dropDownItem, option){\r\n        let $dropDownItem = $(dropDownItem);\r\n        $dropDownItem.addClass(configuration.dropDownItemClass);\r\n        let $dropDownItemContent= $(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\">\r\n            <label class=\"custom-control-label\"></label>\r\n        </div>`);\r\n        $dropDownItemContent.appendTo(dropDownItem);\r\n        let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n        let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n        $checkBoxLabel.text(option.text);\r\n\r\n        var tmp = { \r\n            select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n            // --- distinct disable and disabledStyle to provide a possibility to unselect disabled option\r\n            disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n            disabledStyle(isDisbaled){ stylingMethod.disabledStyle($checkBox, $checkBoxLabel, isDisbaled); },\r\n\r\n            onSelected(toggle) {\r\n                $checkBox.on(\"change\", toggle)\r\n                $dropDownItem.on(\"click\", event => {\r\n                    if (dropDownItem === event.target || $.contains(dropDownItem, event.target)) {\r\n                        toggle();\r\n                    }\r\n                })\r\n            },\r\n            dispose(){\r\n                $checkBox.unbind();\r\n                $dropDownItem.unbind();\r\n            }\r\n        }\r\n        \r\n        return tmp;\r\n    }\r\n}\r\n\r\nexport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss };","import $ from 'jquery'\r\n\r\nimport MultiSelect from './MultiSelect'\r\nimport LabelAdapter from './LabelAdapter';\r\nimport {OptionsAdapterJson,OptionsAdapterElement} from './OptionsAdapters';\r\n\r\nimport Bs4StylingMethodCss from './Bs4StylingMethodCss'\r\nimport Bs4StylingMethodJs from './Bs4StylingMethodJs'\r\nimport Bs4Styling from './Bs4Styling';\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\nimport { Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss} from './Bs4SelectedItemContent';\r\nimport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss} from './Bs4DropDownItemContent';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, settings, onDispose) => {\r\n                let configuration = $.extend({}, settings); // settings used per jQuery intialization, configuration per element\r\n                if (configuration.preBuildConfiguration)\r\n                    configuration.preBuildConfiguration(element, configuration);\r\n                \r\n                var $element= $(element);\r\n                let optionsAdapter = null;\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    var trigger = function(eventName){\r\n                        $element.trigger(eventName);\r\n                    }\r\n                    if (configuration.options){\r\n                        optionsAdapter = OptionsAdapterJson(\r\n                            element,\r\n                            configuration.options,\r\n                            configuration.getDisabled,\r\n                            configuration.getIsValid,\r\n                            configuration.getIsInvalid,\r\n                            trigger );\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-filter-${element.id}`;\r\n            \r\n                    }else {\r\n                        if (!configuration.label)\r\n                        {\r\n                            let $formGroup = $(element).closest('.form-group');\r\n                            if ($formGroup.length == 1) {\r\n                                let $label = $formGroup.find(`label[for=\"${element.id}\"]`);\r\n                                if ($label.length>0)\r\n                                {   \r\n                                    let label = $label.get(0);\r\n                                    let forId = label.getAttribute('for');\r\n                                    if (forId == element.id) {\r\n                                        configuration.label = label;\r\n                                    }\r\n                                }   \r\n                            }\r\n                        }\r\n                        optionsAdapter = OptionsAdapterElement(element, trigger);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-input-${((element.id)?element.id:element.name).toLowerCase()}-id`;\r\n                    }\r\n                }\r\n\r\n                let labelAdapter = LabelAdapter(configuration.label, configuration.createInputId);\r\n\r\n                let useCss = configuration.useCss;\r\n                let styling = configuration.styling;\r\n                if (!configuration.adapter)\r\n                {\r\n                    let stylingMethod = configuration.stylingMethod;\r\n                    if (!stylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            stylingMethod = Bs4StylingMethodCss(configuration);\r\n                        else\r\n                            stylingMethod = Bs4StylingMethodJs(configuration);\r\n                    }\r\n                    styling = Bs4Styling(stylingMethod, configuration, $);\r\n                }\r\n\r\n                let selectedItemContent = configuration.selectedItemContent;\r\n                if (!selectedItemContent){\r\n                    let selectedItemContentStylingMethod = configuration.selectedItemContentStylingMethod;\r\n                    if (!selectedItemContentStylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodCss(configuration, $);\r\n                        else\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodJs(configuration, $);\r\n                    }\r\n                    selectedItemContent = Bs4SelectedItemContent(selectedItemContentStylingMethod, configuration, $);\r\n                }\r\n\r\n                let dropDownItemContent = configuration.bs4DropDownItemContent;\r\n                if (!dropDownItemContent){\r\n                    let dropDownItemContentStylingMethod = configuration.dropDownItemContentStylingMethod;\r\n                    if (useCss)\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodCss(configuration, $);\r\n                    else\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodJs(configuration, $);\r\n                    dropDownItemContent = Bs4DropDownItemContent(dropDownItemContentStylingMethod, configuration, $)\r\n                }\r\n\r\n                let createStylingComposite = function(container, selectedPanel, filterInputItem, filterInput, dropDownMenu){\r\n                    return {\r\n                        $container:$(container),\r\n                        $selectedPanel:$(selectedPanel),\r\n                        $filterInputItem:$(filterInputItem),\r\n                        $filterInput:$(filterInput),\r\n                        $dropDownMenu:$(dropDownMenu)\r\n                    };\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(\r\n                    optionsAdapter,\r\n                    styling,\r\n                    selectedItemContent,\r\n                    dropDownItemContent,\r\n                    labelAdapter,\r\n                    createStylingComposite,\r\n                    configuration,\r\n                    onDispose,\r\n                    window);\r\n\r\n                if (configuration.postBuildConfiguration)\r\n                    configuration.postBuildConfiguration(element, multiSelect);\r\n                \r\n                multiSelect.init();\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype;","function OptionsAdapterJson(container, options, getDisabled, getIsValid, getIsInvalid, trigger) {\r\n    return {\r\n        container,\r\n        getOptions(){return options},\r\n        dispose(){\r\n            while (container.firstChild) container.removeChild(container.firstChild);\r\n        },\r\n        triggerChange(){\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return getDisabled?getDisabled():false;\r\n        },\r\n        getIsValid(){\r\n            return getIsValid?getIsValid():false;\r\n        },\r\n        getIsInvalid(){\r\n            return getIsInvalid?getIsInvalid():false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction OptionsAdapterElement(selectElement, trigger) {\r\n    selectElement.style.display='none';\r\n    var container = document.createElement('div');\r\n    return {\r\n        container,\r\n        getOptions(){return selectElement.getElementsByTagName('OPTION')},\r\n        dispose(){\r\n            container.parentNode.removeChild(container);\r\n        },\r\n        afterContainerFilled(){\r\n            selectElement.parentNode.insertBefore(container, selectElement.nextSibling);\r\n        },\r\n        triggerChange(){\r\n            trigger('change');\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return selectElement.disabled;\r\n        },\r\n        getIsValid(){\r\n            return selectElement.classList.contains('is-valid');\r\n        },\r\n        getIsInvalid(){\r\n            return selectElement.classList.contains('is-invalid');\r\n        }\r\n    }\r\n}\r\n\r\nexport {OptionsAdapterJson, OptionsAdapterElement};\r\n","function LabelAdapter(label, createInputId){\r\n    var backupedFor = null; // state saved between init and dispose\r\n    return {\r\n        init(filterInput) {\r\n            if (label) {\r\n                backupedFor = label.getAttribute('for');\r\n                var newId = createInputId();\r\n                filterInput.setAttribute('id', newId);\r\n                label.setAttribute('for',newId);\r\n            }\r\n        },\r\n        dispose(){\r\n            if(backupedFor)\r\n                label.setAttribute('for',backupedFor);\r\n        }\r\n    }\r\n}\r\n\r\nexport default LabelAdapter;"]}