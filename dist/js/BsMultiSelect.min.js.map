{"version":3,"sources":["../../js/src/Tools.js","../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/OptionsAdapters.js","../../js/src/BsMultiSelect.js","../../js/src/Bs4SelectedItemContent.js","../../js/src/Bs4DropDownItemContent.js","../../js/src/AddToJQueryPrototype.js"],"names":["ExtendIfUndefined","destination","source","property","undefined","ExtendIfUndefinedFluent","defaults","selectedPanelFocusClass","selectedPanelDisabledClass","dropDownItemDisabledClass","defSelectedPanelStyle","margin-bottom","height","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","background-color","defDropDownMenuStyleSys","MultiSelect","optionsAdapter","adapter","bs4SelectedItemContent","bs4DropDownItemContent","configuration","onDispose","window","$","Popper","TypeError","this","document","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","getDisabled","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","option","selected","hidden","indexOf","hide","visibleNodeListArray","getVisibleNodeListArray","hoverInInternal","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","onChange","_this2","isHidden","$dropDownItem","prop","appendTo","dropDownItem","get","adjustDropDownItem","CreateDropDownItemContent","isDisabled","disabledStyle","disable","onSelected","toggleItem","focus","selectItem","doPublishEvents","$selectedItem","selectedItem","adjustPair","isSelected","toggle","remove","select","removeItem","bsSelectedItemContent","CreateSelectedItemContent","jqEvent","setTimeout","ProcessedBySelectedItemContentEvent","insertBefore","mouseover","HoverIn","mouseout","toArray","index","keydownArrow","down","length","newIndex","forceUpdatePosition","Update","$selectedPanel","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","removeContainer","UpdateSize","UpdateDisabled","$container","Disable","e","Enable","mousedown","mouseup","click","fillContainer","_this3","createElement","css","$filterInputItem","$filterInput","$dropDownMenu","event","target","contains","nodeName","val","originalEvent","Init","init","getOptions","_this4","placement","modifiers","preventOverflow","enabled","flip","options","el","focusin","FocusIn","focusout","FocusOut","on","which","preventDefault","$penult","prev","dropDownItems","querySelectorAll","it","textContent","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","Bs4Adapter","stylingAdapter","bs4LabelDispose","dom","addClass","OnInit","getIsValid","getIsInvalid","removeClass","label","Bs4SelectedItemContentCss","selectedItemContentDisabledClass","DisableSelectedItemContent","$content","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4SelectedItemContentJs","selectedItemContentDisabledOpacity","$button","Bs4SelectedItemContent","createSelectedItemContent","optionItem","removeSelectedItem","skipProcessingEvent","Bs4DropDownItemContentCss","DisabledStyle","$checkBox","$checkBoxLabel","isDisbaled","Bs4DropDownItemContentJs","dropdDownLabelDisabledColor","Bs4DropDownItemContent","createDropDownItemContent","$dropDownItemContent","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","settings","extend","buildConfiguration","ms","_ms$fillContainer","firstChild","removeChild","trigger","hasOwnProperty","OptionsAdapterJson","createInputId","id","classList","$formGroup","closest","$label","getAttribute","selectElement","$selectElement","_ms$fillContainer2","parentNode","insertAfter","OptionsAdapterElement","name","useCss","StylingBs4AdapterCss","filterInputColor","hasClass","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDefMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","selectedPanelFocusBoxShadow","selectedPanelFocusBorderColor","StylingBs4AdapterJs","stylingAdapter2","stylingAdapter3"],"mappings":"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","sourcesContent":["export function ExtendIfUndefined(destination, source) {\r\n    for (var property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function ExtendIfUndefinedFluent(destination, source) {\r\n    ExtendIfUndefined(destination, source);\r\n    return destination;\r\n}","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst defaults = {\r\n    selectedPanelFocusClass : 'focus',\r\n    selectedPanelDisabledClass: 'disabled',\r\n    dropDownItemDisabledClass: 'disabled'\r\n};\r\n\r\nfunction StylingBs4AdapterCss(configuration){\r\n    ExtendIfUndefined(configuration, defaults);\r\n\r\n    return {\r\n        Enable($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelFocusClass);\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default StylingBs4AdapterCss;\r\n","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\n\r\nconst defaults = {\r\n    selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n    selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n    selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n    selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n    selectedPanelFocusBorderColor: '#80bdff',\r\n    selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n    selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n    selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n    filterInputColor: '#495057',\r\n    //selectedItemContentDisabledOpacity: '.65'\r\n};\r\n\r\nfunction StylingBs4AdapterJs(configuration){\r\n    return {\r\n        OnInit(dom){\r\n            dom.selectedPanel.css(defSelectedPanelStyle);\r\n            dom.filterInput.css(\"color\", configuration.filterInputColor);\r\n        },\r\n    \r\n        UpdateSize($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelLgMinHeight);\r\n            } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelSmMinHeight);\r\n            } else {\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelDefMinHeight);\r\n            }\r\n        },\r\n    \r\n        Enable($selectedPanel){\r\n            $selectedPanel.css({\"background-color\": \"\"})\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.css({\"background-color\": configuration.selectedPanelDisabledBackgroundColor})\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"is-valid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusValidBoxShadow);\r\n            } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusInvalidBoxShadow);\r\n            } else {\r\n                $selectedPanel\r\n                    .css(\"box-shadow\", configuration.selectedPanelFocusBoxShadow)\r\n                    .css(\"border-color\", configuration.selectedPanelFocusBorderColor);\r\n            }\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default StylingBs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, adapter, bs4SelectedItemContent, bs4DropDownItemContent, configuration, onDispose, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.adapter = adapter;\r\n        \r\n        this.window = window;\r\n        this.document = window.document;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.configuration = configuration;\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        this.getDisabled=null;\r\n        \r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup = null;\r\n        this.containerMousedown = null;\r\n        this.documentMouseup2 = null;\r\n        \r\n        // state\r\n        this.disabled = null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n        this.bs4SelectedItemContent=bs4SelectedItemContent;\r\n        this.bs4DropDownItemContent=bs4DropDownItemContent;\r\n\r\n        // jquery adapters\r\n        this.$document= $(this.document);\r\n\r\n        optionsAdapter(this);\r\n        \r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n            this.hoveredDropDownIndex = null;\r\n        }\r\n    }\r\n\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let option = $dropDownMenuItem.data(\"option\");\r\n                if (!option.selected && !option.hidden && !option.disabled && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n        if (visible == 1) {\r\n            let visibleNodeListArray = this.getVisibleNodeListArray();\r\n            this.hoverInInternal(visibleNodeListArray, 0)\r\n        }\r\n    }\r\n\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    \r\n    appendDropDownItem(optionElement, onChange) {\r\n        let isHidden = optionElement.hidden;\r\n        let itemText = optionElement.text;\r\n        let $dropDownItem = this.$(\"<LI/>\").prop(\"hidden\", isHidden)\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase()).appendTo(this.dropDownMenu);\r\n        $dropDownItem.data(\"option\", optionElement);\r\n        let dropDownItem = $dropDownItem.get(0);\r\n        \r\n        //let optionData = {\"optionId\":optionElement.value, \"itemText\": optionElement.text }\r\n        let adjustDropDownItem = this.bs4DropDownItemContent.CreateDropDownItemContent(dropDownItem, optionElement); \r\n        let isDisabled = optionElement.disabled;\r\n        let isSelected = optionElement.selected;\r\n\r\n        if (isSelected && isDisabled)\r\n            adjustDropDownItem.disabledStyle(true);\r\n        else if (isDisabled)\r\n            adjustDropDownItem.disable(isDisabled);\r\n       \r\n        adjustDropDownItem.onSelected(() => {\r\n            let toggleItem = $dropDownItem.data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        });\r\n        \r\n        let selectItem = (doPublishEvents) => {\r\n            if (optionElement.hidden)\r\n                return;\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            let selectedItem = $selectedItem.get(0);\r\n            \r\n            let adjustPair =(isSelected, toggle, remove, disable) => {\r\n                optionElement.selected = isSelected;\r\n                adjustDropDownItem.select(isSelected);\r\n                $dropDownItem.data(\"option-toggle\", toggle);                    \r\n                $selectedItem.data(\"option-remove\", remove);\r\n                $selectedItem.data(\"option-disable\", disable);\r\n            }\r\n\r\n            let removeItem = () => {\r\n                adjustDropDownItem.disabledStyle(false);\r\n                adjustDropDownItem.disable(optionElement.disabled);\r\n                adjustPair(\r\n                    false, \r\n                    () => {\r\n                        if (optionElement.disabled)\r\n                            return;\r\n                        selectItem(true);\r\n                    }, \r\n                    null,\r\n                    null\r\n                    );\r\n                $selectedItem.remove();\r\n                onChange();\r\n            };\r\n            \r\n            // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n            // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n            // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n            // because of the event's bubling process removeSelectedItem runs first. \r\n            // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n            // before we could analize is it belong to our dropdown or not.\r\n            // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n            // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n            // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n            // the situation described above: click outside dropdown on the same component.\r\n            // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n\r\n            let onRemoveItemEvent = (jqEvent) => {\r\n                setTimeout( ()=> {  \r\n                    removeItem();\r\n                    this.closeDropDown();\r\n                }, 0);\r\n                this.ProcessedBySelectedItemContentEvent=jqEvent;\r\n            };\r\n\r\n            let bsSelectedItemContent = this.bs4SelectedItemContent.CreateSelectedItemContent(\r\n                selectedItem,\r\n                optionElement,\r\n                onRemoveItemEvent\r\n            );\r\n            //bsSelectedItemContentList.push(bsSelectedItemContent);\r\n            bsSelectedItemContent.disable(this.disabled);\r\n            adjustPair(true, ()=>removeItem(), removeItemAndCloseDropDown, bsSelectedItemContent.disable);\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            if (doPublishEvents){\r\n                onChange();\r\n            }\r\n        }\r\n\r\n        $dropDownItem\r\n            .mouseover(() => this.adapter.HoverIn($dropDownItem))\r\n            .mouseout(() => this.adapter.HoverOut($dropDownItem));\r\n        \r\n        if (optionElement.selected)\r\n            selectItem(false);\r\n        else\r\n            $dropDownItem.data(\"option-toggle\",  () => { \r\n                if (optionElement.disabled)\r\n                    return;\r\n                selectItem(true);\r\n            })\r\n    }\r\n    getVisibleNodeListArray(){\r\n        return this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"]):not(:hidden)').toArray();\r\n    }\r\n    hoverInInternal(visibleNodeListArray, index){\r\n        this.hoveredDropDownIndex = index;\r\n        this.hoveredDropDownItem = visibleNodeListArray[index];\r\n        this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.getVisibleNodeListArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            let index;\r\n            if (this.hoveredDropDownItem === null) {\r\n                index = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    index = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    index = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoverInInternal(visibleNodeListArray, index);\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.removeContainer) {\r\n            this.removeContainer();\r\n        }\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.getDisabled();\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n                $selectedPanel.find('LI').each( \r\n                    function (i, e) {let disable = $(e).data(\"option-disable\"); if (disable!=null) disable(true); } );\r\n                    \r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n                $selectedPanel.find('LI').each( \r\n                    function (i, e) {let disable = $(e).data(\"option-disable\"); if (disable!=null) disable(false);} );\r\n\r\n                $container.mousedown(this.containerMousedown); // removable\r\n                this.$document.mouseup(this.documentMouseup);  // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick); // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    fillContainer(container, removeContainer){\r\n        this.container=container;\r\n        this.removeContainer=removeContainer;\r\n        let $container = this.$(container);\r\n        this.selectedPanel = this.document.createElement(\"ul\");\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        $selectedPanel.appendTo(container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        this.filterInput = $filterInput.get(0);\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        \r\n        let $dropDownMenu = this.$(\"<UL/>\").css({\"display\":\"none\"});\r\n        $dropDownMenu.appendTo(container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(container === event.target || this.$.contains(container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = jqEvent => {\r\n            if (jqEvent.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible &&  (this.ProcessedBySelectedItemContentEvent==null || this.ProcessedBySelectedItemContentEvent.originalEvent!=jqEvent.originalEvent)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            this.ProcessedBySelectedItemContentEvent=null;\r\n        };\r\n        this.adapter.Init({\r\n            container:$container, selectedPanel:$selectedPanel,\r\n            filterInputItem:$filterInputItem, filterInput:$filterInput,\r\n            dropDownMenu:$dropDownMenu });\r\n        return {$container, $selectedPanel, $dropDownMenu, $filterInput};\r\n    }\r\n\r\n    init($container, $selectedPanel, $dropDownMenu, $filterInput, onChange, getOptions, getDisabled) {\r\n        this.getDisabled=getDisabled;\r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n                }\r\n        });\r\n        \r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        \r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // FYI: $(() => { ...}) is jquery ready event shortcut\r\n        this.$(() => {\r\n            let options = getOptions();\r\n            this.$.each(options,\r\n                (index, el) => {\r\n                    this.appendDropDownItem(el, onChange);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = options.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        // there was unmotivated stopPropagation call. commented out.\r\n        // $dropDownMenu.click(  event => { \r\n        //    event.stopPropagation();\r\n        // });\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.which == 38) {\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                if (this.hoveredDropDownItem === null && this.hasDropDownVisible) {\r\n                    this.showDropDown();\r\n                }\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 9) {\r\n                if (!this.filterInput.value) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else if (event.which == 8) {\r\n                // NOTE: this will process backspace only if there are no text in the input field\r\n                // If user will find this inconvinient, we will need to calculate something like this\r\n                // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                if (!this.filterInput.value)\r\n                {\r\n                    let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                    if ($penult.length){\r\n                        let removeItem = $penult.data(\"option-remove\");\r\n                        removeItem();\r\n                    }\r\n                    this.updateDropDownPosition(false);\r\n                }\r\n            }\r\n\r\n            if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                this.resetDropDownMenuHover();\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let option = $dropDownItem.data(\"option\");\r\n                        if (!option.selected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","import  { ExtendIfUndefinedFluent } from './Tools';\r\n\r\n// addClass, removeClass, css, siblings('label'), hasClass, find('BUTTON').prop(..)\r\nconst defaults = {\r\n    containerClass: 'dashboardcode-bsmultiselect',\r\n    dropDownMenuClass: 'dropdown-menu',\r\n    dropDownItemClass:  'px-2',\r\n    dropDownItemHoverClass: 'text-primary bg-light',\r\n    selectedPanelClass: 'form-control',\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close',\r\n    filterInputItemClass: '',\r\n    filterInputClass: ''\r\n}\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(stylingAdapter, configuration, $){\r\n        this.stylingAdapter = stylingAdapter;\r\n        this.configuration = ExtendIfUndefinedFluent(configuration, defaults);\r\n        this.$ = $;\r\n        this.bs4LabelDispose = null;\r\n    }\r\n   \r\n    Init(dom){\r\n        dom.container.addClass(this.configuration.containerClass);\r\n        dom.selectedPanel.addClass(this.configuration.selectedPanelClass);\r\n        dom.dropDownMenu.addClass(this.configuration.dropDownMenuClass);\r\n        dom.filterInputItem.addClass(this.configuration.filterInputItemClass);\r\n        dom.filterInput.addClass(this.configuration.filterInputClass);\r\n        if (this.stylingAdapter.OnInit)\r\n            this.stylingAdapter.OnInit(dom)\r\n        //this.bs4LabelDispose = this.handleLabel(dom.filterInput);\r\n    }\r\n\r\n    // handleLabel($filterInput){\r\n    //     var label = this.configuration.label;\r\n    //     if (label!=null) {\r\n    //         var newForId = this.configuration.createInputId();\r\n    //         var backupForId =  label.getAttribute('for');\r\n    //         $filterInput.attr('id', newForId);\r\n    //         label.setAttribute('for',newForId);\r\n    //         return () => {\r\n    //             label.setAttribute('for',backupForId);\r\n    //         }\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    // Dispose(){\r\n    //     if (this.bs4LabelDispose)\r\n    //         this.bs4LabelDispose();\r\n    // }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        if (this.configuration.getIsValid()){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if (this.configuration.getIsInvalid()){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.stylingAdapter.UpdateSize)\r\n            this.stylingAdapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        this.stylingAdapter.Enable($selectedPanel)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.stylingAdapter.Disable($selectedPanel)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.stylingAdapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.stylingAdapter.FocusOut($selectedPanel)\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import { ExtendIfUndefined } from './Tools';\r\n\r\nconst defaults = {\r\n    getIsValid(){return false},\r\n    getIsInvalid(){return false},\r\n    label:null\r\n}\r\n\r\nfunction OptionsAdapterJson(container, configuration) {\r\n        ExtendIfUndefined(configuration, defaults);\r\n\r\n        return function(ms){\r\n            let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container,\r\n                ()=> {\r\n                    while (container.firstChild) container.removeChild(container.firstChild);\r\n                });\r\n            ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n                () => {\r\n                    $container.trigger( \"multiselect:change\" );\r\n                }, \r\n                () => configuration.options, \r\n                configuration.hasOwnProperty(\"getDisabled\")?configuration.getDisabled:()=>true);\r\n        }\r\n}\r\n\r\nfunction OptionsAdapterElement(selectElement, configuration, $) {\r\n    ExtendIfUndefined(configuration, defaults);\r\n    var $selectElement = $(selectElement);\r\n    return function (ms){\r\n        selectElement.style.display='none';\r\n        let container = document.createElement(\"div\");\r\n\r\n        let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container, \r\n            ()=>container.parentNode.removeChild(container));\r\n        $container.insertAfter(selectElement);\r\n        ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n            () => {\r\n                $selectElement.trigger('change');\r\n                $selectElement.trigger( \"multiselect:change\" );\r\n            }, \r\n            () => $selectElement.find('OPTION'), \r\n            () => selectElement.disabled);\r\n    }\r\n}\r\n\r\nexport {OptionsAdapterJson, OptionsAdapterElement};\r\n","import $ from 'jquery'\r\nimport StylingBs4AdapterCss from './Bs4AdapterCss'\r\nimport StylingBs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\nimport {OptionsAdapterJson,OptionsAdapterElement} from './OptionsAdapters';\r\n\r\nimport { Bs4SelectedItemContent, Bs4SelectedItemContentJs, Bs4SelectedItemContentCss } from './Bs4SelectedItemContent';\r\nimport { Bs4DropDownItemContent, Bs4DropDownItemContentJs, Bs4DropDownItemContentCss } from './Bs4DropDownItemContent';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, settings, onDispose) => {\r\n                let configuration = $.extend({}, settings); // settings used per jQuery intialization, configuration per element\r\n                if (configuration.buildConfiguration)\r\n                    configuration.buildConfiguration(element, configuration);\r\n\r\n                let optionsAdapter = null;\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    if (configuration.options){\r\n                        optionsAdapter = OptionsAdapterJson(element, configuration);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-filter-${element.id}`;\r\n            \r\n                    }else {\r\n                        configuration.getIsValid=()=>element.classList.contains('is-valid');\r\n                        configuration.getIsInvalid=()=>element.classList.contains('is-invalid');\r\n                        if (!configuration.label)\r\n                        {\r\n                            let $formGroup = $(element).closest('.form-group');\r\n                            if ($formGroup.length == 1) {\r\n                                let $label = $formGroup.find(`label[for=\"${element.id}\"]`);\r\n                                if ($label.length>0)\r\n                                {   \r\n                                    let label = $label.get(0);\r\n                                    let forId = label.getAttribute('for');\r\n                                    if (forId == element.id) {\r\n                                        configuration.label = label;\r\n                                    }\r\n                                }   \r\n                            }\r\n                        }\r\n                        optionsAdapter = OptionsAdapterElement(element, configuration, $);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-input-${((element.id)?element.id:element.name).toLowerCase()}-id`;\r\n                    }\r\n                }\r\n\r\n                let adapter=null;\r\n                if (configuration.adapter)\r\n                    adapter = configuration.adapter;\r\n                else\r\n                {\r\n                    let stylingAdapter = configuration.useCss\r\n                        ? StylingBs4AdapterCss(configuration)\r\n                        : StylingBs4AdapterJs(configuration);\r\n                    adapter = new Bs4Adapter(stylingAdapter, configuration, $);\r\n                }\r\n\r\n                // configuration.createSelectedItemContent = function(selectedItem, optionItem, removeSelectedItem){\r\n                //     let $selectedItem = $(selectedItem)\r\n                //     $selectedItem.addClass(configuration.selectedItemClass);\r\n                //     let $content = this.$(`<span/>`).text(optionItem.text);\r\n                //     $content.appendTo($selectedItem);\r\n                //     if (optionItem.disabled)\r\n                //         this.stylingAdapter.DisableSelectedItemContent($content);\r\n                    \r\n                //     if (this.stylingAdapter.CreateSelectedItemContent)\r\n                //         this.stylingAdapter.CreateSelectedItemContent($selectedItem, null);\r\n                //     return {\r\n                //          disable(isDisabled){  }\r\n                //     };\r\n                // }\r\n\r\n                let stylingAdapter2 = configuration.useCss\r\n                    ? new Bs4SelectedItemContentCss(configuration, $)\r\n                    : new Bs4SelectedItemContentJs(configuration, $);\r\n                let stylingAdapter3 = configuration.useCss\r\n                    ? new Bs4DropDownItemContentCss(configuration, $)\r\n                    : new Bs4DropDownItemContentJs(configuration, $);\r\n                let bs4SelectedItemContent = new Bs4SelectedItemContent(stylingAdapter2, configuration, $);\r\n                let bs4DropDownItemContent = new Bs4DropDownItemContent(stylingAdapter3, configuration, $)\r\n\r\n                \r\n\r\n                let multiSelect = new MultiSelect(optionsAdapter, adapter, bs4SelectedItemContent, bs4DropDownItemContent, configuration, onDispose, window, $);\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","import  { ExtendIfUndefined, ExtendIfUndefinedFluent } from './Tools';\r\n\r\nclass Bs4SelectedItemContentCss {\r\n    constructor(configuration) {\r\n        const defaults = {\r\n            selectedItemContentDisabledClass: 'disabled',\r\n        };\r\n        this.configuration=ExtendIfUndefinedFluent(configuration, defaults);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.addClass(this.configuration.selectedItemContentDisabledClass )\r\n    }\r\n}\r\n\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4SelectedItemContentJs {\r\n    constructor(configuration) {\r\n        const defaults = {\r\n            selectedItemContentDisabledOpacity: '.65',\r\n        };\r\n        this.configuration=ExtendIfUndefinedFluent(configuration, defaults);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.css(\"opacity\", this.configuration.selectedItemContentDisabledOpacity )\r\n    }\r\n    \r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        if ($button)\r\n            $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n}\r\n\r\nclass Bs4SelectedItemContent {\r\n\r\n    constructor(stylingAdapter, configuration, $){\r\n        const defaults = {\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close'\r\n        };\r\n        ExtendIfUndefined(configuration, defaults);\r\n        this.stylingAdapter = stylingAdapter;\r\n        this.$ = $;\r\n        \r\n        if (configuration.createSelectedItemContent)\r\n            this.createSelectedItemContent = configuration.createSelectedItemContent;\r\n        else\r\n            this.createSelectedItemContent = (selectedItem, optionItem, removeSelectedItem) => {\r\n                let $selectedItem = $(selectedItem)\r\n                $selectedItem.addClass(configuration.selectedItemClass);\r\n                let $content = this.$(`<span/>`).text(optionItem.text);\r\n                $content.appendTo($selectedItem);\r\n                if (optionItem.disabled)\r\n                    this.stylingAdapter.DisableSelectedItemContent($content);\r\n                let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                    // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                    // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                    .css(\"float\", \"none\").appendTo($selectedItem)\r\n                    .addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n                    .on(\"click\", (jqEvent) => removeSelectedItem(jqEvent));\r\n                \r\n                if (this.stylingAdapter.CreateSelectedItemContent)\r\n                    this.stylingAdapter.CreateSelectedItemContent($selectedItem, $button);\r\n                return {\r\n                    disable(isDisabled){ $button.prop('disabled', isDisabled); }\r\n                };\r\n            }\r\n    }\r\n\r\n    CreateSelectedItemContent(selectedItem, optionItem, removeSelectedItem, skipProcessingEvent){\r\n        return this.createSelectedItemContent(selectedItem, optionItem, removeSelectedItem, skipProcessingEvent);\r\n    }\r\n\r\n}\r\n\r\nexport { Bs4SelectedItemContent, Bs4SelectedItemContentJs, Bs4SelectedItemContentCss };\r\n","import  { ExtendIfUndefined, ExtendIfUndefinedFluent } from './Tools';\r\n\r\nclass Bs4DropDownItemContentCss {\r\n    constructor(configuration) {\r\n        const defaults = {\r\n            selectedItemContentDisabledClass: 'disabled',\r\n        };\r\n        this.configuration=ExtendIfUndefinedFluent(configuration, defaults);\r\n    }\r\n\r\n    DisabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n        if (isDisbaled) \r\n            $checkBox.addClass(this.configuration.dropDownItemDisabledClass);\r\n        else\r\n            $checkBox.removeClass(this.configuration.dropDownItemDisabledClass);\r\n    }\r\n}\r\n\r\nclass Bs4DropDownItemContentJs {\r\n    constructor(configuration) {\r\n        const defaults = {\r\n            selectedItemContentDisabledOpacity: '.65',\r\n            dropdDownLabelDisabledColor: '#6c757d'\r\n        };\r\n        this.configuration=ExtendIfUndefinedFluent(configuration, defaults);\r\n    }\r\n\r\n    DisabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n        $checkBoxLabel.css('color', isDisbaled?this.configuration.dropdDownLabelDisabledColor:'')\r\n    }\r\n}\r\n\r\n// addClass, removeClass, css, siblings('label'), hasClass, find('BUTTON').prop(..)\r\nclass Bs4DropDownItemContent {\r\n\r\n    constructor(stylingAdapter, configuration, $){\r\n        const defaults = {\r\n            dropDownItemClass:  'px-2',\r\n        }\r\n        ExtendIfUndefined(configuration, defaults);\r\n        this.$ = $;\r\n        this.stylingAdapter = stylingAdapter;\r\n\r\n        this.createDropDownItemContent = (dropDownItem, option) => {\r\n            let $dropDownItem = $(dropDownItem);\r\n            $dropDownItem.addClass(configuration.dropDownItemClass);\r\n            let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\">\r\n                <label class=\"custom-control-label\"></label>\r\n            </div>`);\r\n            $dropDownItemContent.appendTo(dropDownItem);\r\n            let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n            let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n            $checkBoxLabel.text(option.text);\r\n\r\n            return { \r\n                select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n                disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n                disabledStyle(isDisbaled){ stylingAdapter.DisabledStyle($checkBox, $checkBoxLabel, isDisbaled); },\r\n                onSelected(toggle) {\r\n                        $checkBox.on(\"change\", toggle)\r\n                        $dropDownItem.on(\"click\", event => {\r\n                            if (dropDownItem === event.target || $.contains(dropDownItem, event.target)) {\r\n                                toggle();\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    CreateDropDownItemContent(dropDownItem, option){\r\n        return this.createDropDownItemContent(dropDownItem, option);\r\n    }\r\n }\r\n\r\nexport { Bs4DropDownItemContent, Bs4DropDownItemContentJs, Bs4DropDownItemContentCss };","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}