{"version":3,"sources":["../../js/src/Bootstrap4Adapter.es8.js","../../js/src/BsMultiSelect.es8.js"],"names":["Bootstrap4Adapter","jQuery","options","hiddenSelect","this","CreateSelectedItemContent","$selectedItem","itemText","removeSelectedItem","selectedItemClass","addClass","css","padding-left","line-height","$text","$buttom","removeSelectedItemButtonClass","font-size","on","appendTo","CreateDropDownItemContent","$dropDownItem","optionId","isSelected","checkBoxId","containerClass","name","toLowerCase","checked","dropDownItemClass","$checkBox","find","prop","Init","$selectedPanel","$hiddenSelect","hasClass","Enable","isEnabled","inputId","id","$formGroup","closest","length","$label","f","attr","$filterInput","selectedPanelReadonlyClass","background-color","selectedPanelReadonlyBackgroundColor","off","Hover","isHover","removeClass","FilterClick","event","target","nodeName","parentElement","Focus","isFocused","selectedPanelFocusClass","selectedPanelValidBoxShadow","selectedPanelInvalidBoxShadow","selectedPanelBoxShadow","selectedPanelBorderColor","window","$","Popper","JQUERY_NO_CONFLICT","fn","pluginName","dataKey","defSelectedPanelStyle","margin-bottom","defSelectedPanelStyleSys","display","flex-wrap","defFilterInputItemStyleSys","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","defaults","doManageFocus","selectedPanelDefMinHeight","filterInputColor","dropDownMenuClass","selectedPanelClass","filterInputItemClass","filterInputClass","Plugin","element","TypeError","extend","adapter","container","dropDownMenu","selectedPanel","filterInput","filterInputItem","popper","filterInputItemOffsetLeft","skipFocusout","backspaceAtStartPoint","selectedDropDownItem","selectedDropDownIndex","hasItems","init","_proto","prototype","updateDropDownPosition","force","offsetLeft","update","hideDropDown","hide","showDropDown","show","closeDropDown","resetSelectDropDownMenu","clearFilterInput","updatePosition","value","adoptFilterInputLength","filterDropDownMenu","text","trim","visible","each","i","dropDownMenuItem","$dropDownMenuItem","data","indexOf","appendDropDownItem","optionElement","_this","selected","adoptDropDownItem","appendItem","removeItem","remove","focus","insertBefore","style","keydownArrow","down","visibleNodeListArray","toArray","newIndex","_this2","disabled","$container","insertAfter","get","min-height","selectedPanelMinHeight","$filterInputItem","$dropDownMenu","placement","modifiers","preventOverflow","enabled","flip","document","ready","selectOptions","index","click","preventDefault","stopPropagation","currentTarget","toggleItem","val","focusin","focusout","mousedown","mouseup","contains","which","selectionStart","selectionEnd","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","$penult","prev","jQueryInterface","test","methodName","charAt","toUpperCase","slice","Constructor","noConflict"],"mappings":"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","sourcesContent":["class Bootstrap4Adapter {\r\n\r\n    constructor(jQuery, options, hiddenSelect) {\r\n        this.jQuery=jQuery;\r\n        this.options=options;\r\n        this.hiddenSelect=hiddenSelect;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem){\r\n        const defSelectedItemClass = 'badge';\r\n        const defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1rem'};\r\n        const defRemoveSelectedItemButtonClass = 'close';\r\n        const defRemoveSelectedItemButtonStyle = {'line-height': '1rem', 'font-size':'1.3rem'};\r\n\r\n        if (!this.options.selectedItemClass){\r\n            $selectedItem.addClass(defSelectedItemClass);\r\n            $selectedItem.css(defSelectedItemStyle)\r\n        }else{\r\n            $selectedItem.addClass(this.options.selectedItemClass);\r\n        }\r\n            \r\n        let $text = this.jQuery(`<span>${itemText}</span>`)\r\n        let $buttom = this.jQuery('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>');\r\n\r\n        if (!this.options.removeSelectedItemButtonClass){\r\n            $buttom.addClass(defRemoveSelectedItemButtonClass);\r\n            $buttom.css(defRemoveSelectedItemButtonStyle);\r\n        }\r\n        else{\r\n            $buttom.addClass(this.options.removeSelectedItemButtonClass)\r\n        }\r\n        $buttom.on(\"click\", removeSelectedItem);\r\n        $text.appendTo($selectedItem);\r\n        $buttom.appendTo($selectedItem); \r\n    }\r\n\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected){\r\n        let checkBoxId = `${this.options.containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.jQuery(`<div class=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n                <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        $dropDownItem.addClass(this.options.dropDownItemClass)\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected) => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    Init($selectedPanel){\r\n        let $hiddenSelect = this.jQuery(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n        \r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel, isEnabled){\r\n        if(isEnabled){\r\n            let inputId = this.hiddenSelect.id;\r\n            let $formGroup = this.jQuery(this.hiddenSelect).closest('.form-group');\r\n            \r\n            if ($formGroup.length == 1) {\r\n                let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n                let f = $label.attr('for');\r\n                let $filterInput = $selectedPanel.find('input');\r\n                if (f == this.hiddenSelect.id) {\r\n                    let id = `${this.options.containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                    $filterInput.attr('id', id);\r\n                    $label.attr('for', id);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(!this.options.selectedPanelReadonlyClass){\r\n                $selectedPanel.css({\"background-color\": this.options.selectedPanelReadonlyBackgroundColor});\r\n            }else{\r\n                $selectedPanel.addClass(this.options.selectedPanelReadonlyClass);\r\n            }\r\n            $selectedPanel.find('BUTTON').prop(\"disabled\", true).off();\r\n        }\r\n    }\r\n\r\n    Hover($dropDownItem, isHover){\r\n        if (isHover)\r\n            $dropDownItem.addClass('text-primary').addClass('bg-light');\r\n        else\r\n            $dropDownItem.removeClass('text-primary').removeClass('bg-light');\r\n    }\r\n\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    Focus($selectedPanel, isFocused){\r\n        if (isFocused){\r\n            if (this.options.selectedPanelFocusClass){\r\n                $selectedPanel.addClass(\"this.options.selectedPanelFocusClass\");\r\n            }\r\n            else\r\n            {\r\n                if ($selectedPanel.hasClass(\"is-valid\") &&  this.options.selectedPanelValidBoxShadow){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelValidBoxShadow);              \r\n                } else if ($selectedPanel.hasClass(\"is-invalid\") && this.options.selectedPanelInvalidBoxShadow){\r\n                    $selectedPanel.css(\"box-shadow\", this.options.selectedPanelInvalidBoxShadow);\r\n                } else {\r\n                    $selectedPanel\r\n                        .css(\"box-shadow\", this.options.selectedPanelBoxShadow)\r\n                        .css(\"border-color\", this.options.selectedPanelBorderColor);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.options.selectedPanelFocusClass){\r\n                $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n            } else {\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bootstrap4Adapter;","import $ from 'jquery'\nimport Popper from 'popper.js'\nimport Bootstrap4Adapter from './Bootstrap4Adapter.es8'\n\n// TODO: try to find convinient way to declare private members. Is it convinient enough to move them into IIFE?\nconst BsMultiSelect = ((window, $, Popper) => {\n    const JQUERY_NO_CONFLICT = $.fn[pluginName];\n    const pluginName = 'dashboardCodeBsMultiSelect';\n    const dataKey = `plugin_${pluginName}`;\n\n    const defSelectedPanelClass = 'form-control';\n    const defSelectedPanelStyle = {'margin-bottom': '0'}; // 16 is for bootstrap reboot for UL\n    const defSelectedPanelStyleSys = {'display': 'flex', \"flex-wrap\": \"wrap\"};\n\n    const defFilterInputItemStyleSys = {'list-style-type':'none'}; \n    const defFilterInputStyleSys = {'width': '2ch', 'border': '0', 'padding': '0', 'outline': 'none'};\n    \n    const defDropDownMenuStyleSys =  {'list-style-type':'none'}; // ul usualy has bullets\n    const defaults = {\n        doManageFocus:true,\n        //usePopper: true,\n        selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\n        selectedPanelReadonlyBackgroundColor: '#e9ecef',\n        selectedPanelBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\n        selectedPanelBorderColor: '#80bdff',\n        selectedPanelValidBoxShadow: ' 0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\n        selectedPanelInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\n        filterInputColor: '#495057',\n        containerClass: 'dashboardcode-bsmultiselect',\n        dropDownMenuClass: 'dropdown-menu',\n        dropDownItemClass: 'px-2',\n        selectedPanelClass: '',\n        selectedPanelFocusClass : '',\n        selectedPanelReadonlyClass: '',\n        selectedItemClass: '', \n        removeSelectedItemButtonClass: '',\n        filterInputItemClass: '', \n        filterInputClass: ''\n    };\n\n    class Plugin {\n        constructor(element, options) {\n            if (typeof Popper === 'undefined') {\n                throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\n            }\n\n            // readonly\n            this.hiddenSelect = element;\n            this.options = $.extend({}, defaults, options);\n            this.jQuery = $;\n            this.adapter = new Bootstrap4Adapter($, this.options, this.hiddenSelect);\n            \n            this.container = null;\n            this.dropDownMenu = null;\n            this.selectedPanel = null;\n            this.filterInput = null;\n            this.filterInputItem = null;\n            this.popper = null;\n\n            // state\n            this.filterInputItemOffsetLeft = null;\n            this.skipFocusout = false;\n            this.backspaceAtStartPoint = null;\n            this.selectedDropDownItem = null;\n            this.selectedDropDownIndex = null;\n            this.hasItems = false;\n\n            this.init();\n        }\n\n        updateDropDownPosition(force) {\n            let offsetLeft = this.filterInputItem.offsetLeft;\n            if (force || this.filterInputItemOffsetLeft!=offsetLeft){\n                this.popper.update();\n                this.filterInputItemOffsetLeft=offsetLeft;\n            }\n        }\n\n        hideDropDown() {\n            $(this.dropDownMenu).hide()\n        }\n\n        showDropDown() {\n            this.updateDropDownPosition(true);\n            $(this.dropDownMenu).show()\n        }\n\n        // Public methods\n        closeDropDown() {\n            this.resetSelectDropDownMenu();\n            this.clearFilterInput();\n            this.hideDropDown();\n            this.updateDropDownPosition();\n        }\n\n        clearFilterInput(updatePosition) {\n            if (this.filterInput.value != '') {\n                this.filterInput.value = '';\n                this.adoptFilterInputLength();\n                this.filterDropDownMenu();\n                if (updatePosition && this.hasItems) {\n                    this.updateDropDownPosition(false); \n                } \n            }\n        }\n\n        filterDropDownMenu() {\n            let text = this.filterInput.value.trim().toLowerCase();\n            let visible = 0;\n            $(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\n                let $dropDownMenuItem = $(dropDownMenuItem);\n                if (text == '') {\n                    $dropDownMenuItem.show();\n                    visible++;\n                }\n                else {\n                    let itemText = $dropDownMenuItem.data(\"option-text\");\n                    let isSelected = $dropDownMenuItem.data(\"option-selected\"); \n                    if (!isSelected && itemText.indexOf(text)>=0) {\n                        $dropDownMenuItem.show();\n                        visible++;\n                    } else {\n                        $dropDownMenuItem.hide();\n                    }\n                }\n            });\n            this.hasItems = visible > 0;\n            this.resetSelectDropDownMenu();\n        }\n\n        appendDropDownItem(optionElement) {\n            let optionId = optionElement.value;\n            let itemText = optionElement.text;\n            let isSelected = optionElement.selected;\n            let $dropDownItem = $(\"<li/>\");\n            $dropDownItem.data(\"option-id\", optionId);\n            $dropDownItem.data(\"option-text\", itemText.toLowerCase());\n\n            let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\n            $dropDownItem.appendTo($(this.dropDownMenu));\n\n            let appendItem = () => {\n                $dropDownItem.data(\"option-selected\", true);\n                let $selectedItem = $(\"<li/>\");\n                $selectedItem.data(\"option-id\", optionId);\n                optionElement.selected = true;\n                adoptDropDownItem(true);\n\n                let removeItem = () => {\n                    $dropDownItem.data(\"option-selected\", false);\n                    $dropDownItem.data(\"option-toggle\", appendItem);\n                    $selectedItem.data(\"option-remove\", null);\n                    $selectedItem.remove();\n                    optionElement.selected = false;\n                    adoptDropDownItem(false);\n                };\n\n                this.adapter.CreateSelectedItemContent(\n                    $selectedItem, \n                    itemText, () => {\n                        removeItem();\n                        this.clearFilterInput(true);\n                        this.updateDropDownPosition(false);\n                        $(this.filterInput).focus();\n                });\n                $selectedItem.insertBefore(this.jQuery(this.filterInputItem));\n                $dropDownItem.data(\"option-toggle\", removeItem);\n                $selectedItem.data(\"option-remove\", removeItem);\n                return $selectedItem;\n            }\n            $dropDownItem.data(\"option-toggle\", () => appendItem());\n            \n            if (isSelected) {\n                appendItem();\n            }\n        }\n\n        adoptFilterInputLength() {\n            this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\n        }\n\n        resetSelectDropDownMenu() {\n            if (this.selectedDropDownItem !== null) {\n                this.adapter.Hover($(this.selectedDropDownItem), false);\n                this.selectedDropDownItem = null;\n            }\n            this.selectedDropDownIndex = null;\n        }\n        \n        keydownArrow(down) {\n            let visibleNodeListArray = $(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\n            if (visibleNodeListArray.length > 0) {\n                if (this.hasItems) {\n                    this.showDropDown();\n                }\n                if (this.selectedDropDownItem === null) {\n                    this.selectedDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\n                }\n                else {\n                    // IE10-11 doesn't support multiple arguments in classList remove \n                    this.adapter.Hover($(this.selectedDropDownItem), false);\n                    if (down) {\n                        let newIndex = this.selectedDropDownIndex + 1;\n                        this.selectedDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\n                    } else {\n                        let newIndex = this.selectedDropDownIndex - 1;\n                        this.selectedDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\n                    }\n                }\n                this.selectedDropDownItem = visibleNodeListArray[this.selectedDropDownIndex];\n                // IE10-11 doesn't support multiple arguments in classList add \n                this.adapter.Hover($(this.selectedDropDownItem), true);\n            }\n        }\n\n        init() {\n            let $hiddenSelect = $(this.hiddenSelect);\n            $hiddenSelect.hide();\n            let disabled = this.hiddenSelect.disabled;\n\n            let $container = $(\"<div/>\");\n            $container.addClass(this.options.containerClass);\n            $container.insertAfter($hiddenSelect);\n                \n            this.container = $container.get(0);\n\n            let $selectedPanel = $(\"<ul/>\");\n            $selectedPanel.css(defSelectedPanelStyleSys);\n            if (!this.options.selectedPanelClass){\n                $selectedPanel.addClass(defSelectedPanelClass);\n                $selectedPanel.css(defSelectedPanelStyle);\n                $selectedPanel.css({\"min-height\":this.options.selectedPanelMinHeight});\n            }\n            else\n                $selectedPanel.addClass(this.options.selectedPanelClass);\n            $selectedPanel.appendTo(this.container);\n            this.selectedPanel = $selectedPanel.get(0);\n            this.adapter.Init($selectedPanel);\n            \n\n            let $filterInputItem = $('<li/>');\n            this.filterInputItem = $filterInputItem.get(0)\n            $filterInputItem.css(defFilterInputItemStyleSys)\n\n            if (!this.options.filterInputItemClass)\n                $filterInputItem.addClass(this.options.filterInputItemClass)\n            \n            $filterInputItem.appendTo(this.selectedPanel);\n            \n\n            let $filterInput = $('<input type=\"search\" autocomplete=\"off\">');\n            if (!this.options.filterInputClass){\n                $filterInput.css(defFilterInputStyleSys);\n                $filterInput.css(\"color\", this.options.filterInputColor);\n            } else {\n                $filterInput.addClass(this.options.filterInputClass);\n            }\n            $filterInput.appendTo(this.filterInputItem);\n            this.filterInput = $filterInput.get(0);\n\n            let $dropDownMenu = $(\"<ul/>\")\n                .css({\"display\":\"none\"})\n                .appendTo($container);\n            this.dropDownMenu = $dropDownMenu.get(0);\n\n            $dropDownMenu.addClass(this.options.dropDownMenuClass);\n            // prevent heavy understandable styling error\n            $dropDownMenu.css(defDropDownMenuStyleSys);\n\n            this.popper = new Popper(this.filterInput, this.dropDownMenu, {\n                placement: 'bottom-start',\n                modifiers: {\n                    preventOverflow: {enabled:false},\n                    hide: {enabled:false},\n                    flip: { enabled:false }\n                    }\n            });\n            \n            // some browsers (IE11) can change select value (\"autocomplete\") after page is loaded but before \"ready\" event\n            $(document).ready(() => {\n                let selectOptions = $hiddenSelect.find('option');\n                selectOptions.each(\n                    (index, optionElement) => {\n                        this.appendDropDownItem(optionElement);\n                    }\n                );\n                this.hasItems = selectOptions.length > 0;\n                this.updateDropDownPosition(false);\n\n                $dropDownMenu.find('li').click(event => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    let toggleItem = $(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\n                    toggleItem();\n                    this.clearFilterInput(false); \n                    this.filterInput.focus(); \n                });\n\n                $dropDownMenu.find(\"LI\").on(\"mouseover\", event => {\n                    this.adapter.Hover($(event.target).closest(\"li\"), true);\n                });\n\n                $dropDownMenu.find(\"LI\").on(\"mouseout\", event => {\n                    this.adapter.Hover($(event.target).closest(\"li\"), false);\n                });\n\n                if (disabled) {\n                    this.filterInput.style.display = \"none\";\n                    this.adapter.Enable($(this.selectedPanel), false);\n                } else {\n                    this.filterInput.style.display = \"inline-block\";\n                    this.adapter.Enable($(this.selectedPanel), true);\n                    \n                    $selectedPanel.click((event) => {\n                        if (event.target.nodeName != \"INPUT\")\n                            $(this.filterInput).val('').focus();\n                        if (this.hasItems)\n                            if (this.adapter.FilterClick(event))\n                                this.showDropDown();\n                    });\n    \n                    $dropDownMenu.click((event) => {\n                        event.stopPropagation();\n                    });\n    \n                    $dropDownMenu.on(\"mouseover\", () => {\n                        this.resetSelectDropDownMenu();\n                    });\n    \n                    if (this.options.doManageFocus)\n                    {\n                        $filterInput.focusin(() => {\n                            this.adapter.Focus($selectedPanel, true);\n                        });\n    \n                        $filterInput.focusout(() => {\n                            if (!this.skipFocusout) {\n                                this.adapter.Focus($selectedPanel, false);\n                            }\n                        });\n    \n                        $container.mousedown(() => {\n                            this.skipFocusout = true;\n                        });\n    \n                        $(window.document).mouseup(() => {\n                            this.skipFocusout = false;\n                        });\n                    }\n    \n                    $(window.document).mouseup((event) => {\n                        if (!(this.container === event.target || $.contains(this.container, event.target))) {\n                            this.closeDropDown();\n                        }\n                    });\n                }\n            });\n\n            $filterInput.on(\"keydown\", (event) => {\n                if (event.which == 38) {\n                    event.preventDefault();\n                    this.keydownArrow(false);\n                }\n                else if (event.which == 40) {\n                    event.preventDefault()\n                    this.keydownArrow(true);\n                }\n                else if (event.which == 13) {\n                    event.preventDefault();\n                }\n                else if (event.which == 9) {\n                    if (this.filterInput.value) {\n                        event.preventDefault();\n                    }\n                    else {\n                        this.closeDropDown();\n                    }\n                }\n                else {\n                    if (event.which == 8) {\n                        // detect that backspace is at start of input field (this will be used at keydown)\n                        this.backspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\n                    }\n                    this.resetSelectDropDownMenu();\n                }\n            });\n\n            $filterInput.on(\"keyup\", (event) => {\n                if (event.which == 13 || event.which == 9 ) {\n                    if (this.selectedDropDownItem) {\n                        let $selectedDropDownItem = $(this.selectedDropDownItem);\n                        let toggleItem =  $selectedDropDownItem.data(\"option-toggle\");\n                        toggleItem();\n                        this.closeDropDown();\n                    } else {\n                        let text = this.filterInput.value.trim().toLowerCase();\n                        let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\n                        let dropDownItem = null;\n                        for (let i = 0; i < dropDownItems.length; ++i) {\n                            let it = dropDownItems[i];\n                            if (it.textContent.trim().toLowerCase() == text)\n                            {\n                                dropDownItem=it;\n                                break;\n                            }\n                        }\n                        if (dropDownItem) {\n                            let $dropDownItem = $(dropDownItem);\n                            let isSelected = $dropDownItem.data(\"option-selected\");\n                            if (!isSelected){\n                                let toggle = $dropDownItem.data(\"option-toggle\");\n                                toggle();\n                            }\n                            this.clearFilterInput(true);\n                        }\n                    }\n                } else if (event.which == 8) {\n                    if (this.filterInput.selectionEnd == 0 && this.filterInput.selectionStart == 0 && this.backspaceAtStartPoint) {\n                        let $penult = $(this.selectedPanel).find(\"LI:last\").prev();\n                        if ($penult.length){\n                            let removeItem = $penult.data(\"option-remove\");\n                            removeItem();\n                        }\n                    }\n                    this.backspaceAtStartPoint = null;\n                    //if ($dropDownMenu.is(':hidden'))\n                    this.updateDropDownPosition(false);\n                } else if (event.which == 27) { // escape\n                    this.closeDropDown();\n                }\n            });\n\n            // Set on change for filter input\n            $filterInput.on('input', () => { \n                this.adoptFilterInputLength();\n                this.filterDropDownMenu();\n                if (this.hasItems) {\n                    this.updateDropDownPosition(false); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\n                    this.showDropDown();\n                } else {\n                    this.hideDropDown();\n                }\n            });\n        }\n    }\n\n    function jQueryInterface(options) {\n        return this.each(function () {\n            let data = $(this).data(dataKey)\n\n            if (!data) {\n                if (/dispose|hide/.test(options)) {\n                    return;\n                }\n                const optionsObject = (typeof options === 'object')?options:null;\n                data = new Plugin(this, optionsObject);\n                $(this).data(dataKey, data);\n            }\n\n            if (typeof options === 'string') {\n                let methodName = options;\n                if (typeof data[methodName] === 'undefined') {\n                    throw new TypeError(`No method named \"${methodName}\"`)\n                }\n                data[methodName]()\n            }\n        })\n    }\n\n    $.fn[pluginName] = jQueryInterface;\n\n    // in case of mulitple $(this) it will return 1st element plugin instance\n    $.fn[pluginName.charAt(0).toUpperCase() + pluginName.slice(1)] = function () {\n        return $(this).data(\"plugin_\" + pluginName);\n    };\n\n    $.fn[pluginName].Constructor = Plugin;\n\n    $.fn[pluginName].noConflict = function () {\n        $.fn[pluginName] = JQUERY_NO_CONFLICT\n        return jQueryInterface;\n    }\n    return Plugin;\n})(window, $, Popper);\n\nexport default BsMultiSelect;\n"]}