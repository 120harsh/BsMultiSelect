{"version":3,"sources":["../../js/src/MultiSelect.js","../../js/src/Tools.js","../../js/src/Bs4StylingMethodCss.js","../../js/src/Bs4StylingMethodJs.js","../../js/src/Bs4Styling.js","../../js/src/Bs4SelectedItemContent.js","../../js/src/Bs4DropDownItemContent.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js","../../js/src/OptionsAdapters.js","../../js/src/LabelAdapter.js"],"names":["removeElement","e","parentNode","removeChild","filterMultiSelectData","MultiSelectData","isFiltered","visibleIndex","visible","dropDownMenuItemElement","style","display","MultiSelect","optionsAdapter","styling","selectedItemContent","dropDownItemContent","labelAdapter","createStylingComposite","configuration","onDispose","window","Popper","TypeError","this","container","isDisposed","document","popper","visibleCount","selectedPanel","filterInputItem","filterInput","dropDownMenu","stylingComposite","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","isComponentDisabled","filterInputItemOffsetLeft","resetMultiSelectDataList","skipFocusout","hoveredMultiSelectData","hoveredMultiSelectDataIndex","MultiSelectDataList","MultiSelectDataSelectedTail","visibleMultiSelectDataList","getVisibleMultiSelectDataList","removeSelectedTail","toggle","updateDropDownLocation","force","offsetLeft","update","hideDropDown","candidateToHoveredMultiSelectData","resetCandidateToHoveredMultiSelectData","console","log","removeEventListener","showDropDown","_this","inShowDropDown","setTimeout","addEventListener","hoverInInternal","index","HoverIn","resetDropDownMenuHover","HoverOut","resetFilterAndHideDropDown","value","processEmptyInput","removeSelectedFromList","selectedPrev","selectedNext","insertDropDownItem","insertToDropDownMenu","isSelected","isOptionDisabled","onDropDownMenuItemElementMouseover","_this2","processCandidateToHovered","createElement","onDropDownMenuItemElementMouseleave","option","DropDownItemContent","DisposeDropDownMenuItemElement","setDropDownItemContentDisabled","disabledStyle","disable","onSelected","focus","setPreventDefaultMultiSelectEvent","event","preventDefaultMultiSelectEvent","createSelectedItem","selectedItemElement","removeSelectedItem","selected","excludedFromSearch","triggerChange","select","SelectedItemContent","dispose","isDisabled","insertBefore","removeDropDownMenuItemElement","keyDownArrowDown","keyDownArrow","keyDownArrowUp","down","length","newIndex","i","multiSelectData","isHidden","resetFilterDropDownMenu","Update","UpdateIsValid","getIsValid","getIsInvalid","UpdateSize","UpdateDisabled","UpdateOption","_this3","searchText","text","toLowerCase","trim","appendChild","UpdateData","updateDataImpl","createDropDownItems","options","_this4","getOptions","disabled","hidden","remove","push","readyState","createDropDownItemsHandler","Dispose","onFilterInputFocusIn","onFilterInputFocusOut","onfilterInputKeyDown","onFilterInputKeyUp","onFilterInputInput","destroy","iterateAll","_this5","getDisabled","Disable","Enable","init","s","_this6","flexWrap","listStyleType","setAttribute","width","border","padding","outline","backgroundColor","skipContainerMousedownEvent","target","contains","Init","afterContainerFilled","placement","modifiers","preventOverflow","enabled","hide","flip","FocusIn","FocusOut","indexOf","which","preventDefault","fullMatchMultiSelectData","filterInputValue","list","j","filterDropDownMenu","ExtendIfUndefined","destination","source","property","undefined","bs4StylingMethodCssDefaults","selectedPanelFocusClass","selectedPanelDisabledClass","dropDownItemDisabledClass","defSelectedPanelStyle","margin-bottom","height","bs4StylingMethodJsDefaults","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","bs4StylingDefaults","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4StylingMethodCssdefaults","selectedItemContentDisabledClass","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","selectedItemContentDisabledOpacity","bs4SelectedItemContentDefaults","dropdDownLabelDisabledColor","$","bs4DropDownItemContentDefaults","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","each","$e","instance","data","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","settings","extend","preBuildConfiguration","trigger","$element","eventName","firstChild","createInputId","id","label","$formGroup","closest","$label","find","get","getAttribute","selectElement","getElementsByTagName","nextSibling","classList","OptionsAdapterElement","name","backupedFor","stylingMethod","newId","useCss","adapter","$selectedPanel","removeClass","addClass","OnInit","composite","css","$filterInput","hasClass","$container","$dropDownMenu","$filterInputItem","isValid","isInvalid","dropDownItem","selectedItemContentStylingMethod","disableSelectedItemContent","$content","createSelectedItemContent","$selectedItem","$button","selectedItem","optionItem","preventDefaultMultiSelect","appendTo","on","jqEvent","originalEvent","prop","unbind","bs4DropDownItemContent","dropDownItemContentStylingMethod","$checkBox","$checkBoxLabel","isDisbaled","$dropDownItem","$dropDownItemContent","multiSelect","postBuildConfiguration"],"mappings":";;;;;qPAKA,SAASA,EAAcC,GAAIA,EAAEC,WAAWC,YAAYF,GAEpD,SAASG,EAAsBC,EAAiBC,EAAYC,GACxDF,EAAgBG,QAAUF,EAC1BD,EAAgBE,aAAeA,EAC/BF,EAAgBI,wBAAwBC,MAAMC,QAAUL,EAAa,QAAS,qGAoC5EM,aACF,SAAAA,EAAYC,EAAgBC,EACxBC,EAAqBC,EACrBC,EAAcC,EACdC,EAAeC,EAAWC,GAC1B,GAAsB,oBAAXC,EACP,MAAM,IAAIC,UAAU,yEAIxBC,KAAKX,eAAiBA,EACtBW,KAAKC,UAAYZ,EAAeY,UAChCD,KAAKV,QAAUA,EACfU,KAAKT,oBAAsBA,EAC3BS,KAAKR,oBAAsBA,EAC3BQ,KAAKP,aAAeA,EACpBO,KAAKN,uBAAyBA,EAC9BM,KAAKL,cAAgBA,EACrBK,KAAKJ,UAAYA,EACjBI,KAAKE,YAAa,EAClBF,KAAKH,OAASA,EACdG,KAAKG,SAAWN,EAAOM,SAEvBH,KAAKI,OAAS,KAEdJ,KAAKK,aAAa,GAElBL,KAAKM,cAAgB,KACrBN,KAAKO,gBAAkB,KACvBP,KAAKQ,YAAc,KACnBR,KAAKS,aAAe,KAEpBT,KAAKU,iBAAmB,KAGxBV,KAAKW,mBAAsB,KAC3BX,KAAKY,gBAAkB,KACvBZ,KAAKa,mBAAqB,KAC1Bb,KAAKc,iBAAmB,KAGxBd,KAAKe,oBAAsB,KAC3Bf,KAAKgB,0BAA4B,KAEjChB,KAAKiB,2BACLjB,KAAKkB,cAAe,EACpBlB,KAAKmB,uBAAyB,KAC9BnB,KAAKoB,4BAA8B,gCAIvCH,yBAAA,WACIjB,KAAKqB,oBAAsB,GAC3BrB,KAAKsB,4BAA8B,KACnCtB,KAAKuB,2BAA6B,QAGtCC,8BAAA,WACI,OAAIxB,KAAKuB,2BACEvB,KAAKuB,2BAELvB,KAAKqB,uBAGpBI,mBAAA,WACQzB,KAAKsB,6BACLtB,KAAKsB,4BAA4BI,SAErC1B,KAAK2B,wBAAuB,MAGhCA,uBAAA,SAAuBC,GACnB,IAAIC,EAAa7B,KAAKO,gBAAgBsB,YAClCD,GAAS5B,KAAKgB,2BAA2Ba,IACzC7B,KAAKI,OAAO0B,SACZ9B,KAAKgB,0BAA0Ba,MAIvCE,aAAA,WACQ/B,KAAKgC,mCACLhC,KAAKiC,yCAE8B,QAAnCjC,KAAKS,aAAavB,MAAMC,UAExB+C,QAAQC,IAAI,WACZnC,KAAKS,aAAavB,MAAMC,QAAU,OAElCa,KAAKC,UAAUmC,oBAAoB,YAAapC,KAAKa,oBACrDb,KAAKG,SAASiC,oBAAoB,UAAWpC,KAAKY,iBAClDZ,KAAKG,SAASiC,oBAAoB,UAAWpC,KAAKc,sBAM1DuB,aAAA,WAAe,IAAAC,EAAAtC,KAC4B,SAAnCA,KAAKS,aAAavB,MAAMC,UAExBa,KAAKuC,gBAAiB,EACtBC,WAAY,WACRF,EAAKC,eAAiB,MACvB,GACHvC,KAAKS,aAAavB,MAAMC,QAAU,QAElCa,KAAKC,UAAUwC,iBAAiB,YAAazC,KAAKa,oBAClDb,KAAKG,SAASsC,iBAAiB,UAAWzC,KAAKY,iBAC/CZ,KAAKG,SAASsC,iBAAiB,UAAWzC,KAAKc,sBAMvD4B,gBAAA,SAAgBC,GACZ3C,KAAKoB,4BAA8BuB,EACnC3C,KAAKmB,uBAAyBnB,KAAKwB,gCAAgCmB,GACnE3C,KAAKV,QAAQsD,QAAQ5C,KAAKmB,uBAAuBlC,4BAGrD4D,uBAAA,WACQ7C,KAAKmB,yBACLnB,KAAKV,QAAQwD,SAAS9C,KAAKmB,uBAAuBlC,yBAClDe,KAAKmB,uBAAyB,KAC9BnB,KAAKoB,4BAA8B,SAI3C2B,2BAAA,WAEQ/C,KAAKQ,YAAYwC,QACjBhD,KAAKQ,YAAYwC,MAAQ,GACzBhD,KAAKiD,qBAQTjD,KAAK+B,kBAGTmB,uBAAA,SAAuBrE,GACfA,EAAgBsE,eACftE,EAAgBsE,aAAcC,aAAevE,EAAgBuE,cAE9DvE,EAAgBuE,eAChBvE,EAAgBuE,aAAcD,aAAetE,EAAgBsE,cAE7DnD,KAAKsB,6BAA+BzC,IACpCmB,KAAKsB,4BAA8BzC,EAAgBsE,cAEvDtE,EAAgBuE,aAAa,KAC7BvE,EAAgBsE,aAAa,QAGjCE,mBAAA,SAAmBxE,EAAiByE,EAAsBC,EAAYC,GAQzB,SAArCC,IAEKC,EAAKnB,gBAcNmB,EAAK1B,kCAAoCnD,EACzCI,EAAwBwD,iBAAiB,YAAaiB,EAAKC,2BAC3D1E,EAAwBwD,iBAAiB,YAAaiB,EAAKC,4BAbvDD,EAAKvC,wBAAwBtC,IAK7B6E,EAAKb,yBACLa,EAAKhB,gBAAgB7D,EAAgBE,eAnBmC,IAAA2E,EAAA1D,KAChFf,EAA0Be,KAAKG,SAASyD,cAAc,MA6B1D3E,EAAwBwD,iBAAiB,YAAagB,GAIZ,SAAtCI,IAAsC,OAAMH,EAAKb,yBACrD5D,EAAwBwD,iBAAiB,aAAcoB,GAGvDP,EAAqBrE,GAErB,IAAIO,EAAsBQ,KAAKR,oBAAoBP,EAAyBJ,EAAgBiF,QAC5FjF,EAAgBI,wBAA0BA,EAC1CJ,EAAgBkF,oBAAsBvE,EAEtCX,EAAgBmF,+BAAiC,WAC7C/E,EAAwBmD,oBAAoB,YAAcqB,GAC1DxE,EAAwBmD,oBAAoB,aAAcyB,IAGzB,SAAjCI,EAAkCzE,EAAsB+D,GACxD/D,EAAoB0E,eAAc,GAElC1E,EAAoB2E,SAASZ,GAQ7BC,GACAS,EAA+BzE,EAAqB+D,GAMxD/D,EAAoB4E,WAAW,WAC3BvF,EAAgB6C,SAChBgC,EAAKlD,YAAY6D,UAImB,SAApCC,EAAqCC,GACjCb,EAAKc,+BAAiCD,EAIrB,SAArBE,IACA,IAAIC,EAAsBhB,EAAKvD,SAASyD,cAAc,MAQ7B,SAArBe,IACA9F,EAAgBiF,OAAOc,UAAW,GAClC/F,EAAgBgG,mBAAqBrB,IAGjCS,EAA+BzE,GAAqB,GACpDX,EAAgB6C,OAAS,cAIzB7C,EAAgB6C,OAAS,WACrB+C,IACAf,EAAKrE,eAAeyF,iBAG5BtF,EAAoBuF,QAAO,GAC3BvG,EAAckG,GACd7F,EAAgBmG,oBAAoBC,UACpCpG,EAAgBmG,oBAAoB,KACpCnG,EAAgB6F,oBAAoB,KAEpChB,EAAKR,uBAAuBrE,GAC5B6E,EAAKrE,eAAeyF,gBAgCV,SAAVX,EAAWe,GAAD,OACVrG,EAAgBmG,oBAAoBb,QAAQe,GA9DhDrG,EAAgB6F,oBAAsBA,EAClChB,EAAKpC,+BACLoC,EAAKpC,4BAA4B8B,aAAevE,GAChCsE,aAAeO,EAAKpC,8BAExCoC,EAAKpC,4BAA8BzC,GAkDnBmG,oBAAsBtB,EAAKnE,oBACvCmF,EACA7F,EAAgBiF,OARY,WAC5BtB,WAAY,WALZmC,IACAjB,EAAKX,8BAMF,IAOHuB,GAIJH,EAAQT,EAAK3C,qBAEblC,EAAgBiF,OAAOc,UAAW,EAClC/F,EAAgBgG,oBAAqB,EAErChG,EAAgBsF,QAAUA,EAC1BT,EAAKpD,cAAc6E,aAAaT,EAAqBhB,EAAKnD,iBAG1D1B,EAAgB6C,OAAS,WAAA,OAAMiD,KAC/BnF,EAAoBuF,QAAO,GAM3BxB,EAEAkB,KAIA5F,EAAgBgG,mBAAsBrB,EAElC3E,EAAgB6C,OADhB8B,EACyB,aAEA,WACrBiB,IACAf,EAAKrE,eAAeyF,kBAGhCjG,EAAgBuG,8BAAgC,WAC5C5G,EAAcS,GAC2B,MAArCJ,EAAgB6F,qBAChBlG,EAAcK,EAAgB6F,yBAI1CW,iBAAA,WACIrF,KAAKsF,cAAa,MAEtBC,eAAA,WACIvF,KAAKsF,cAAa,MAEtBA,aAAA,SAAaE,GACT,IAAIjE,EAA6BvB,KAAKwB,gCAClCiE,EAASlE,EAA2BkE,OACpCC,EAAS,KACb,GAAa,EAATD,EACA,GAAID,EAEA,IADA,IAAIG,EAAsC,MAAlC3F,KAAKoB,4BAAkC,EAAEpB,KAAKoB,4BAA4B,EAC5EuE,EAAEF,GAAO,CACX,GAAIlE,EAA2BoE,GAAG3G,QAAQ,CACtC0G,EAASC,EACT,MAEJA,SAIJ,IADA,IAAIA,EAAsC,MAAlC3F,KAAKoB,4BAAkCqE,EAAO,EAAEzF,KAAKoB,4BAA4B,EAChF,GAAHuE,GAAK,CACP,GAAIpE,EAA2BoE,GAAG3G,QAAQ,CACtC0G,EAASC,EACT,MAEJA,IAKE,MAAVD,IAEI1F,KAAKmB,wBACLnB,KAAKV,QAAQwD,SAAS9C,KAAKmB,uBAAuBlC,yBACtDe,KAAK2B,wBAAuB,GAC5B3B,KAAKqC,eACLrC,KAAK0C,gBAAgBgD,OAI7BzC,kBAAA,WACIjD,KAAKQ,YAAYiF,OAAO,MA7ZhC,SAAiCpE,GAC7B,IAAI,IAAIsE,EAAE,EAAGA,EAAEtE,EAAoBoE,OAAQE,IAC3C,CACI,IAAIC,EAAkBvE,EAAoBsE,GACpCC,EAAgBC,UAElBjH,EAAsBgH,GAAiB,EAAMD,IAwZjDG,CAAwB9F,KAAKqB,qBAC7BrB,KAAKuB,2BAA6B,QAGtCwE,OAAA,WACI/F,KAAKV,QAAQ0G,cAAchG,KAAKU,iBAAkBV,KAAKX,eAAe4G,aAAcjG,KAAKX,eAAe6G,gBACxGlG,KAAKmG,aACLnG,KAAKoG,oBAGTC,aAAA,SAAa1D,GAAM,IAAA2D,EAAAtG,KACX4F,EAAkB5F,KAAKqB,oBAAoBsB,GAC3CmB,EAAS8B,EAAgB9B,OAC7B8B,EAAgBW,WAAazC,EAAO0C,KAAKC,cAAcC,OACnDd,EAAgBC,UAAY/B,EAAO+B,UAEnCD,EAAgBC,SAAS/B,EAAO+B,SAC5BD,EAAgBC,SAChB7F,KAAKqD,mBAAmBuC,EAAiB,SAACnH,GAAD,OAAK6H,EAAK7F,aAAakG,YAAYlI,IAAIqF,EAAOP,WAAYO,EAAOoB,YAE1GU,EAAgBR,kCAIhBQ,EAAgBrC,YAAcO,EAAOP,aAErCqC,EAAgBrC,WAAWO,EAAOP,WAC9BqC,EAAgBrC,YASpBqC,EAAgBV,YAAcpB,EAAOoB,aAErCU,EAAgBV,WAAWpB,EAAOoB,WAC9BU,EAAgBV,gBAahC0B,WAAA,WAEI5G,KAAK+C,6BAEL,IAAI,IAAI4C,EAAE,EAAGA,EAAE3F,KAAKqB,oBAAoBoE,OAAQE,IAChD,CACI,IAAIC,EAAkB5F,KAAKqB,oBAAoBsE,GAC3CC,EAAgBR,+BAChBQ,EAAgBR,gCAExBpF,KAAKiB,2BAGLjB,KAAK6G,oBAGTA,eAAA,WAC8B,SAAtBC,IAGA,IAFA,IAAIC,EAAUC,EAAK3H,eAAe4H,aAE1BtB,EAAI,EAAGA,EAAEoB,EAAQtB,OAAQE,IAAK,CAClC,IAAI7B,EAASiD,EAAQpB,GAEjBT,EAAapB,EAAOoD,SACpBrB,EAAa/B,EAAOqD,OACpB5D,EAAaO,EAAOc,SAEpB/F,EAAkB,CAClB0H,WAAYzC,EAAO0C,KAAKC,cAAcC,OACtC7B,mBAAoBtB,GAAc2B,GAAcW,EAChD/B,OAAQA,EACR+B,SAAUA,EACV5G,wBAAyB,KACzBO,oBAAqB,KACrB2D,aAAc,KACdC,aAAc,KACdpE,SAAS,EACT0C,OAAQ,KACRgD,oBAAqB,KACrB0C,OAAQ,KACRjD,QAAS,KACTiB,8BAA+B,MAGnC4B,EAAK3F,oBAAoBgG,KAAKxI,GACzBgH,IACDhH,EAAgBG,SAAU,EAC1BH,EAAgBE,aAAa4G,EAC7BqB,EAAK3D,mBAAmBxE,EAAiB,SAACJ,GAAD,OAAKuI,EAAKvG,aAAakG,YAAYlI,IAAI8E,EAAY2B,IAGpG8B,EAAKrF,wBAAuB,GAnCpB,IAAAqF,EAAAhH,KAuCZ,GAA2B,WAAvBG,SAASmH,WACTR,QACG,CAKH3G,SAASsC,iBAAiB,mBAJO,SAA7B8E,IACAT,IACA3G,SAASiC,oBAAoB,mBAAoBmF,SAM7DC,QAAA,WACIxH,KAAKE,YAAa,EACdF,KAAKJ,WACLI,KAAKJ,YAITI,KAAK+B,eAEL/B,KAAKM,cAAc8B,oBAAoB,QAASpC,KAAKW,oBACrDX,KAAKQ,YAAY4B,oBAAoB,UAAWpC,KAAKyH,sBACrDzH,KAAKQ,YAAY4B,oBAAoB,WAAYpC,KAAK0H,uBACtD1H,KAAKQ,YAAY4B,oBAAoB,UAAWpC,KAAK2H,sBACrD3H,KAAKQ,YAAY4B,oBAAoB,QAASpC,KAAK4H,oBACnD5H,KAAKQ,YAAY4B,oBAAoB,QAASpC,KAAK6H,oBAEnD7H,KAAKP,aAAawF,UAGdjF,KAAKI,QACLJ,KAAKI,OAAO0H,UAGZ9H,KAAKX,eAAe4F,SACpBjF,KAAKX,eAAe4F,UAGxB,IAAI,IAAIU,EAAE,EAAGA,EAAE3F,KAAKqB,oBAAoBoE,OAAQE,IAChD,CACI,IAAIC,EAAkB5F,KAAKqB,oBAAoBsE,GAC3CC,EAAgB5B,gCAChB4B,EAAgB5B,iCAEhB4B,EAAgBZ,qBAChBY,EAAgBZ,oBAAoBC,UACpCW,EAAgB7B,qBAChB6B,EAAgB7B,oBAAoBkB,cAgBhDkB,WAAA,WACQnG,KAAKV,QAAQ6G,YACbnG,KAAKV,QAAQ6G,WAAWnG,KAAKU,qBAGrC0F,eAAA,WAEqB,SAAb2B,EAAc7C,GAEd,IADA,IAAIS,EAAIqC,EAAK1G,4BACPqE,GACFA,EAAExB,QAAQe,GACVS,EAAIA,EAAExC,aANF,IAAA6E,EAAAhI,KACRe,EAAsBf,KAAKX,eAAe4I,cAQ1CjI,KAAKe,sBAAsBA,IACvBA,GACAf,KAAKQ,YAAYtB,MAAMC,QAAU,OACjCa,KAAKV,QAAQ4I,QAAQlI,KAAKU,kBAC1BqH,GAAW,GAEX/H,KAAKM,cAAc8B,oBAAoB,QAASpC,KAAKW,sBAErDX,KAAKQ,YAAYtB,MAAMC,QAAU,eACjCa,KAAKV,QAAQ6I,OAAOnI,KAAKU,kBACzBqH,GAAW,GAEX/H,KAAKM,cAAcmC,iBAAiB,QAASzC,KAAKW,qBAEtDX,KAAKe,oBAAoBA,MAIjCkB,uCAAA,WACIjC,KAAKgC,kCAAkC/C,wBAAwBmD,oBAAoB,YAAapC,KAAK2D,2BACrG3D,KAAKgC,kCAAkC/C,wBAAwBmD,oBAAoB,YAAapC,KAAK2D,2BACrG3D,KAAKgC,kCAAoC,QAG7CoG,KAAA,WAAO,IAznBuBC,EACFA,EAwnBrBC,EAAAtI,KACCG,EAAWH,KAAKG,SAChBF,EAAYD,KAAKX,eAAeY,UACpCD,KAAKM,cAAgBH,EAASyD,cAAc,OA5nBlByE,EA6nBDrI,KAAKM,cAAcpB,OA7nBZC,QAAQ,OAAQkJ,EAAEE,SAAS,OAAQF,EAAEG,cAAc,OA8nBnFvI,EAAU0G,YAAY3G,KAAKM,eAE3BN,KAAKO,gBAAkBJ,EAASyD,cAAc,MAC9C5D,KAAKM,cAAcqG,YAAY3G,KAAKO,iBAEpCP,KAAKQ,YAAcL,EAASyD,cAAc,SAC1C5D,KAAKQ,YAAYiI,aAAa,OAAO,UACrCzI,KAAKQ,YAAYiI,aAAa,eAAe,QApoBrBJ,EAsoBDrI,KAAKQ,YAAYtB,OAtoBVwJ,MAAM,MAAOL,EAAEM,OAAO,IAAKN,EAAEO,QAAQ,IAAKP,EAAEQ,QAAQ,OAAQR,EAAES,gBAAgB,cAuoB5G9I,KAAKO,gBAAgBoG,YAAY3G,KAAKQ,aAEtCR,KAAKS,aAAeN,EAASyD,cAAc,MAC3C5D,KAAKS,aAAavB,MAAMC,QAAQ,OAChCc,EAAU0G,YAAY3G,KAAKS,cAGHT,KAAKS,aAAavB,MA7oBXsJ,cAAc,OAgpB7CxI,KAAKa,mBAAqB,WACtByH,EAAKpH,cAAe,EACpBoH,EAAKS,4BAA8BxE,OAGvCvE,KAAK2D,0BAA4B,WACzB2E,EAAKnH,wBAAwBmH,EAAKtG,oCAElCsG,EAAKzF,yBACLyF,EAAK5F,gBAAgB4F,EAAKtG,kCAAkCjD,eAEhEuJ,EAAKrG,0CAMTjC,KAAKY,gBAAkB,WACnB0H,EAAKpH,cAAe,GAGxBlB,KAAKc,iBAAmB,SAAAyD,GACdtE,IAAcsE,EAAMyE,QAAU/I,EAAUgJ,SAAS1E,EAAMyE,SACzDV,EAAKvF,8BAIb/C,KAAKW,mBAAqB,SAAA4D,GAClBA,EAAMyE,QAAUV,EAAK9H,cAErB8H,EAAK9H,YAAYwC,MAAM,GACvBsF,EAAK9H,YAAY6D,SAE6B,EAA9CiE,EAAK9G,gCAAgCiE,QAAc6C,EAAK9D,gCAAkCD,IAC1F+D,EAAK3G,wBAAuB,GAC5B2G,EAAKjG,gBAETiG,EAAK9D,+BAA+B,MAGxCxE,KAAKU,iBAAmBV,KAAKN,uBAAuBO,EAAWD,KAAKM,cAChEN,KAAKO,gBAAiBP,KAAKQ,YAAaR,KAAKS,cAEjDT,KAAKV,QAAQ4J,KAAKlJ,KAAKU,kBAEvBV,KAAKP,aAAa2I,KAAKpI,KAAKQ,aAExBR,KAAKX,eAAe8J,sBACpBnJ,KAAKX,eAAe8J,uBAExBnJ,KAAKI,OAAS,IAAIN,EAAOE,KAAKQ,YAAaR,KAAKS,aAAc,CAC1D2I,UAAW,eACXC,UAAW,CACPC,gBAAiB,CAACC,SAAQ,GAC1BC,KAAM,CAACD,SAAQ,GACfE,KAAM,CAACF,SAAQ,MAIvBvJ,KAAKV,QAAQ0G,cAAchG,KAAKU,iBAAkBV,KAAKX,eAAe4G,aAAcjG,KAAKX,eAAe6G,gBAExGlG,KAAKmG,aACLnG,KAAKoG,iBAWLpG,KAAKyH,qBAAuB,WACxBa,EAAKhJ,QAAQoK,QAAQpB,EAAK5H,mBAC9BV,KAAKQ,YAAYiC,iBAAiB,UAAWzC,KAAKyH,sBAElDzH,KAAK0H,sBAAwB,WACpBY,EAAKpH,cACNoH,EAAKhJ,QAAQqK,SAASrB,EAAK5H,mBAEnCV,KAAKQ,YAAYiC,iBAAiB,WAAYzC,KAAK0H,uBAEnD1H,KAAK2H,qBAAuB,SAACpD,IACkB,GAAnC,CAAC,GAAI,GAAI,IAAIqF,QAAQrF,EAAMsF,QAA6B,GAAftF,EAAMsF,OAAcvB,EAAK9H,YAAYwC,QAC9EuB,EAAMuF,iBAGS,IAAfvF,EAAMsF,MACNvB,EAAK/C,iBAEe,IAAfhB,EAAMsF,MACXvB,EAAKjD,mBAEe,GAAfd,EAAMsF,MACNvB,EAAK9H,YAAYwC,OAClBsF,EAAKvG,eAGW,GAAfwC,EAAMsF,QAINvB,EAAK9H,YAAYwC,OAElBsF,EAAK7G,uBAI8B,GAAvC,CAAC,GAAI,GAAI,GAAI,GAAGmI,QAAQrF,EAAMsF,QAC9BvB,EAAKzF,0BAEjB7C,KAAKQ,YAAYiC,iBAAiB,UAAWzC,KAAK2H,sBAElD3H,KAAK4H,mBAAqB,SAACrD,GAEvB,GAAmB,IAAfA,EAAMsF,OAA8B,GAAftF,EAAMsF,MACvBvB,EAAKnH,yBACLmH,EAAKnH,uBAAuBO,SAC5B4G,EAAKvF,mCAGR,GAAmB,IAAfwB,EAAMsF,MACXvB,EAAKvF,iCAGJ,CACD,IAAIyD,EAAO8B,EAAK9H,YAAYwC,MAAM0D,OAAOD,cACrClF,EAA6B+G,EAAK9G,gCACtC,GAAIgF,GAA6C,GAArCjF,EAA2BkE,OACvC,CACI,IAAIsE,EAA2BxI,EAA2B,GACtDwI,EAAyBxD,YAAcC,IAEvCuD,EAAyBrI,SAEzB4G,EAAK9H,YAAYwC,MAAQ,GACzBsF,EAAKrF,oBACLqF,EAAKzF,yBACLyF,EAAKvG,mBAMrB/B,KAAKQ,YAAYiC,iBAAiB,QAASzC,KAAK4H,oBAEhD5H,KAAK6H,mBAAqB,WAEtB,IAAIrH,EAAc8H,EAAK9H,YACnBwJ,EAAmBxJ,EAAYwC,MAC/BwD,EAAOwD,EAAiBtD,OAAOD,cACvB,IAARD,EACA8B,EAAKrF,qBAGLzC,EAAYtB,MAAMwJ,MAAgC,IAAxBsB,EAAiBvE,OAAa,EAAI,KAC5D6C,EAAK/G,2BAzxBrB,SAA4BF,EAAqBmF,GAG7C,IAFA,IAAIyD,EAAO,GACPC,EAAI,EACAvE,EAAE,EAAGA,EAAEtE,EAAoBoE,OAAQE,IAC3C,CACI,IAAIC,EAAkBvE,EAAoBsE,GACpCC,EAAgBC,WAEbD,EAAgBf,oBAAsBe,EAAgBW,WAAWqD,QAAQpD,GAAM,EAEhF5H,EAAsBgH,GAAiB,IAIvChH,EAAsBgH,GAAiB,EAAMsE,KAC7CD,EAAK5C,KAAMzB,KAIvB,OAAOqE,EAswBuCE,CAAmB7B,EAAKjH,oBAAqBmF,IAGnF8B,EAAK/F,gBAAiB,EACtBC,WAAY,WACP8F,EAAK/F,eAAiB,MACxB,GAEH+F,EAAKzF,yBAE8C,GAA/CyF,EAAK9G,gCAAgCiE,QACrC6C,EAAK5F,gBAAgB,GAGyB,EAA9C4F,EAAK9G,gCAAgCiE,QACrC6C,EAAK3G,wBAAuB,GAC5B2G,EAAKjG,gBAELiG,EAAKvG,gBAIb/B,KAAKQ,YAAYiC,iBAAiB,QAASzC,KAAK6H,oBAEhD7H,KAAK6G,uBCz0BN,SAASuD,EAAkBC,EAAaC,GAC3C,IAAK,IAAIC,KAAYD,OACaE,IAA1BH,EAAYE,KACZF,EAAYE,GAAYD,EAAOC,ICD3C,IAAME,EAA8B,CAChCC,wBAA0B,QAC1BC,2BAA4B,WAC5BC,0BAA2B,YCH/B,IAAMC,EAAwB,CAACC,gBAAiB,IAAKC,OAAU,QAEzDC,EAA6B,CAC/BC,0BAA2B,sBAC3BC,yBAA2B,uBAC3BC,yBAA2B,wBAC3BC,qCAAsC,UACtCC,8BAA+B,UAC/BC,4BAA6B,uCAC7BC,iCAAkC,uCAClCC,mCAAoC,uCACpCC,iBAAkB,WCVtB,IAAMC,EAAqB,CACvBC,eAAgB,8BAChBC,kBAAmB,gBACnBC,kBAAoB,OACpBC,uBAAwB,wBACxBC,mBAAoB,eACpBC,kBAAmB,QACnBC,8BAA+B,QAC/BC,qBAAsB,GACtBC,iBAAkB,ICVtB,IAAMC,EAA8B,CAChCC,iCAAkC,YAatC,IAAMC,EAAuB,CAACC,eAAgB,MAAOC,cAAe,SAC9DC,EAAmC,CAACC,YAAY,QAASF,cAAe,QACxExB,EAA6B,CAC/B2B,mCAAoC,OAkBxC,IAAMC,EAAiC,CACnCZ,kBAAmB,QACnBC,8BAA+B,SCrCnC,IAAMxB,GAA8B,CAChC4B,iCAAkC,YAetC,IAAMrB,GAA6B,CAC/B2B,mCAAoC,MACpCE,4BAA6B,WAYjC,ICjBKhN,GAAQiN,GDiBPC,GAAiC,CACnClB,kBAAoB,QClBnBhM,GAqHHA,OCpIF,SAA8BmN,EAAYC,EAAcH,GACpD,IAAMI,EAAYF,EAAWG,OAAO,GAC9BC,EAAiBF,EAAUzG,cACjC,GAAI2G,GAAkBF,EAClB,MAAM,IAAInN,UAAJ,gBAA8BiN,EAA9B,4CAEV,IAAMK,EAAmBD,EAAiBJ,EAAWM,MAAM,GACrDC,EAAyBT,EAAEU,GAAGH,GAC9BI,EAAO,iBAAoBT,EAEjC,SAASU,EAAa3G,GAClB,OAAO/G,KAAK2N,KAAM,WACd,IAAIC,EAAKd,EAAE9M,MACP6N,EAAWD,EAAGE,KAAKL,GACnBM,EAAkC,iBAAZhH,EAC1B,IAAK8G,EAAU,CACX,GAAIE,GAAgB,UAAUC,KAAKjH,GAC/B,OAIJ8G,EAAWZ,EAAajN,KAFkB,iBAAZ+G,EAAsBA,EAAQ,KAGxD,WACI6G,EAAGK,WAAWR,KAEtBG,EAAGE,KAAKL,EAASI,GAGrB,GAAIE,EAAc,CACd,IAAIG,EAAanH,EACjB,GAAoC,oBAAzB8G,EAASK,GAChB,MAAM,IAAInO,UAAJ,oBAAkCmO,EAAlC,KAEVL,EAASK,QAKrBpB,EAAEU,GAAGH,GAAoBK,EAGzBZ,EAAEU,GAAGR,GAAc,WACf,OAAOF,EAAE9M,MAAM8N,KAAKL,IAGxBX,EAAEU,GAAGH,GAAkBc,WAAa,WAEhC,OADArB,EAAEU,GAAGH,GAAoBE,EAClBG,GD/BPU,CAAqB,gBACjB,SAACC,EAASC,EAAU1O,GAChB,IAAID,EAAgBmN,GAAEyB,OAAO,GAAID,GAC7B3O,EAAc6O,uBACd7O,EAAc6O,sBAAsBH,EAAS1O,GAEjD,IEtBYM,EAAW8G,EAASkB,EAAahC,EAAYC,EAAcuI,EFsBnEC,EAAU5B,GAAEuB,GACZhP,EAAiB,KACrB,GAAIM,EAAcN,eACdA,EAAiBM,EAAcN,mBAEnC,CACI,IAAIoP,EAAU,SAASE,GACnBD,EAASD,QAAQE,IAErB,GAAIhP,EAAcoH,QE/BV9G,EFiCAoO,EEjCWtH,EFkCXpH,EAAcoH,QElCMkB,EFmCpBtI,EAAcsI,YEnCmBhC,EFoCjCtG,EAAcsG,WEpC+BC,EFqC7CvG,EAAcuG,aErC6CuI,EFsC3DA,EANJpP,EE/Bb,CACHY,UAAAA,EACAgH,WAFG,WAEU,OAAOF,GACpB9B,QAHG,WAIC,KAAOhF,EAAU2O,YAAY3O,EAAUtB,YAAYsB,EAAU2O,aAEjE9J,cANG,WAOC2J,EAAQ,uBAEZxG,YATG,WAUC,QAAOA,GAAYA,KAEvBhC,WAZG,WAaC,QAAOA,GAAWA,KAEtBC,aAfG,WAgBC,QAAOA,GAAaA,MFsBHvG,EAAckP,gBACflP,EAAckP,cAAc,WAAA,OAAOlP,EAAcgM,eAArB,qBAAwD0C,EAAQS,SAE9F,CACF,IAAKnP,EAAcoP,MACnB,CACI,IAAIC,EAAalC,GAAEuB,GAASY,QAAQ,eACpC,GAAyB,GAArBD,EAAWvJ,OAAa,CACxB,IAAIyJ,EAASF,EAAWG,KAAX,cAA8Bd,EAAQS,GAAtC,MACb,GAAkB,EAAdI,EAAOzJ,OACX,CACI,IAAIsJ,EAAQG,EAAOE,IAAI,GACXL,EAAMM,aAAa,QAClBhB,EAAQS,KACjBnP,EAAcoP,MAAQA,KAKtC1P,EEpCxB,SAA+BiQ,EAAeb,GAC1Ca,EAAcpQ,MAAMC,QAAQ,OAC5B,IAAIc,EAAYE,SAASyD,cAAc,OACvC,MAAO,CACH3D,UAAAA,EACAgH,WAFG,WAEU,OAAOqI,EAAcC,qBAAqB,WACvDtK,QAHG,WAIChF,EAAUvB,WAAWC,YAAYsB,IAErCkJ,qBANG,WAOCmG,EAAc5Q,WAAWyG,aAAalF,EAAWqP,EAAcE,cAEnE1K,cATG,WAUC2J,EAAQ,UACRA,EAAQ,uBAEZxG,YAbG,WAcC,OAAOqH,EAAcpI,UAEzBjB,WAhBG,WAiBC,OAAOqJ,EAAcG,UAAUxG,SAAS,aAE5C/C,aAnBG,WAoBC,OAAOoJ,EAAcG,UAAUxG,SAAS,gBFaXyG,CAAsBrB,EAASI,GAC3C9O,EAAckP,gBACflP,EAAckP,cAAc,WAAA,OAAOlP,EAAcgM,eAArB,qBAAyD0C,EAAQS,GAAIT,EAAQS,GAAGT,EAAQsB,MAAMlJ,cAA9F,SAIxC,IGhEMsI,EAAOF,EACrBe,ENcYC,EAAelQ,EAAemN,EDEtBnN,EDTCA,EKwDTF,GGhEEsP,EHgE0BpP,EAAcoP,MGhEjCF,EHgEwClP,EAAckP,cG/D3Ee,EAAc,KACX,CACHxH,KADG,SACE5H,GACD,GAAIuO,EAAO,CACPa,EAAcb,EAAMM,aAAa,OACjC,IAAIS,EAAQjB,IACZrO,EAAYiI,aAAa,KAAMqH,GAC/Bf,EAAMtG,aAAa,MAAMqH,KAGjC7K,QATG,WAUI2K,GACCb,EAAMtG,aAAa,MAAMmH,MHqDrBG,EAASpQ,EAAcoQ,OACvBzQ,EAAUK,EAAcL,QAC5B,IAAKK,EAAcqQ,QACnB,CACI,IAAIH,EAAgBlQ,EAAckQ,cAI1BA,EAHHA,IAEGE,GLhExB3F,EADyBzK,EKkEmCA,ELjE3B8K,GAE1B,CACHtC,OADG,SACI8H,GACHA,EAAeC,YAAYvQ,EAAcgL,6BAG7CzC,QALG,SAKK+H,GACJA,EAAeE,SAASxQ,EAAcgL,6BAG1CjB,QATG,SASKuG,GACJA,EAAeE,SAASxQ,EAAc+K,0BAG1Cf,SAbG,SAaMsG,GACLA,EAAeC,YAAYvQ,EAAc+K,6BCPjDN,EADwBzK,EI2DmCA,EJ1D1BqL,GAE1B,CACHoF,OADG,SACIC,GACHA,EAAUJ,eAAeK,IAAIzF,GAC7BwF,EAAUE,aAAaD,IAAI,QAAS3Q,EAAc8L,mBAGtDtF,WANG,SAMQ8J,GACHA,EAAeO,SAAS,mBACxBP,EAAeK,IAAI,aAAc3Q,EAAcuL,0BACxC+E,EAAeO,SAAS,mBAC/BP,EAAeK,IAAI,aAAc3Q,EAAcwL,0BAE/C8E,EAAeK,IAAI,aAAc3Q,EAAcsL,4BAIvD9C,OAhBG,SAgBI8H,GACHA,EAAeK,IAAI,mBAAoB,KAG3CpI,QApBG,SAoBK+H,GACJA,EAAeK,IAAI,mBAAoB3Q,EAAcyL,uCAGzD1B,QAxBG,SAwBKuG,GACAA,EAAeO,SAAS,YACxBP,EAAeK,IAAI,aAAc3Q,EAAc4L,kCACxC0E,EAAeO,SAAS,cAC/BP,EAAeK,IAAI,aAAc3Q,EAAc6L,oCAE/CyE,EACKK,IAAI,aAAc3Q,EAAc2L,6BAChCgF,IAAI,eAAgB3Q,EAAc0L,gCAI/C1B,SApCG,SAoCMsG,GACDA,EAAeK,IAAI,aAAc,IAAKA,IAAI,eAAgB,QC1CtDT,EG+DqBA,EH/DS/C,EG+DqBA,GH9DnE1C,EAD+BzK,EG+DqBA,EH9DnB+L,GG8DjBpM,EH5DT,CACH4J,KADG,SACEmH,GACDA,EAAUI,WAAWN,SAASxQ,EAAcgM,gBAC5C0E,EAAUJ,eAAeE,SAASxQ,EAAcoM,oBAChDsE,EAAUK,cAAcP,SAASxQ,EAAciM,mBAC/CyE,EAAUM,iBAAiBR,SAASxQ,EAAcuM,sBAClDmE,EAAUE,aAAaJ,SAASxQ,EAAcwM,kBAC1C0D,EAAcO,QACdP,EAAcO,OAAOC,IAG7BrK,cAXG,SAWWqK,EAAWO,EAASC,GAC1BD,GACAP,EAAUJ,eAAeE,SAAS,YAElCU,GACAR,EAAUJ,eAAeE,SAAS,eAG1ChK,WAnBG,SAmBQkK,GACJR,EAAc1J,YACd0J,EAAc1J,WAAWkK,EAAUJ,iBAG1C9H,OAxBG,SAwBIkI,GACHR,EAAc1H,OAAOkI,EAAUJ,iBAGnC/H,QA5BG,SA4BKmI,GACJR,EAAc3H,QAAQmI,EAAUJ,iBAGpCvG,QAhCG,SAgCK2G,GACJR,EAAcnG,QAAQ2G,EAAUJ,iBAGpCtG,SApCG,SAoCM0G,GACLR,EAAclG,SAAS0G,EAAUJ,iBAGrCrN,QAxCG,SAwCKkO,GACJhE,EAAEgE,GAAcX,SAASxQ,EAAcmM,yBAG3ChJ,SA5CG,SA4CMgO,GACLhE,EAAEgE,GAAcZ,YAAYvQ,EAAcmM,0BGkBtC,IFxCgB+D,EAAelQ,EAAemN,EAnBfnN,EAhBCA,EE2E5BJ,EAAsBI,EAAcJ,oBACxC,IAAKA,EAAoB,CACrB,IAAIwR,EAAmCpR,EAAcoR,iCAI7CA,EAHHA,IAEGhB,GF/ExB3F,EAD4CzK,EEiFoDA,EFhF/DyM,GAE1B,CACH4E,2BADG,SACwBC,GACvBA,EAASd,SAASxQ,EAAc0M,sCAYxCjC,EAD2CzK,EEmEoDA,EFlE9DqL,GAC1B,CACHgG,2BADG,SACwBC,GACvBA,EAASX,IAAI,UAAW3Q,EAAcgN,qCAG1CuE,0BALG,SAKuBC,EAAeC,GACrCD,EAAcb,IAAIhE,GACd8E,GACAA,EAAQd,IAAI7D,OASIoD,EEkDiCkB,EFlDHjE,EEkDoDA,GFjD1G1C,EADuCzK,EEkDoDA,EFjD1DiN,GEiDrBrN,EF/CL,SAAU8R,EAAcC,EAAY3M,EAAoB4M,GACvD,IAAIJ,EAAgBrE,EAAEuE,GACtBF,EAAchB,SAASxQ,EAAcqM,mBACrC,IAAIiF,EAAWnE,EAAC,WAAYtG,KAAK8K,EAAW9K,MAC5CyK,EAASO,SAASL,GACdG,EAAWpK,UACX2I,EAAcmB,2BAA2BC,GAC7C,IAAIG,EAAUtE,EAAE,2GAGXwD,IAAI,QAAS,QAAQkB,SAASL,GAC9BhB,SAASxQ,EAAcsM,+BACvBwF,GAAG,QAAS,SAACC,GAEN/M,IACA4M,EAA0BG,EAAQC,iBAK9C,OAFI9B,EAAcqB,2BACdrB,EAAcqB,0BAA0BC,EAAeC,GACpD,CACHjN,QADG,SACKe,GACJkM,EAAQQ,KAAK,WAAY1M,IAE7BD,QAJG,WAKCmM,EAAQS,YEyBhB,ID1DgBhC,EAAelQ,EAAemN,EAbfnN,EAjBCA,ECwF5BH,EAAsBG,EAAcmS,uBACxC,IAAKtS,EAAoB,CACrB,IAAIuS,EAAmCpS,EAAcoS,iCAEjDA,EADAhC,GD1FpB3F,EAD4CzK,EC4FgDA,ED3F3D8K,IAC1B,CACHvG,cADG,SACW8N,EAAWC,EAAgBC,GACjCA,EACAF,EAAU7B,SAASxQ,EAAciL,2BAEjCoH,EAAU9B,YAAYvQ,EAAciL,+BAWhDR,EAD2CzK,EC6EgDA,ED5E1DqL,IAC3B,CACF9G,cADE,SACY8N,EAAWC,EAAgBC,GACrCD,EAAe3B,IAAI,QAAS4B,EAAWvS,EAAckN,4BAA4B,OAS7DgD,ECiEiCkC,EDjEHjF,ECiEoDA,GDhE9G1C,EAD2CzK,ECiEoDA,EDhE9DoN,ICgEjBvN,ED/DT,SAASsR,EAAchN,GAC1B,IAAIqO,EAAgBrF,EAAEgE,GACtBqB,EAAchC,SAASxQ,EAAckM,mBACrC,IAAIuG,EAAsBtF,EAAC,4LAI3BsF,EAAqBZ,SAASV,GAC9B,IAAIkB,EAAYI,EAAqBjD,KAArB,0BACZ8C,EAAiBG,EAAqBjD,KAArB,SAuBrB,OAtBA8C,EAAezL,KAAK1C,EAAO0C,MAEjB,CACNzB,OADM,SACCxB,GAAayO,EAAUJ,KAAK,UAAWrO,IAE9CY,QAHM,SAGEe,GAAa8M,EAAUJ,KAAK,WAAY1M,IAChDhB,cAJM,SAIQgO,GAAarC,EAAc3L,cAAc8N,EAAWC,EAAgBC,IAElF9N,WANM,SAMK1C,GACPsQ,EAAUP,GAAG,SAAU/P,GACvByQ,EAAcV,GAAG,QAAS,SAAAlN,GAClBuM,IAAiBvM,EAAMyE,SAAU8D,EAAE7D,SAAS6H,EAAcvM,EAAMyE,SAChEtH,OAIZuD,QAdM,WAeF+M,EAAUH,SACVM,EAAcN,YCsCd,IAUIQ,EAAc,IAAIjT,EAClBC,EACAC,EACAC,EACAC,EACAC,EAfyB,SAASQ,EAAWK,EAAeC,EAAiBC,EAAaC,GAC1F,MAAO,CACHgQ,WAAW3D,GAAE7M,GACbgQ,eAAenD,GAAExM,GACjBqQ,iBAAiB7D,GAAEvM,GACnBgQ,aAAazD,GAAEtM,GACfkQ,cAAc5D,GAAErM,KAWpBd,EACAC,EACAC,IAMJ,OAJIF,EAAc2S,wBACd3S,EAAc2S,uBAAuBjE,EAASgE,GAElDA,EAAYjK,OACLiK,GAlHVvF,GAqHHA","sourcesContent":["import Popper from 'popper.js'\r\n\r\nfunction defSelectedPanelStyleSys(s) {s.display='flex'; s.flexWrap='wrap'; s.listStyleType='none'};  // remove bullets since this is ul\r\nfunction defFilterInputStyleSys(s) {s.width='2ch'; s.border='0'; s.padding='0'; s.outline='none'; s.backgroundColor='transparent' };\r\nfunction defDropDownMenuStyleSys(s) {s.listStyleType='none'}; // remove bullets since this is ul\r\nfunction removeElement(e) {e.parentNode.removeChild(e)}\r\n\r\nfunction filterMultiSelectData(MultiSelectData, isFiltered, visibleIndex) {\r\n    MultiSelectData.visible = isFiltered;\r\n    MultiSelectData.visibleIndex = visibleIndex;\r\n    MultiSelectData.dropDownMenuItemElement.style.display = isFiltered ? 'block': 'none';\r\n} \r\n\r\nfunction resetFilterDropDownMenu(MultiSelectDataList) {\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            filterMultiSelectData(multiSelectData, true, i);\r\n        }\r\n    }\r\n}\r\n\r\nfunction filterDropDownMenu(MultiSelectDataList, text) {\r\n    var list = [];\r\n    var j = 0;\r\n    for(let i=0; i<MultiSelectDataList.length; i++)\r\n    {\r\n        let multiSelectData = MultiSelectDataList[i];\r\n        if ( !multiSelectData.isHidden )\r\n        {\r\n            if ( multiSelectData.excludedFromSearch || multiSelectData.searchText.indexOf(text)<0 )\r\n            {\r\n                filterMultiSelectData(multiSelectData, false);\r\n            }\r\n            else \r\n            {\r\n                filterMultiSelectData(multiSelectData, true, j++);\r\n                list.push( multiSelectData );\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, styling, \r\n        selectedItemContent, dropDownItemContent, \r\n        labelAdapter, createStylingComposite,\r\n        configuration, onDispose, window) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n\r\n        // readonly\r\n        this.optionsAdapter = optionsAdapter;\r\n        this.container = optionsAdapter.container; // part of published api\r\n        this.styling = styling;\r\n        this.selectedItemContent = selectedItemContent;\r\n        this.dropDownItemContent = dropDownItemContent;\r\n        this.labelAdapter = labelAdapter;\r\n        this.createStylingComposite = createStylingComposite;\r\n        this.configuration = configuration;\r\n        this.onDispose = onDispose;\r\n        this.isDisposed = false;\r\n        this.window = window;\r\n        this.document = window.document;\r\n\r\n        this.popper = null;\r\n\r\n        this.visibleCount=10;\r\n\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n\r\n        this.stylingComposite = null;\r\n\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup = null;\r\n        this.containerMousedown = null;\r\n        this.documentMouseup2 = null;\r\n\r\n        // state\r\n        this.isComponentDisabled = null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        \r\n        this.resetMultiSelectDataList();\r\n        this.skipFocusout = false;\r\n        this.hoveredMultiSelectData = null;\r\n        this.hoveredMultiSelectDataIndex = null;\r\n        \r\n    }\r\n\r\n    resetMultiSelectDataList(){\r\n        this.MultiSelectDataList = [];\r\n        this.MultiSelectDataSelectedTail = null;\r\n        this.visibleMultiSelectDataList = null;\r\n    }\r\n\r\n    getVisibleMultiSelectDataList(){\r\n        if (this.visibleMultiSelectDataList)\r\n            return this.visibleMultiSelectDataList;\r\n        else\r\n            return this.MultiSelectDataList;\r\n    }\r\n\r\n    removeSelectedTail(){\r\n        if (this.MultiSelectDataSelectedTail){ \r\n            this.MultiSelectDataSelectedTail.toggle(); // always remove in this case\r\n        }\r\n        this.updateDropDownLocation(false);\r\n    }\r\n\r\n    updateDropDownLocation(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n\r\n    hideDropDown() {\r\n        if (this.candidateToHoveredMultiSelectData){\r\n            this.resetCandidateToHoveredMultiSelectData();\r\n        }\r\n        if (this.dropDownMenu.style.display != 'none')\r\n        {\r\n            console.log(\"removed\");\r\n            this.dropDownMenu.style.display = 'none';\r\n            // remove listeners that manages close dropdown on input's focusout and click outside container\r\n            this.container.removeEventListener(\"mousedown\", this.containerMousedown);\r\n            this.document.removeEventListener(\"mouseup\", this.documentMouseup);\r\n            this.document.removeEventListener(\"mouseup\", this.documentMouseup2);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    showDropDown() {\r\n        if (this.dropDownMenu.style.display != 'block')\r\n        {\r\n            this.inShowDropDown = true;\r\n            setTimeout( () => {  \r\n                this.inShowDropDown = null;\r\n            }, 0)\r\n            this.dropDownMenu.style.display = 'block';\r\n            // add listeners that manages close dropdown on input's focusout and click outside container\r\n            this.container.addEventListener(\"mousedown\", this.containerMousedown);\r\n            this.document.addEventListener(\"mouseup\", this.documentMouseup);\r\n            this.document.addEventListener(\"mouseup\", this.documentMouseup2);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    hoverInInternal(index){\r\n        this.hoveredMultiSelectDataIndex = index;\r\n        this.hoveredMultiSelectData = this.getVisibleMultiSelectDataList()[index];\r\n        this.styling.HoverIn(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n    }\r\n\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredMultiSelectData) {\r\n            this.styling.HoverOut(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n            this.hoveredMultiSelectData = null;\r\n            this.hoveredMultiSelectDataIndex = null;\r\n        }\r\n    }\r\n\r\n    resetFilterAndHideDropDown() {\r\n        //this.resetDropDownMenuHover();\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.processEmptyInput();\r\n\r\n            // this.resetDropDownMenuHover(); // TODO: second time resetDropDownMenuHover?\r\n        \r\n            // if (this.getVisibleMultiSelectDataList().length == 1) {\r\n            //     this.hoverInInternal(0)\r\n            // }\r\n        }\r\n        this.hideDropDown();\r\n    }\r\n    \r\n    removeSelectedFromList(MultiSelectData){\r\n        if (MultiSelectData.selectedPrev){\r\n            (MultiSelectData.selectedPrev).selectedNext = MultiSelectData.selectedNext;\r\n        }\r\n        if (MultiSelectData.selectedNext){\r\n           (MultiSelectData.selectedNext).selectedPrev = MultiSelectData.selectedPrev;\r\n        }\r\n        if (this.MultiSelectDataSelectedTail == MultiSelectData){\r\n            this.MultiSelectDataSelectedTail = MultiSelectData.selectedPrev;\r\n        }\r\n        MultiSelectData.selectedNext=null;\r\n        MultiSelectData.selectedPrev=null;\r\n    }\r\n\r\n    insertDropDownItem(MultiSelectData, insertToDropDownMenu, isSelected, isOptionDisabled) {\r\n        var dropDownMenuItemElement = this.document.createElement('LI');\r\n        \r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onDropDownMenuItemElementMouseover = () => \r\n        {\r\n            if (!this.inShowDropDown)\r\n            {\r\n                \r\n                if (this.hoveredMultiSelectData!=MultiSelectData)\r\n                {\r\n                    // mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually\r\n                    this.resetDropDownMenuHover(); \r\n                    this.hoverInInternal(MultiSelectData.visibleIndex);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.candidateToHoveredMultiSelectData = MultiSelectData;\r\n                dropDownMenuItemElement.addEventListener('mousemove', this.processCandidateToHovered);\r\n                dropDownMenuItemElement.addEventListener('mousedown', this.processCandidateToHovered);\r\n            }\r\n        }\r\n\r\n        dropDownMenuItemElement.addEventListener('mouseover', onDropDownMenuItemElementMouseover);\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onDropDownMenuItemElementMouseleave = () => this.resetDropDownMenuHover();\r\n        dropDownMenuItemElement.addEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n\r\n\r\n        insertToDropDownMenu(dropDownMenuItemElement);\r\n\r\n        let dropDownItemContent = this.dropDownItemContent(dropDownMenuItemElement, MultiSelectData.option); \r\n        MultiSelectData.dropDownMenuItemElement = dropDownMenuItemElement;\r\n        MultiSelectData.DropDownItemContent = dropDownItemContent;\r\n\r\n        MultiSelectData.DisposeDropDownMenuItemElement = ()=> {\r\n            dropDownMenuItemElement.removeEventListener('mouseover',  onDropDownMenuItemElementMouseover);\r\n            dropDownMenuItemElement.removeEventListener('mouseleave', onDropDownMenuItemElementMouseleave);\r\n        }\r\n\r\n        var setDropDownItemContentDisabled = (dropDownItemContent,  isSelected) => {\r\n            dropDownItemContent.disabledStyle(true);\r\n            // do not desable if selected! there should be possibility to unselect \"disabled\"\r\n            dropDownItemContent.disable(!isSelected);\r\n        }\r\n        \r\n        // var setEnabled = (dropDownItemContent) => {\r\n        //     dropDownItemContent.disabledStyle(false);\r\n        //     dropDownItemContent.disable(false);\r\n        // }\r\n\r\n        if (isOptionDisabled)\r\n            setDropDownItemContentDisabled(dropDownItemContent, isSelected )\r\n        // if (isSelected && isOptionDisabled) // do not desable if selected! there should be possibility to unselect \"disabled\"\r\n        //     dropDownItemContent.disabledStyle(true);\r\n        // else if (isOptionDisabled)\r\n        //     dropDownItemContent.disable(true);\r\n\r\n        dropDownItemContent.onSelected(() => {\r\n            MultiSelectData.toggle();\r\n            this.filterInput.focus();\r\n        });\r\n        // ------------------------------------------------------------------------------\r\n        \r\n        var setPreventDefaultMultiSelectEvent = (event)=>{\r\n                this.preventDefaultMultiSelectEvent = event;\r\n            }\r\n       \r\n        \r\n        var createSelectedItem = ()=>{\r\n            var selectedItemElement = this.document.createElement('LI');\r\n            MultiSelectData.selectedItemElement = selectedItemElement;\r\n            if (this.MultiSelectDataSelectedTail){\r\n                this.MultiSelectDataSelectedTail.selectedNext = MultiSelectData;\r\n                MultiSelectData.selectedPrev = this.MultiSelectDataSelectedTail;\r\n            }\r\n            this.MultiSelectDataSelectedTail = MultiSelectData;\r\n\r\n            var removeSelectedItem = () => {\r\n                MultiSelectData.option.selected = false;\r\n                MultiSelectData.excludedFromSearch = isOptionDisabled;\r\n                if (isOptionDisabled)\r\n                {\r\n                    setDropDownItemContentDisabled(dropDownItemContent, false);\r\n                    MultiSelectData.toggle = ()=> {};\r\n                }\r\n                else\r\n                {\r\n                    MultiSelectData.toggle = ()=>{\r\n                        createSelectedItem();\r\n                        this.optionsAdapter.triggerChange();\r\n                    };\r\n                }\r\n                dropDownItemContent.select(false);\r\n                removeElement(selectedItemElement);\r\n                MultiSelectData.SelectedItemContent.dispose();\r\n                MultiSelectData.SelectedItemContent=null;\r\n                MultiSelectData.selectedItemElement=null;\r\n\r\n                this.removeSelectedFromList(MultiSelectData);\r\n                this.optionsAdapter.triggerChange();\r\n            }\r\n\r\n            // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n            // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n            // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n            // because of the event's bubling process removeSelectedItem runs first. \r\n            // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n            // before we could analize is it belong to our dropdown or not.\r\n            // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n            // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n            // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n            // the situation described above: click outside dropdown on the same component.\r\n            // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n    \r\n            let removeSelectedItemAndCloseDropDown = () => {\r\n                removeSelectedItem();\r\n                this.resetFilterAndHideDropDown();\r\n            };\r\n        \r\n            let onRemoveSelectedItemEvent = () => {\r\n                setTimeout( () => {  \r\n                    removeSelectedItemAndCloseDropDown();\r\n                }, 0);\r\n            };\r\n\r\n            MultiSelectData.SelectedItemContent = this.selectedItemContent(\r\n                selectedItemElement,\r\n                MultiSelectData.option,\r\n                onRemoveSelectedItemEvent,\r\n                setPreventDefaultMultiSelectEvent);\r\n    \r\n            var disable = (isDisabled) =>\r\n                MultiSelectData.SelectedItemContent.disable(isDisabled);\r\n            disable(this.isComponentDisabled);\r\n\r\n            MultiSelectData.option.selected = true;\r\n            MultiSelectData.excludedFromSearch = true; // all selected excluded from search\r\n            //MultiSelectData.remove  = removeSelectedItemAndCloseDropDown;\r\n            MultiSelectData.disable = disable;\r\n            this.selectedPanel.insertBefore(selectedItemElement, this.filterInputItem);\r\n\r\n\r\n            MultiSelectData.toggle = () => removeSelectedItem();\r\n            dropDownItemContent.select(true);\r\n            \r\n        }\r\n\r\n        \r\n        \r\n        if (isSelected)\r\n        {\r\n            createSelectedItem();\r\n        }\r\n        else\r\n        {\r\n            MultiSelectData.excludedFromSearch =  isOptionDisabled;\r\n            if (isOptionDisabled)\r\n                MultiSelectData.toggle = () => { }\r\n            else\r\n                MultiSelectData.toggle = () =>  {\r\n                    createSelectedItem();\r\n                    this.optionsAdapter.triggerChange();\r\n                }\r\n        }\r\n        MultiSelectData.removeDropDownMenuItemElement = () => {\r\n            removeElement(dropDownMenuItemElement);\r\n            if (MultiSelectData.selectedItemElement!=null)\r\n                removeElement(MultiSelectData.selectedItemElement);\r\n        }\r\n    }\r\n\r\n    keyDownArrowDown() {\r\n        this.keyDownArrow(true);\r\n    }\r\n    keyDownArrowUp() {\r\n        this.keyDownArrow(false);\r\n    }\r\n    keyDownArrow(down) {\r\n        let visibleMultiSelectDataList = this.getVisibleMultiSelectDataList();\r\n        let length = visibleMultiSelectDataList.length;\r\n        let newIndex=null;\r\n        if (length > 0) {\r\n            if (down) {\r\n                let i = this.hoveredMultiSelectDataIndex==null?0:this.hoveredMultiSelectDataIndex+1;\r\n                while(i<length){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                let i = this.hoveredMultiSelectDataIndex==null?length-1:this.hoveredMultiSelectDataIndex-1;\r\n                while(i>=0){\r\n                    if (visibleMultiSelectDataList[i].visible){\r\n                        newIndex=i;\r\n                        break;\r\n                    }\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (newIndex!=null)\r\n        {\r\n            if (this.hoveredMultiSelectData)\r\n                this.styling.HoverOut(this.hoveredMultiSelectData.dropDownMenuItemElement);\r\n            this.updateDropDownLocation(true);\r\n            this.showDropDown(); \r\n            this.hoverInInternal(newIndex);\r\n        }\r\n    }\r\n\r\n    processEmptyInput(){\r\n        this.filterInput.length=\"2ch\";\r\n        resetFilterDropDownMenu(this.MultiSelectDataList);\r\n        this.visibleMultiSelectDataList = null;\r\n    }\r\n\r\n    Update(){\r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n    }\r\n\r\n    UpdateOption(index){\r\n        let multiSelectData = this.MultiSelectDataList[index];\r\n        let option = multiSelectData.option;\r\n        multiSelectData.searchText = option.text.toLowerCase().trim();\r\n        if (multiSelectData.isHidden != option.isHidden)\r\n        {\r\n            multiSelectData.isHidden=option.isHidden;\r\n            if (multiSelectData.isHidden)\r\n                this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), option.isSelected, option.isDisabled);\r\n            else\r\n                multiSelectData.removeDropDownMenuItemElement();\r\n        }\r\n        else \r\n        {\r\n            if (multiSelectData.isSelected != option.isSelected)\r\n            {\r\n                multiSelectData.isSelected=option.isSelected;\r\n                if (multiSelectData.isSelected)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n            if (multiSelectData.isDisabled != option.isDisabled)\r\n            {\r\n                multiSelectData.isDisabled=option.isDisabled;\r\n                if (multiSelectData.isDisabled)\r\n                {\r\n                    // this.insertDropDownItem(multiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n                else\r\n                {\r\n                    // multiSelectData.removeDropDownMenuItemElement();\r\n                }\r\n            }\r\n        }    \r\n        //multiSelectData.updateOption();\r\n    }\r\n\r\n    UpdateData(){\r\n        // close drop down , remove filter and listeners\r\n        this.resetFilterAndHideDropDown();\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.removeDropDownMenuItemElement)\r\n                multiSelectData.removeDropDownMenuItemElement();\r\n        }\r\n        this.resetMultiSelectDataList();\r\n\r\n        // reinitiate\r\n        this.updateDataImpl();\r\n    }\r\n\r\n    updateDataImpl(){\r\n        var createDropDownItems = () => {\r\n            let options = this.optionsAdapter.getOptions();\r\n            var j = 0;\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n\r\n                let isDisabled = option.disabled;\r\n                let isHidden   = option.hidden;\r\n                let isSelected = option.selected;\r\n                \r\n                var MultiSelectData = {\r\n                    searchText: option.text.toLowerCase().trim(),\r\n                    excludedFromSearch: isSelected || isDisabled || isHidden,\r\n                    option: option,\r\n                    isHidden: isHidden,\r\n                    dropDownMenuItemElement: null,\r\n                    dropDownItemContent: null,\r\n                    selectedPrev: null,\r\n                    selectedNext: null,\r\n                    visible: false,\r\n                    toggle: null,\r\n                    selectedItemElement: null,\r\n                    remove: null,\r\n                    disable: null,\r\n                    removeDropDownMenuItemElement: null\r\n                };\r\n\r\n                this.MultiSelectDataList.push(MultiSelectData);\r\n                if (!isHidden){\r\n                    MultiSelectData.visible = true;\r\n                    MultiSelectData.visibleIndex=i;\r\n                    this.insertDropDownItem(MultiSelectData, (e)=>this.dropDownMenu.appendChild(e), isSelected, isDisabled);\r\n                }\r\n            } \r\n            this.updateDropDownLocation(false);\r\n        }\r\n\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        if (document.readyState != 'loading'){\r\n            createDropDownItems();\r\n        } else {\r\n            var createDropDownItemsHandler = function(){\r\n                createDropDownItems();\r\n                document.removeEventListener(\"DOMContentLoaded\", createDropDownItemsHandler);\r\n            }\r\n            document.addEventListener('DOMContentLoaded', createDropDownItemsHandler); // IE9+\r\n        }\r\n    }\r\n\r\n    Dispose(){\r\n        this.isDisposed = true;\r\n        if (this.onDispose)\r\n            this.onDispose(); // primary used to remove from jQuery tables\r\n        \r\n        // remove event listeners\r\n        // TODO check if open\r\n        this.hideDropDown();\r\n        \r\n        this.selectedPanel.removeEventListener(\"click\", this.selectedPanelClick); // OPEN dropdown\r\n        this.filterInput.removeEventListener('focusin', this.onFilterInputFocusIn);\r\n        this.filterInput.removeEventListener('focusout', this.onFilterInputFocusOut);\r\n        this.filterInput.removeEventListener('keydown', this.onfilterInputKeyDown);\r\n        this.filterInput.removeEventListener('keyup', this.onFilterInputKeyUp);\r\n        this.filterInput.removeEventListener('input', this.onFilterInputInput);\r\n\r\n        this.labelAdapter.dispose();\r\n\r\n        \r\n        if (this.popper) {\r\n            this.popper.destroy();\r\n        }\r\n        \r\n        if (this.optionsAdapter.dispose) {\r\n            this.optionsAdapter.dispose();\r\n        }\r\n\r\n        for(let i=0; i<this.MultiSelectDataList.length; i++)\r\n        {\r\n            let multiSelectData = this.MultiSelectDataList[i];\r\n            if (multiSelectData.DisposeDropDownMenuItemElement)\r\n                multiSelectData.DisposeDropDownMenuItemElement();\r\n            \r\n            if (multiSelectData.SelectedItemContent)\r\n                multiSelectData.SelectedItemContent.dispose();\r\n            if (multiSelectData.DropDownItemContent)\r\n                multiSelectData.DropDownItemContent.dispose();\r\n        }\r\n\r\n        // this.resetMultiSelectDataList();\r\n        // this.onFilterInputInput = null;\r\n        // this.onFilterInputKeyUp = null;\r\n        // this.onfilterInputKeyDown = null;\r\n        // this.onFilterInputFocusOut = null;\r\n        // this.onFilterInputFocusIn = null;\r\n        // this.selectedPanelClick = null;\r\n        // this.containerMousedown = null;\r\n        // this.documentMouseup = null;\r\n        // this.documentMouseup2 = null;\r\n        // this.processCandidateToHovered = null;\r\n    }\r\n\r\n    UpdateSize(){\r\n        if (this.styling.UpdateSize)\r\n            this.styling.UpdateSize(this.stylingComposite);\r\n    }\r\n\r\n    UpdateDisabled(){\r\n        let isComponentDisabled = this.optionsAdapter.getDisabled();\r\n        let iterateAll = (isDisabled)=>{\r\n            let i = this.MultiSelectDataSelectedTail;\r\n            while(i){\r\n                i.disable(isDisabled); \r\n                i = i.selectedPrev;\r\n            }\r\n        }\r\n        if (this.isComponentDisabled!==isComponentDisabled){\r\n            if (isComponentDisabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.styling.Disable(this.stylingComposite);\r\n                iterateAll(true);\r\n                    \r\n                this.selectedPanel.removeEventListener(\"click\", this.selectedPanelClick);\r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.styling.Enable(this.stylingComposite);\r\n                iterateAll(false);\r\n\r\n                this.selectedPanel.addEventListener(\"click\", this.selectedPanelClick);\r\n            }\r\n            this.isComponentDisabled=isComponentDisabled;\r\n        }\r\n    }\r\n    \r\n    resetCandidateToHoveredMultiSelectData(){\r\n        this.candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousemove', this.processCandidateToHovered);\r\n        this.candidateToHoveredMultiSelectData.dropDownMenuItemElement.removeEventListener('mousedown', this.processCandidateToHovered);\r\n        this.candidateToHoveredMultiSelectData = null;\r\n    }\r\n\r\n    init() {\r\n        var document = this.document;\r\n        let container = this.optionsAdapter.container;\r\n        this.selectedPanel = document.createElement('UL');\r\n        defSelectedPanelStyleSys(this.selectedPanel.style); \r\n        container.appendChild(this.selectedPanel);\r\n        \r\n        this.filterInputItem = document.createElement('LI');\r\n        this.selectedPanel.appendChild(this.filterInputItem);\r\n        \r\n        this.filterInput = document.createElement('INPUT'); \r\n        this.filterInput.setAttribute(\"type\",\"search\");\r\n        this.filterInput.setAttribute(\"autocomplete\",\"off\");\r\n        \r\n        defFilterInputStyleSys(this.filterInput.style);\r\n        this.filterInputItem.appendChild(this.filterInput);\r\n\r\n        this.dropDownMenu = document.createElement('UL');\r\n        this.dropDownMenu.style.display=\"none\";\r\n        container.appendChild(this.dropDownMenu);\r\n        \r\n        // prevent heavy understandable styling error\r\n        defDropDownMenuStyleSys(this.dropDownMenu.style);\r\n\r\n        // we want to escape the closing of the menu on a user's click inside the container\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n            this.skipContainerMousedownEvent = event;\r\n        };\r\n        \r\n        this.processCandidateToHovered = () => {\r\n            if (this.hoveredMultiSelectData!=this.candidateToHoveredMultiSelectData)\r\n            {\r\n                this.resetDropDownMenuHover(); \r\n                this.hoverInInternal(this.candidateToHoveredMultiSelectData.visibleIndex);\r\n            }\r\n            this.resetCandidateToHoveredMultiSelectData();\r\n        }\r\n\r\n\r\n        // document.Mouseup used for better realiability\r\n        // TODO : this.containerMousedown , this.documentMouseup and filterInput.focusOut are actual only when menu is open\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.documentMouseup2 = event => {\r\n            if (!(container === event.target || container.contains(event.target))) {\r\n                this.resetFilterAndHideDropDown();\r\n            }\r\n        }\r\n\r\n        this.selectedPanelClick = event => {\r\n            if (event.target != this.filterInput)\r\n            {   \r\n                this.filterInput.value='';\r\n                this.filterInput.focus();\r\n            }\r\n            if (this.getVisibleMultiSelectDataList().length > 0 && this.preventDefaultMultiSelectEvent != event) {\r\n                this.updateDropDownLocation(true);\r\n                this.showDropDown();\r\n            }\r\n            this.preventDefaultMultiSelectEvent=null;\r\n        };\r\n\r\n        this.stylingComposite = this.createStylingComposite(container, this.selectedPanel,\r\n            this.filterInputItem, this.filterInput, this.dropDownMenu);\r\n        \r\n        this.styling.Init(this.stylingComposite);\r\n        \r\n        this.labelAdapter.init(this.filterInput); \r\n\r\n        if (this.optionsAdapter.afterContainerFilled)\r\n            this.optionsAdapter.afterContainerFilled();\r\n\r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n                }\r\n        });\r\n        \r\n        this.styling.UpdateIsValid(this.stylingComposite, this.optionsAdapter.getIsValid(), this.optionsAdapter.getIsInvalid());\r\n        \r\n        this.UpdateSize();\r\n        this.UpdateDisabled();\r\n        \r\n        // there was unmotivated stopPropagation call. commented out.\r\n        // $dropDownMenu.click(  event => { \r\n        //    event.stopPropagation();\r\n        // });\r\n\r\n        // possibly not need ???\r\n        // this.dropDownMenu.addEventListener('mouseover', () => \r\n        //      this.resetDropDownMenuHover());\r\n\r\n        this.onFilterInputFocusIn = ()=>{ \r\n            this.styling.FocusIn(this.stylingComposite)}\r\n        this.filterInput.addEventListener('focusin', this.onFilterInputFocusIn);\r\n        \r\n        this.onFilterInputFocusOut = () => {\r\n            if (!this.skipFocusout)\r\n                this.styling.FocusOut(this.stylingComposite)\r\n            }\r\n        this.filterInput.addEventListener('focusout', this.onFilterInputFocusOut);\r\n\r\n        this.onfilterInputKeyDown = (event) => {\r\n                if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                    event.preventDefault(); // for 9 it enables keyup\r\n                }\r\n    \r\n                if (event.which == 38) {\r\n                    this.keyDownArrowUp();\r\n                }\r\n                else if (event.which == 40) {\r\n                    this.keyDownArrowDown();\r\n                }\r\n                else if (event.which == 9  /*tab*/) { // no keydown for this\r\n                    if (!this.filterInput.value) {\r\n                        this.hideDropDown(); // filter is empty, nothing to reset\r\n                    }\r\n                }\r\n                else if (event.which == 8 /*backspace*/) {\r\n                    // NOTE: this will process backspace only if there are no text in the input field\r\n                    // If user will find this inconvinient, we will need to calculate something like this\r\n                    // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                    if (!this.filterInput.value)\r\n                    { \r\n                        this.removeSelectedTail();\r\n                    }\r\n                }\r\n    \r\n                if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                    this.resetDropDownMenuHover();\r\n            }\r\n        this.filterInput.addEventListener('keydown', this.onfilterInputKeyDown);\r\n\r\n        this.onFilterInputKeyUp = (event) => {\r\n            \r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredMultiSelectData) {\r\n                    this.hoveredMultiSelectData.toggle();\r\n                    this.resetFilterAndHideDropDown();\r\n                } \r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.resetFilterAndHideDropDown();\r\n            }\r\n            // TODO may be do it on \"space\" (when there is left only one)?\r\n            else {\r\n                let text = this.filterInput.value.trim().toLowerCase();\r\n                let visibleMultiSelectDataList = this.getVisibleMultiSelectDataList();\r\n                if (text && visibleMultiSelectDataList.length == 1)\r\n                {\r\n                    let fullMatchMultiSelectData=  visibleMultiSelectDataList[0];\r\n                    if (fullMatchMultiSelectData.searchText == text)\r\n                    {\r\n                        fullMatchMultiSelectData.toggle();\r\n                        // clear\r\n                        this.filterInput.value = '';\r\n                        this.processEmptyInput();\r\n                        this.resetDropDownMenuHover();\r\n                        this.hideDropDown();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterInput.addEventListener('keyup', this.onFilterInputKeyUp);\r\n        \r\n        this.onFilterInputInput = () => {\r\n            \r\n            var filterInput = this.filterInput;\r\n            var filterInputValue = filterInput.value;\r\n            let text = filterInputValue.trim().toLowerCase();\r\n            if (text == '')\r\n                this.processEmptyInput();\r\n            else\r\n            {\r\n                filterInput.style.width = filterInputValue.length*1.3 + 2 + \"ch\";\r\n                this.visibleMultiSelectDataList = filterDropDownMenu(this.MultiSelectDataList, text);\r\n            }\r\n\r\n            this.inShowDropDown = true;\r\n            setTimeout( () => {  \r\n                 this.inShowDropDown = null;\r\n            }, 0)\r\n\r\n            this.resetDropDownMenuHover();\r\n\r\n            if (this.getVisibleMultiSelectDataList().length == 1) {\r\n                this.hoverInInternal(0)\r\n            }\r\n\r\n            if (this.getVisibleMultiSelectDataList().length > 0) {\r\n                this.updateDropDownLocation(true); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n                this.showDropDown();\r\n            } else {\r\n                this.hideDropDown();\r\n            }\r\n        }\r\n\r\n        this.filterInput.addEventListener('input', this.onFilterInputInput);\r\n\r\n        this.updateDataImpl();\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","export function ExtendIfUndefined(destination, source) {\r\n    for (var property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function ExtendIfUndefinedFluent(destination, source) {\r\n    ExtendIfUndefined(destination, source);\r\n    return destination;\r\n}","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedPanelFocusClass : 'focus',\r\n    selectedPanelDisabledClass: 'disabled',\r\n    dropDownItemDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4StylingMethodCss(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n\r\n    return {\r\n        Enable($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelDisabledClass)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            $selectedPanel.addClass(configuration.selectedPanelFocusClass);\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n            $selectedPanel.removeClass(configuration.selectedPanelFocusClass);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodCss;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n    selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n    selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n    selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n    selectedPanelFocusBorderColor: '#80bdff',\r\n    selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n    selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n    selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n    filterInputColor: '#495057',\r\n    //selectedItemContentDisabledOpacity: '.65'\r\n};\r\n\r\nfunction Bs4StylingMethodJs(configuration){\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n\r\n    return {\r\n        OnInit(composite){\r\n            composite.$selectedPanel.css(defSelectedPanelStyle);\r\n            composite.$filterInput.css(\"color\", configuration.filterInputColor);\r\n        },\r\n    \r\n        UpdateSize($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelLgMinHeight);\r\n            } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelSmMinHeight);\r\n            } else {\r\n                $selectedPanel.css(\"min-height\", configuration.selectedPanelDefMinHeight);\r\n            }\r\n        },\r\n    \r\n        Enable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", \"\")\r\n        },\r\n    \r\n        Disable($selectedPanel){\r\n            $selectedPanel.css(\"background-color\", configuration.selectedPanelDisabledBackgroundColor)\r\n        },\r\n    \r\n        FocusIn($selectedPanel){\r\n            if ($selectedPanel.hasClass(\"is-valid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusValidBoxShadow);\r\n            } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n                $selectedPanel.css(\"box-shadow\", configuration.selectedPanelFocusInvalidBoxShadow);\r\n            } else {\r\n                $selectedPanel\r\n                    .css(\"box-shadow\", configuration.selectedPanelFocusBoxShadow)\r\n                    .css(\"border-color\", configuration.selectedPanelFocusBorderColor);\r\n            }\r\n        },\r\n    \r\n        FocusOut($selectedPanel){\r\n                $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n        },\r\n    }\r\n}\r\n\r\nexport default Bs4StylingMethodJs;","import  { ExtendIfUndefined } from './Tools';\r\n\r\n// Bs4Styling\r\nconst bs4StylingDefaults = {\r\n    containerClass: 'dashboardcode-bsmultiselect',\r\n    dropDownMenuClass: 'dropdown-menu',\r\n    dropDownItemClass:  'px-2',\r\n    dropDownItemHoverClass: 'text-primary bg-light',\r\n    selectedPanelClass: 'form-control',\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close',\r\n    filterInputItemClass: '',\r\n    filterInputClass: ''\r\n}\r\n\r\nfunction Bs4Styling(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4StylingDefaults);\r\n\r\n    return {\r\n        Init(composite){\r\n            composite.$container.addClass(configuration.containerClass);\r\n            composite.$selectedPanel.addClass(configuration.selectedPanelClass);\r\n            composite.$dropDownMenu.addClass(configuration.dropDownMenuClass);\r\n            composite.$filterInputItem.addClass(configuration.filterInputItemClass);\r\n            composite.$filterInput.addClass(configuration.filterInputClass);\r\n            if (stylingMethod.OnInit)\r\n                stylingMethod.OnInit(composite)\r\n        },\r\n\r\n        UpdateIsValid(composite, isValid, isInvalid){\r\n            if (isValid)\r\n                composite.$selectedPanel.addClass('is-valid');\r\n\r\n            if (isInvalid)\r\n                composite.$selectedPanel.addClass('is-invalid');\r\n        },\r\n\r\n        UpdateSize(composite){\r\n            if(stylingMethod.UpdateSize)\r\n               stylingMethod.UpdateSize(composite.$selectedPanel)\r\n        },\r\n\r\n        Enable(composite){\r\n            stylingMethod.Enable(composite.$selectedPanel)\r\n        },\r\n\r\n        Disable(composite){\r\n            stylingMethod.Disable(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusIn(composite){\r\n            stylingMethod.FocusIn(composite.$selectedPanel)\r\n        },\r\n\r\n        FocusOut(composite){\r\n            stylingMethod.FocusOut(composite.$selectedPanel)\r\n        },\r\n\r\n        HoverIn(dropDownItem){\r\n            $(dropDownItem).addClass(configuration.dropDownItemHoverClass);\r\n        },\r\n\r\n        HoverOut(dropDownItem){\r\n            $(dropDownItem).removeClass(configuration.dropDownItemHoverClass);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default Bs4Styling;","import  { ExtendIfUndefined } from './Tools';\r\n\r\nconst bs4StylingMethodCssdefaults = {\r\n    selectedItemContentDisabledClass: 'disabled'\r\n};\r\n\r\nfunction Bs4SelectedItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssdefaults);\r\n\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.addClass(configuration.selectedItemContentDisabledClass )\r\n        }\r\n    }\r\n}\r\n\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65'\r\n };\r\n\r\nfunction Bs4SelectedItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return {\r\n        disableSelectedItemContent($content){\r\n            $content.css(\"opacity\", configuration.selectedItemContentDisabledOpacity )\r\n        },\r\n    \r\n        createSelectedItemContent($selectedItem, $button){\r\n            $selectedItem.css(defSelectedItemStyle);\r\n            if ($button)\r\n                $button.css(defRemoveSelectedItemButtonStyle);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4SelectedItemContentDefaults = {\r\n    selectedItemClass: 'badge',\r\n    removeSelectedItemButtonClass: 'close'\r\n};\r\nfunction Bs4SelectedItemContent(stylingMethod, configuration, $) {\r\n        ExtendIfUndefined(configuration, bs4SelectedItemContentDefaults);\r\n        \r\n        return function (selectedItem, optionItem, removeSelectedItem, preventDefaultMultiSelect){\r\n                let $selectedItem = $(selectedItem)\r\n                $selectedItem.addClass(configuration.selectedItemClass);\r\n                let $content = $(`<span/>`).text(optionItem.text);\r\n                $content.appendTo($selectedItem);\r\n                if (optionItem.disabled)\r\n                    stylingMethod.disableSelectedItemContent($content);\r\n                let $button = $('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                    // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                    // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                    .css(\"float\", \"none\").appendTo($selectedItem)\r\n                    .addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n                    .on(\"click\", (jqEvent) => \r\n                        {   \r\n                            removeSelectedItem(); \r\n                            preventDefaultMultiSelect(jqEvent.originalEvent);\r\n                        });\r\n                \r\n                if (stylingMethod.createSelectedItemContent)\r\n                    stylingMethod.createSelectedItemContent($selectedItem, $button);\r\n                return {\r\n                    disable(isDisabled){ \r\n                        $button.prop('disabled', isDisabled); \r\n                    },\r\n                    dispose(){\r\n                        $button.unbind();\r\n                    }\r\n                };\r\n            }\r\n}\r\n\r\nexport { Bs4SelectedItemContent as Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss};","import  { ExtendIfUndefined} from './Tools';\r\n\r\nconst bs4StylingMethodCssDefaults = {\r\n    selectedItemContentDisabledClass: 'disabled',\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodCss(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodCssDefaults);\r\n    return {\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            if (isDisbaled) \r\n                $checkBox.addClass(configuration.dropDownItemDisabledClass);\r\n            else\r\n                $checkBox.removeClass(configuration.dropDownItemDisabledClass);\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4StylingMethodJsDefaults = {\r\n    selectedItemContentDisabledOpacity: '.65',\r\n    dropdDownLabelDisabledColor: '#6c757d'\r\n};\r\n\r\nfunction Bs4DropDownItemContentStylingMethodJs(configuration) {\r\n    ExtendIfUndefined(configuration, bs4StylingMethodJsDefaults);\r\n    return{\r\n        disabledStyle($checkBox, $checkBoxLabel, isDisbaled){\r\n            $checkBoxLabel.css('color', isDisbaled?configuration.dropdDownLabelDisabledColor:'')\r\n        }\r\n    }\r\n}\r\n\r\nconst bs4DropDownItemContentDefaults = {\r\n    dropDownItemClass:  'px-2',\r\n}\r\n\r\nfunction Bs4DropDownItemContent(stylingMethod, configuration, $) {\r\n    ExtendIfUndefined(configuration, bs4DropDownItemContentDefaults);\r\n    return function(dropDownItem, option){\r\n        let $dropDownItem = $(dropDownItem);\r\n        $dropDownItem.addClass(configuration.dropDownItemClass);\r\n        let $dropDownItemContent= $(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\">\r\n            <label class=\"custom-control-label\"></label>\r\n        </div>`);\r\n        $dropDownItemContent.appendTo(dropDownItem);\r\n        let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n        let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n        $checkBoxLabel.text(option.text);\r\n\r\n        var tmp = { \r\n            select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n            // --- distinct disable and disabledStyle to provide a possibility to unselect disabled option\r\n            disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n            disabledStyle(isDisbaled){ stylingMethod.disabledStyle($checkBox, $checkBoxLabel, isDisbaled); },\r\n\r\n            onSelected(toggle) {\r\n                $checkBox.on(\"change\", toggle)\r\n                $dropDownItem.on(\"click\", event => {\r\n                    if (dropDownItem === event.target || $.contains(dropDownItem, event.target)) {\r\n                        toggle();\r\n                    }\r\n                })\r\n            },\r\n            dispose(){\r\n                $checkBox.unbind();\r\n                $dropDownItem.unbind();\r\n            }\r\n        }\r\n        \r\n        return tmp;\r\n    }\r\n}\r\n\r\nexport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss };","import $ from 'jquery'\r\n\r\nimport MultiSelect from './MultiSelect'\r\nimport LabelAdapter from './LabelAdapter';\r\nimport {OptionsAdapterJson,OptionsAdapterElement} from './OptionsAdapters';\r\n\r\nimport Bs4StylingMethodCss from './Bs4StylingMethodCss'\r\nimport Bs4StylingMethodJs from './Bs4StylingMethodJs'\r\nimport Bs4Styling from './Bs4Styling';\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\n\r\nimport { Bs4SelectedItemContent, Bs4SelectedItemContentStylingMethodJs, Bs4SelectedItemContentStylingMethodCss} from './Bs4SelectedItemContent';\r\nimport { Bs4DropDownItemContent, Bs4DropDownItemContentStylingMethodJs, Bs4DropDownItemContentStylingMethodCss} from './Bs4DropDownItemContent';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, settings, onDispose) => {\r\n                let configuration = $.extend({}, settings); // settings used per jQuery intialization, configuration per element\r\n                if (configuration.preBuildConfiguration)\r\n                    configuration.preBuildConfiguration(element, configuration);\r\n                \r\n                var $element= $(element);\r\n                let optionsAdapter = null;\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    var trigger = function(eventName){\r\n                        $element.trigger(eventName);\r\n                    }\r\n                    if (configuration.options){\r\n                        optionsAdapter = OptionsAdapterJson(\r\n                            element,\r\n                            configuration.options,\r\n                            configuration.getDisabled,\r\n                            configuration.getIsValid,\r\n                            configuration.getIsInvalid,\r\n                            trigger );\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-filter-${element.id}`;\r\n            \r\n                    }else {\r\n                        if (!configuration.label)\r\n                        {\r\n                            let $formGroup = $(element).closest('.form-group');\r\n                            if ($formGroup.length == 1) {\r\n                                let $label = $formGroup.find(`label[for=\"${element.id}\"]`);\r\n                                if ($label.length>0)\r\n                                {   \r\n                                    let label = $label.get(0);\r\n                                    let forId = label.getAttribute('for');\r\n                                    if (forId == element.id) {\r\n                                        configuration.label = label;\r\n                                    }\r\n                                }   \r\n                            }\r\n                        }\r\n                        optionsAdapter = OptionsAdapterElement(element, trigger);\r\n                        if (!configuration.createInputId)\r\n                            configuration.createInputId=()=>`${configuration.containerClass}-generated-input-${((element.id)?element.id:element.name).toLowerCase()}-id`;\r\n                    }\r\n                }\r\n\r\n                let labelAdapter = LabelAdapter(configuration.label, configuration.createInputId);\r\n\r\n                let useCss = configuration.useCss;\r\n                let styling = configuration.styling;\r\n                if (!configuration.adapter)\r\n                {\r\n                    let stylingMethod = configuration.stylingMethod;\r\n                    if (!stylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            stylingMethod = Bs4StylingMethodCss(configuration);\r\n                        else\r\n                            stylingMethod = Bs4StylingMethodJs(configuration);\r\n                    }\r\n                    styling = Bs4Styling(stylingMethod, configuration, $);\r\n                }\r\n\r\n                let selectedItemContent = configuration.selectedItemContent;\r\n                if (!selectedItemContent){\r\n                    let selectedItemContentStylingMethod = configuration.selectedItemContentStylingMethod;\r\n                    if (!selectedItemContentStylingMethod)\r\n                    {\r\n                        if (useCss)\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodCss(configuration, $);\r\n                        else\r\n                            selectedItemContentStylingMethod=Bs4SelectedItemContentStylingMethodJs(configuration, $);\r\n                    }\r\n                    selectedItemContent = Bs4SelectedItemContent(selectedItemContentStylingMethod, configuration, $);\r\n                }\r\n\r\n                let dropDownItemContent = configuration.bs4DropDownItemContent;\r\n                if (!dropDownItemContent){\r\n                    let dropDownItemContentStylingMethod = configuration.dropDownItemContentStylingMethod;\r\n                    if (useCss)\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodCss(configuration, $);\r\n                    else\r\n                        dropDownItemContentStylingMethod=Bs4DropDownItemContentStylingMethodJs(configuration, $);\r\n                    dropDownItemContent = Bs4DropDownItemContent(dropDownItemContentStylingMethod, configuration, $)\r\n                }\r\n\r\n                let createStylingComposite = function(container, selectedPanel, filterInputItem, filterInput, dropDownMenu){\r\n                    return {\r\n                        $container:$(container),\r\n                        $selectedPanel:$(selectedPanel),\r\n                        $filterInputItem:$(filterInputItem),\r\n                        $filterInput:$(filterInput),\r\n                        $dropDownMenu:$(dropDownMenu)\r\n                    };\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(\r\n                    optionsAdapter,\r\n                    styling,\r\n                    selectedItemContent,\r\n                    dropDownItemContent,\r\n                    labelAdapter,\r\n                    createStylingComposite,\r\n                    configuration,\r\n                    onDispose,\r\n                    window);\r\n\r\n                if (configuration.postBuildConfiguration)\r\n                    configuration.postBuildConfiguration(element, multiSelect);\r\n                \r\n                multiSelect.init();\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype;","function OptionsAdapterJson(container, options, getDisabled, getIsValid, getIsInvalid, trigger) {\r\n    return {\r\n        container,\r\n        getOptions(){return options},\r\n        dispose(){\r\n            while (container.firstChild) container.removeChild(container.firstChild);\r\n        },\r\n        triggerChange(){\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return getDisabled?getDisabled():false;\r\n        },\r\n        getIsValid(){\r\n            return getIsValid?getIsValid():false;\r\n        },\r\n        getIsInvalid(){\r\n            return getIsInvalid?getIsInvalid():false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction OptionsAdapterElement(selectElement, trigger) {\r\n    selectElement.style.display='none';\r\n    var container = document.createElement('div');\r\n    return {\r\n        container,\r\n        getOptions(){return selectElement.getElementsByTagName('OPTION')},\r\n        dispose(){\r\n            container.parentNode.removeChild(container);\r\n        },\r\n        afterContainerFilled(){\r\n            selectElement.parentNode.insertBefore(container, selectElement.nextSibling);\r\n        },\r\n        triggerChange(){\r\n            trigger('change');\r\n            trigger('multiselect:change');\r\n        },\r\n        getDisabled(){\r\n            return selectElement.disabled;\r\n        },\r\n        getIsValid(){\r\n            return selectElement.classList.contains('is-valid');\r\n        },\r\n        getIsInvalid(){\r\n            return selectElement.classList.contains('is-invalid');\r\n        }\r\n    }\r\n}\r\n\r\nexport {OptionsAdapterJson, OptionsAdapterElement};\r\n","function LabelAdapter(label, createInputId){\r\n    var backupedFor = null; // state saved between init and dispose\r\n    return {\r\n        init(filterInput) {\r\n            if (label) {\r\n                backupedFor = label.getAttribute('for');\r\n                var newId = createInputId();\r\n                filterInput.setAttribute('id', newId);\r\n                label.setAttribute('for',newId);\r\n            }\r\n        },\r\n        dispose(){\r\n            if(backupedFor)\r\n                label.setAttribute('for',backupedFor);\r\n        }\r\n    }\r\n}\r\n\r\nexport default LabelAdapter;"]}