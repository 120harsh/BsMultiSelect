{"version":3,"sources":["../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["Bs4AdapterCss","options","$","this","extend","selectedPanelFocusClass","selectedPanelDisabledClass","selectedItemContentDisabledClass","DisableSelectedItemContent","$content","addClass","Enable","$selectedPanel","removeClass","Disable","FocusIn","FocusOut","defSelectedPanelStyle","margin-bottom","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4AdapterJs","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedItemContentDisabledOpacity","OnInit","dom","selectedPanel","css","filterInput","CreateSelectedItemContent","$selectedItem","$button","UpdateSize","hasClass","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","selectElement","onDispose","adapter","window","Popper","TypeError","container","filterInputItem","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this2","isHidden","hidden","optionId","isSelected","selected","isDisabled","$dropDownItem","prop","adoptDropDownItem","CreateDropDownItemContent","appendTo","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","closest","event","target","click","preventDefault","stopPropagation","toggleItem","currentTarget","focus","mouseover","e","HoverIn","mouseout","keydownArrow","down","visibleNodeListArray","toArray","length","newIndex","forceUpdatePosition","Update","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","UpdateDisabled","$container","mousedown","mouseup","_this3","$selectElement","get","$filterInputItem","$filterInput","$dropDownMenu","contains","nodeName","val","IsClickToOpenDropdown","Init","insertAfter","placement","modifiers","preventOverflow","enabled","flip","selectOptions","index","el","focusin","focusout","on","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","disableButton","Bs4Adapter","hiddenSelect","classes","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4LabelDispose","HandleLabel","inputId","id","$formGroup","$label","forId","attr","checkBoxId","name","checked","$checkBox","removeSelectedItem","controlDisabled","optionDisabled","parentElement","$hiddenSelect","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","optionsObject","useCss","facade"],"mappings":"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","sourcesContent":["class Bs4AdapterCss {\r\n\r\n    constructor(options, $) {\r\n        const defaults = {\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemContentDisabledClass: 'disabled'\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.addClass(this.options.selectedItemContentDisabledClass )\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","const defSelectedPanelStyle = {'margin-bottom': '0'};\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4AdapterJs {\r\n    constructor(options, $) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057',\r\n            selectedItemContentDisabledOpacity: '.65'\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n    }\r\n\r\n    OnInit(dom){\r\n        dom.selectedPanel.css(defSelectedPanelStyle);\r\n        dom.filterInput.css(\"color\", this.options.filterInputColor);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.css(\"opacity\", this.options.selectedItemContentDisabledOpacity )\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor})\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"is-valid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n        } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n        } else {\r\n            $selectedPanel\r\n                .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n        }\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(selectElement, options, onDispose, adapter, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.selectElement = selectElement;\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.options = $.extend({}, options);\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(window.document);\r\n        this.init();\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n        }\r\n        this.hoveredDropDownIndex = null;\r\n    }\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                if (!isSelected && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n    }\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    appendDropDownItem(optionElement) {\r\n        let isHidden = optionElement.hidden;\r\n        let optionId = optionElement.value;\r\n        let itemText = optionElement.text;\r\n        let isSelected = optionElement.selected;\r\n        let isDisabled = optionElement.disabled;\r\n        let $dropDownItem = this.$(\"<LI/>\").prop(\"hidden\", isHidden)\r\n        $dropDownItem.data(\"option-id\", optionId);\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n        let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, isDisabled)\r\n        $dropDownItem.appendTo(this.dropDownMenu);\r\n        let appendItem = (doTrigger) => {\r\n            $dropDownItem.data(\"option-selected\", true);\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            $selectedItem.data(\"option-id\", optionId);\r\n            optionElement.selected = true;\r\n            adoptDropDownItem(true);\r\n            let removeItem = () => {\r\n                $dropDownItem.data(\"option-selected\", false);\r\n                $dropDownItem.data(\"option-toggle\", optionElement.disabled ? null : appendItem);                    \r\n                $selectedItem.data(\"option-remove\", null);\r\n                $selectedItem.remove();\r\n                optionElement.selected = false;\r\n                adoptDropDownItem(false);\r\n                this.$(this.selectElement).trigger('change');\r\n            };\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                itemText,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled,\r\n                isDisabled\r\n            );\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            $dropDownItem.data(\"option-toggle\", removeItem);\r\n            $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n            if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                this.$(this.selectElement).trigger('change');\r\n            return $selectedItem;\r\n        }\r\n        $dropDownItem.data(\"option-toggle\", optionElement.disabled ? null : appendItem);\r\n\r\n        if (isSelected && !isHidden) {\r\n            appendItem(false);\r\n        }\r\n        let closest = (event) => this.$(event.target).closest(\"LI\");\r\n\r\n        $dropDownItem.click(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let toggleItem = this.$(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n            if (toggleItem)\r\n                toggleItem();\r\n            this.filterInput.focus();\r\n        })\r\n\r\n        $dropDownItem.mouseover(e => this.adapter.HoverIn(closest(e)))\r\n                     .mouseout(e => this.adapter.HoverOut(closest(e)));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            if (this.hoveredDropDownItem === null) {\r\n                this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n            this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.container !== null) {\r\n            this.$(this.container).remove();\r\n        }\r\n        // this.selectedPanel = null;\r\n        // this.filterInputItem = null;\r\n        // this.filterInput = null;\r\n        // this.dropDownMenu = null;\r\n        // this.selectElement = null;\r\n        // this.options = null;\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.selectElement.disabled;\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    init() {\r\n        let $selectElement = this.$(this.selectElement);\r\n        $selectElement.hide();\r\n        let $container = this.$(\"<DIV/>\");\r\n        this.container = $container.get(0);\r\n        let $selectedPanel = this.$(\"<UL/>\");\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        \r\n        this.selectedPanel = $selectedPanel.get(0);\r\n        \r\n        $selectedPanel.appendTo(this.container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        this.filterInput = $filterInput.get(0);\r\n        let $dropDownMenu = this.$(\"<UL/>\")\r\n            .css({\"display\":\"none\"})\r\n            .appendTo($container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(this.container === event.target || this.$.contains(this.container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.IsClickToOpenDropdown(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init({\r\n            container:$container, selectedPanel:$selectedPanel,\r\n            filterInputItem:$filterInputItem, filterInput:$filterInput,\r\n            dropDownMenu:$dropDownMenu });\r\n        $container.insertAfter($selectElement);\r\n        \r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: { enabled:false }\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // bellow: ready shortcut\r\n        this.$(() => {\r\n            let selectOptions = $selectElement.find('OPTION');\r\n            selectOptions.each(\r\n                (index, el) => {\r\n                    this.appendDropDownItem(el);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = selectOptions.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        $dropDownMenu.click( event => event.stopPropagation());\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.which == 38) {\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 9) {\r\n                if (!this.filterInput.value) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else if (event.which == 8) {\r\n                // NOTE: this will process backspace only if there are no text in the input field\r\n                // If user will find this inconvinient, we will need to calculate something like this\r\n                // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                if (!this.filterInput.value)\r\n                {\r\n                    let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                    if ($penult.length){\r\n                        let removeItem = $penult.data(\"option-remove\");\r\n                        removeItem();\r\n                    }\r\n                    this.updateDropDownPosition(false);\r\n                }\r\n            }\r\n\r\n            if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                this.resetDropDownMenuHover();\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    if (toggleItem){\r\n                        toggleItem();\r\n                        this.closeDropDown();\r\n                    }\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let isSelected = $dropDownItem.data(\"option-selected\");\r\n                        if (!isSelected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function disableButton($selectedPanel, isDisabled){\r\n    $selectedPanel.find('BUTTON').prop(\"disabled\", isDisabled);\r\n}\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(hiddenSelect, adapter, classes, $){\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass:  'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        }\r\n\r\n        this.classes = $.extend({}, defaults, classes);\r\n        this.$ = $;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.adapter = adapter;\r\n        this.bs4LabelDispose = null;\r\n    }\r\n\r\n    HandleLabel($selectedPanel){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${this.classes.containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $selectedPanel.find('input').attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // ------------------------------------------\r\n    Init(dom){\r\n        dom.container.addClass(this.classes.containerClass);\r\n        dom.selectedPanel.addClass(this.classes.selectedPanelClass);\r\n        dom.dropDownMenu.addClass(this.classes.dropDownMenuClass);\r\n        dom.filterInputItem.addClass(this.classes.filterInputItemClass);\r\n        dom.filterInput.addClass(this.classes.filterInputClass);\r\n        if (this.adapter.OnInit)\r\n            this.adapter.OnInit(dom)\r\n        this.bs4LabelDispose = this.HandleLabel(dom.selectedPanel);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4LabelDispose)\r\n            this.bs4LabelDispose();\r\n    }\r\n\r\n    // ------------------------\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, isDisabled){\r\n\r\n        let checkBoxId = `${this.classes.containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n        let disabled = isDisabled ? \"disabled\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked} ${disabled}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected, isDisabled) => {\r\n            $checkBox.prop('checked', isSelected).prop('disabled', isDisabled);\r\n        }\r\n        $dropDownItem.addClass(this.classes.dropDownItemClass);\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, controlDisabled, optionDisabled){\r\n        let $content = this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        if (optionDisabled)\r\n            this.adapter.DisableSelectedItemContent($content);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", controlDisabled)\r\n        $selectedItem.addClass(this.classes.selectedItemClass);\r\n        $button.addClass(this.classes.removeSelectedItemButtonClass)\r\n        if (this.adapter.CreateSelectedItemContent)\r\n            this.adapter.CreateSelectedItemContent($selectedItem, $button)\r\n    }\r\n\r\n    // -----------------------\r\n    IsClickToOpenDropdown(event){\r\n        const target = event.target;\r\n        const nodeName = target.nodeName;\r\n        return !(nodeName == \"BUTTON\" || (nodeName == \"SPAN\" && target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.$(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.classes.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.classes.dropDownItemHoverClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        this.adapter.Enable($selectedPanel)\r\n        disableButton($selectedPanel, false)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.adapter.Disable($selectedPanel)\r\n        disableButton($selectedPanel, true)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.adapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.adapter.FocusOut($selectedPanel)\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, optionsObject, onDispose) => {\r\n                let adapter = optionsObject && optionsObject.useCss\r\n                ? new Bs4AdapterCss(optionsObject, $)\r\n                : new Bs4AdapterJs(optionsObject, $);\r\n                let facade = new Bs4Adapter(element, adapter, optionsObject, $);\r\n                return new MultiSelect(element, optionsObject, onDispose, facade, window, $);\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}