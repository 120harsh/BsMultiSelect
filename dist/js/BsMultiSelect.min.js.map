{"version":3,"sources":["../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["Bs4AdapterCss","options","$","this","extend","selectedPanelFocusClass","selectedPanelDisabledClass","Enable","$selectedPanel","removeClass","Disable","addClass","FocusIn","FocusOut","defSelectedPanelStyle","margin-bottom","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4AdapterJs","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","OnInit","dom","selectedPanel","css","filterInput","CreateSelectedItemContent","$selectedItem","$button","UpdateSize","hasClass","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","selectElement","onDispose","adapter","window","Popper","TypeError","container","filterInputItem","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this2","optionId","isSelected","selected","isDisabled","$dropDownItem","adoptDropDownItem","CreateDropDownItemContent","appendTo","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","closest","event","target","click","preventDefault","stopPropagation","toggleItem","currentTarget","focus","mouseover","e","HoverIn","mouseout","keydownArrow","down","visibleNodeListArray","toArray","length","newIndex","forceUpdatePosition","Update","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","UpdateDisabled","$container","mousedown","mouseup","_this3","$selectElement","get","$filterInputItem","$filterInput","$dropDownMenu","contains","nodeName","val","IsClickToOpenDropdown","Init","insertAfter","placement","modifiers","preventOverflow","enabled","flip","selectOptions","index","focusin","focusout","on","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","disableButton","prop","Bs4Adapter","hiddenSelect","classes","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4CommonsLabelDispose","HandleLabel","inputId","id","$formGroup","$label","forId","attr","checkBoxId","name","checked","$checkBox","removeSelectedItem","parentElement","$hiddenSelect","pluginName","createPlugin","firstChar","charAt","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","optionsObject","useCss","facade"],"mappings":"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","sourcesContent":["class Bs4AdapterCss {\r\n\r\n    constructor(options, $) {\r\n        const defaults = {\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled'\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","const defSelectedPanelStyle = {'margin-bottom': '0'};\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4AdapterJs {\r\n    constructor(options, $) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057'\r\n        };\r\n        this.options = $.extend({}, defaults, options);\r\n    }\r\n\r\n    OnInit(dom){\r\n        dom.selectedPanel.css(defSelectedPanelStyle);\r\n        dom.filterInput.css(\"color\", this.options.filterInputColor);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor})\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"is-valid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n        } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n        } else {\r\n            $selectedPanel\r\n                .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n        }\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(selectElement, options, onDispose, adapter, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.selectElement = selectElement;\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.options = $.extend({}, options);\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(window.document);\r\n        this.init();\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n        }\r\n        this.hoveredDropDownIndex = null;\r\n    }\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                if (!isSelected && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n    }\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    appendDropDownItem(optionElement) {\r\n        let optionId = optionElement.value;\r\n        let itemText = optionElement.text;\r\n        let isSelected = optionElement.selected;\r\n        let isDisabled = optionElement.disabled;\r\n        let $dropDownItem = this.$(\"<LI/>\");\r\n        $dropDownItem.data(\"option-id\", optionId);\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n        let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, isDisabled)\r\n        $dropDownItem.appendTo(this.dropDownMenu);\r\n        let appendItem = (doTrigger) => {\r\n            $dropDownItem.data(\"option-selected\", true);\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            $selectedItem.data(\"option-id\", optionId);\r\n            optionElement.selected = true;\r\n            adoptDropDownItem(true);\r\n            let removeItem = () => {\r\n                $dropDownItem.data(\"option-selected\", false);\r\n                $dropDownItem.data(\"option-toggle\", optionElement.disabled ? null : appendItem);                    \r\n                $selectedItem.data(\"option-remove\", null);\r\n                $selectedItem.remove();\r\n                optionElement.selected = false;\r\n                adoptDropDownItem(false);\r\n                this.$(this.selectElement).trigger('change');\r\n            };\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                itemText,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            $dropDownItem.data(\"option-toggle\", removeItem);\r\n            $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n            if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                this.$(this.selectElement).trigger('change');\r\n            return $selectedItem;\r\n        }\r\n        $dropDownItem.data(\"option-toggle\", optionElement.disabled ? null : appendItem);\r\n        \r\n        if (isSelected) {\r\n            appendItem(false);\r\n        }\r\n        let closest = (event) => this.$(event.target).closest(\"LI\");\r\n\r\n        $dropDownItem.click(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let toggleItem = this.$(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n            if (toggleItem)\r\n                toggleItem();\r\n            this.filterInput.focus();\r\n        })\r\n\r\n        $dropDownItem.mouseover(e => this.adapter.HoverIn(closest(e)))\r\n                     .mouseout(e => this.adapter.HoverOut(closest(e)));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            if (this.hoveredDropDownItem === null) {\r\n                this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n            this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.container !== null) {\r\n            this.$(this.container).remove();\r\n        }\r\n        // this.selectedPanel = null;\r\n        // this.filterInputItem = null;\r\n        // this.filterInput = null;\r\n        // this.dropDownMenu = null;\r\n        // this.selectElement = null;\r\n        // this.options = null;\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.selectElement.disabled;\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    init() {\r\n        let $selectElement = this.$(this.selectElement);\r\n        $selectElement.hide();\r\n        let $container = this.$(\"<DIV/>\");\r\n        this.container = $container.get(0);\r\n        let $selectedPanel = this.$(\"<UL/>\");\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        \r\n        this.selectedPanel = $selectedPanel.get(0);\r\n        \r\n        $selectedPanel.appendTo(this.container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        this.filterInput = $filterInput.get(0);\r\n        let $dropDownMenu = this.$(\"<UL/>\")\r\n            .css({\"display\":\"none\"})\r\n            .appendTo($container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(this.container === event.target || this.$.contains(this.container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.IsClickToOpenDropdown(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init({\r\n            container:$container, selectedPanel:$selectedPanel,\r\n            filterInputItem:$filterInputItem, filterInput:$filterInput,\r\n            dropDownMenu:$dropDownMenu });\r\n        $container.insertAfter($selectElement);\r\n        \r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: { enabled:false }\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // bellow: ready shortcut\r\n        this.$(() => {\r\n            let selectOptions = $selectElement.find('OPTION');\r\n            selectOptions.each(\r\n                (index, optionElement) => {\r\n                    this.appendDropDownItem(optionElement);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = selectOptions.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        $dropDownMenu.click( event => event.stopPropagation());\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.which == 38) {\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 9) {\r\n                if (!this.filterInput.value) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else if (event.which == 8) {\r\n                // NOTE: this will process backspace only if there are no text in the input field\r\n                // If user will find this inconvinient, we will need to calculate something like this\r\n                // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                if (!this.filterInput.value)\r\n                {\r\n                    let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                    if ($penult.length){\r\n                        let removeItem = $penult.data(\"option-remove\");\r\n                        removeItem();\r\n                    }\r\n                    this.updateDropDownPosition(false);\r\n                }\r\n            }\r\n\r\n            if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                this.resetDropDownMenuHover();\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    if (toggleItem){\r\n                        toggleItem();\r\n                        this.closeDropDown();\r\n                    }\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let isSelected = $dropDownItem.data(\"option-selected\");\r\n                        if (!isSelected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function disableButton($selectedPanel, isDisabled){\r\n    $selectedPanel.find('BUTTON').prop(\"disabled\", isDisabled);\r\n}\r\n\r\nclass Bs4Adapter {\r\n\r\n    constructor(hiddenSelect, adapter, classes, $){\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass:  'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        }\r\n\r\n        this.classes = $.extend({}, defaults, classes);\r\n        this.$ = $;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.adapter = adapter;\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    HandleLabel($selectedPanel){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${this.classes.containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $selectedPanel.find('input').attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // ------------------------------------------\r\n    Init(dom){\r\n        dom.container.addClass(this.classes.containerClass);\r\n        dom.selectedPanel.addClass(this.classes.selectedPanelClass);\r\n        dom.dropDownMenu.addClass(this.classes.dropDownMenuClass);\r\n        dom.filterInputItem.addClass(this.classes.filterInputItemClass);\r\n        dom.filterInput.addClass(this.classes.filterInputClass);\r\n        if (this.adapter.OnInit)\r\n            this.adapter.OnInit(dom)\r\n        this.bs4CommonsLabelDispose = this.HandleLabel(dom.selectedPanel);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n\r\n    // ------------------------\r\n    CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected, isDisabled){\r\n\r\n        let checkBoxId = `${this.classes.containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n        let disabled = isDisabled ? \"disabled\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked} ${disabled}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = (isSelected, isDisabled) => {\r\n            $checkBox.prop('checked', isSelected);\r\n            $checkBox.prop('disabled', isDisabled);\r\n        }\r\n        $dropDownItem.addClass(this.classes.dropDownItemClass);\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", disabled)\r\n        $selectedItem.addClass(this.classes.selectedItemClass);\r\n        $button.addClass(this.classes.removeSelectedItemButtonClass)\r\n        if (this.adapter.CreateSelectedItemContent)\r\n            this.adapter.CreateSelectedItemContent($selectedItem, $button)\r\n    }\r\n\r\n    // -----------------------\r\n    IsClickToOpenDropdown(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.$(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.classes.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.classes.dropDownItemHoverClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        this.adapter.Enable($selectedPanel)\r\n        disableButton($selectedPanel, false)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.adapter.Disable($selectedPanel)\r\n        disableButton($selectedPanel, true)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.adapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.adapter.FocusOut($selectedPanel)\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, optionsObject, onDispose) => {\r\n                let adapter = optionsObject && optionsObject.useCss\r\n                ? new Bs4AdapterCss(optionsObject, $)\r\n                : new Bs4AdapterJs(optionsObject, $);\r\n                let facade = new Bs4Adapter(element, adapter, optionsObject, $);\r\n                return new MultiSelect(element, optionsObject, onDispose, facade, window, $);\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    if (firstChar.toLowerCase() == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstChar.toLowerCase() + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}