{"version":3,"sources":["../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/BsMultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/AddToJQueryPrototype.js"],"names":["Bs4AdapterCss","jQuery","hiddenSelect","options","this","extend","containerClass","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedPanelFocusClass","selectedPanelDisabledClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","GetDropDownItemClass","GetContainerClass","GetDropDownItemHoverClass","Init","$container","$selectedPanel","$filterInputItem","$filterInput","$dropDownMenu","addClass","CreateSelectedItemContent","$selectedItem","$button","Enable","removeClass","Disable","FocusIn","FocusOut","defContainerClass","defSelectedPanelStyle","margin-bottom","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4AdapterJs","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","css","UpdateSize","hasClass","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","selectElement","onDispose","adapter","window","$","Popper","TypeError","container","selectedPanel","filterInputItem","filterInput","dropDownMenu","popper","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","indexOf","hide","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","_this2","optionId","isSelected","selected","$dropDownItem","adoptDropDownItem","CreateDropDownItemContent","appendTo","appendItem","doTrigger","removeItem","remove","trigger","removeItemAndCloseDropDown","insertBefore","closest","event","target","click","preventDefault","stopPropagation","currentTarget","toggleItem","focus","mouseover","e","HoverIn","mouseout","keydownArrow","down","visibleNodeListArray","toArray","length","newIndex","forceUpdatePosition","Update","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","UpdateDisabled","mousedown","mouseup","_this3","$selectElement","get","contains","nodeName","val","FilterClick","insertAfter","placement","modifiers","preventOverflow","enabled","flip","selectOptions","index","focusin","focusout","on","which","$penult","prev","dropDownItems","querySelectorAll","dropDownItem","it","textContent","toggle","Bs4Adapter","bs4CommonsLabelDispose","HandleLabel","inputId","id","$formGroup","$label","forId","attr","checkBoxId","name","checked","$checkBox","prop","removeSelectedItem","parentElement","$hiddenSelect","pluginName","createPlugin","firstChar","charAt","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","optionsObject","useCss","facade"],"mappings":"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","sourcesContent":["class Bs4AdapterCss {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass: 'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n    }\r\n\r\n    GetDropDownItemClass(){\r\n        return this.options.dropDownItemClass;\r\n    }\r\n    \r\n    GetContainerClass(){\r\n        return this.options.containerClass;\r\n    }\r\n\r\n    GetDropDownItemHoverClass(){\r\n        return this.options.dropDownItemHoverClass;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        $container.addClass(this.options.containerClass);\r\n        $selectedPanel.addClass(this.options.selectedPanelClass);\r\n        $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n        $filterInputItem.addClass(this.options.filterInputItemClass)\r\n        $filterInput.addClass(this.options.filterInputClass);\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.addClass(this.options.selectedItemClass);\r\n        $button.addClass(this.options.removeSelectedItemButtonClass)\r\n    }\r\n\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelDisabledClass)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        $selectedPanel.addClass(this.options.selectedPanelFocusClass);\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        $selectedPanel.removeClass(this.options.selectedPanelFocusClass);\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","const defContainerClass= 'dashboardcode-bsmultiselect';\r\nconst defDropDownMenuClass= 'dropdown-menu';\r\nconst defDropDownItemHoverClass= 'text-primary bg-light';\r\nconst defSelectedPanelClass = 'form-control';\r\nconst defDropDownItemClass = 'px-2';\r\n\r\nconst defSelectedItemClass = 'badge';\r\nconst defSelectedPanelStyle= {'margin-bottom': '0'};\r\nconst defSelectedItemStyle= {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonClass = 'close';\r\nconst defRemoveSelectedItemButtonStyle= {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4AdapterJs {\r\n\r\n    constructor(jQuery, hiddenSelect, options) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057'\r\n        };\r\n        this.options = jQuery.extend({}, defaults, options);\r\n        this.jQuery=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n\r\n    }\r\n\r\n    GetDropDownItemClass(){\r\n        return defDropDownItemClass;\r\n    }\r\n\r\n    GetContainerClass(){\r\n        return defContainerClass;\r\n    }\r\n\r\n    GetDropDownItemHoverClass(){\r\n        return defDropDownItemHoverClass;\r\n    }\r\n\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        $container.addClass(defContainerClass);\r\n        $selectedPanel.addClass(defSelectedPanelClass);\r\n        $selectedPanel.css(defSelectedPanelStyle);\r\n\r\n        $dropDownMenu.addClass(defDropDownMenuClass);\r\n        $filterInput.css(\"color\", this.options.filterInputColor);\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.options.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.addClass(defSelectedItemClass);\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        $button.addClass(defRemoveSelectedItemButtonClass)\r\n        $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.options.selectedPanelDisabledBackgroundColor})\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"is-valid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusValidBoxShadow);\r\n        } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.options.selectedPanelFocusInvalidBoxShadow);\r\n        } else {\r\n            $selectedPanel\r\n                .css(\"box-shadow\", this.options.selectedPanelFocusBoxShadow)\r\n                .css(\"border-color\", this.options.selectedPanelFocusBorderColor);\r\n        }\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(selectElement, options, onDispose, adapter, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.selectElement = selectElement;\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.options = $.extend({}, options);\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(window.document);\r\n        this.init();\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n        }\r\n        this.hoveredDropDownIndex = null;\r\n    }\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let isSelected = $dropDownMenuItem.data(\"option-selected\");\r\n                if (!isSelected && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n    }\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    appendDropDownItem(optionElement) {\r\n        let optionId = optionElement.value;\r\n        let itemText = optionElement.text;\r\n        let isSelected = optionElement.selected;\r\n        let $dropDownItem = this.$(\"<LI/>\");\r\n        $dropDownItem.data(\"option-id\", optionId);\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase());\r\n        let adoptDropDownItem = this.adapter.CreateDropDownItemContent($dropDownItem, optionId, itemText, isSelected)\r\n        $dropDownItem.appendTo(this.dropDownMenu);\r\n        let appendItem = (doTrigger) => {\r\n            $dropDownItem.data(\"option-selected\", true);\r\n            let $selectedItem = this.$(\"<LI/>\");\r\n            $selectedItem.data(\"option-id\", optionId);\r\n            optionElement.selected = true;\r\n            adoptDropDownItem(true);\r\n            let removeItem = () => {\r\n                $dropDownItem.data(\"option-selected\", false);\r\n                $dropDownItem.data(\"option-toggle\", appendItem);\r\n                $selectedItem.data(\"option-remove\", null);\r\n                $selectedItem.remove();\r\n                optionElement.selected = false;\r\n                adoptDropDownItem(false);\r\n                this.$(this.selectElement).trigger('change');\r\n            };\r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n\r\n            this.adapter.CreateSelectedItemContent(\r\n                $selectedItem,\r\n                itemText,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            $dropDownItem.data(\"option-toggle\", removeItem);\r\n            $selectedItem.data(\"option-remove\", removeItemAndCloseDropDown);\r\n            if (typeof doTrigger === \"undefined\" || doTrigger===true)\r\n                this.$(this.selectElement).trigger('change');\r\n            return $selectedItem;\r\n        }\r\n        $dropDownItem.data(\"option-toggle\", appendItem );\r\n        \r\n        if (isSelected) {\r\n            appendItem(false);\r\n        }\r\n        let closest = (event) => this.$(event.target).closest(\"LI\");\r\n        // let manageHoverIn = (event) => {\r\n        //     this.adapter.HoverIn(closest(event))\r\n        // }\r\n        // let manageHoverOut = (event) => {\r\n        //     this.adapter.HoverOut(closest(event))\r\n        // }\r\n        $dropDownItem.click(event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let toggleItem = this.$(event.currentTarget).closest(\"LI\").data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        }).mouseover(e => this.adapter.HoverIn(closest(e)))\r\n          .mouseout(e => this.adapter.HoverOut(closest(e)));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"])').toArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            if (this.hoveredDropDownItem === null) {\r\n                this.hoveredDropDownIndex = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    this.hoveredDropDownIndex = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    this.hoveredDropDownIndex = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoveredDropDownItem = visibleNodeListArray[this.hoveredDropDownIndex];\r\n            this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n            // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.container !== null) {\r\n            this.$(this.container).remove();\r\n        }\r\n        // this.selectedPanel = null;\r\n        // this.filterInputItem = null;\r\n        // this.filterInput = null;\r\n        // this.dropDownMenu = null;\r\n        // this.selectElement = null;\r\n        // this.options = null;\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.selectElement.disabled;\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    init() {\r\n        let $selectElement = this.$(this.selectElement);\r\n        $selectElement.hide();\r\n        let $container = this.$(\"<DIV/>\");\r\n        this.container = $container.get(0);\r\n        let $selectedPanel = this.$(\"<UL/>\");\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        \r\n        this.selectedPanel = $selectedPanel.get(0);\r\n        \r\n        $selectedPanel.appendTo(this.container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        this.filterInput = $filterInput.get(0);\r\n        let $dropDownMenu = this.$(\"<UL/>\")\r\n            .css({\"display\":\"none\"})\r\n            .appendTo($container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(this.container === event.target || this.$.contains(this.container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.FilterClick(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu);\r\n        $container.insertAfter($selectElement);\r\n        \r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: { enabled:false }\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // bellow: ready shortcut\r\n        this.$(() => {\r\n            let selectOptions = $selectElement.find('OPTION');\r\n            selectOptions.each(\r\n                (index, optionElement) => {\r\n                    this.appendDropDownItem(optionElement);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = selectOptions.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        $dropDownMenu.click( event => event.stopPropagation());\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if (event.which == 38) {\r\n                event.preventDefault();\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                event.preventDefault()\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 13) {\r\n                event.preventDefault();\r\n            }\r\n            else if (event.which == 9) {\r\n                if (this.filterInput.value) {\r\n                    event.preventDefault();\r\n                }\r\n                else {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else {\r\n                if (event.which == 8) {\r\n                    // NOTE: this will process backspace only if there are no text in the input field\r\n                    // If user will find this inconvinient, we will need to calculate something like this\r\n                    // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                    if (!this.filterInput.value)\r\n                    {\r\n                        let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                        if ($penult.length){\r\n                            let removeItem = $penult.data(\"option-remove\");\r\n                            removeItem();\r\n                        }\r\n                        this.updateDropDownPosition(false);\r\n                    }\r\n                }\r\n                this.resetDropDownMenuHover();\r\n            }\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let isSelected = $dropDownItem.data(\"option-selected\");\r\n                        if (!isSelected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, optionsObject, onDispose) => {\r\n                let adapter = optionsObject && optionsObject.useCss\r\n                ? new Bs4AdapterCss($, element, optionsObject)\r\n                : new Bs4AdapterJs($, element, optionsObject);\r\n                let facade = new Bs4Adapter($, element, adapter);\r\n                return new MultiSelect(element, optionsObject, onDispose, facade, window, $);\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","class Bs4Adapter {\r\n\r\n    constructor(jQuery, hiddenSelect, adapter){\r\n        this.$=jQuery;\r\n        this.hiddenSelect=hiddenSelect;\r\n        this.adapter = adapter;\r\n        this.containerClass = adapter.GetContainerClass();\r\n        this.dropDownItemHoverClass = adapter.GetDropDownItemHoverClass();\r\n        this.bs4CommonsLabelDispose = null;\r\n    }\r\n\r\n    HandleLabel($selectedPanel){\r\n        let inputId = this.hiddenSelect.id;\r\n        let $formGroup = this.$(this.hiddenSelect).closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${inputId}\"]`);\r\n            let forId = $label.attr('for');\r\n            let $filterInput = $selectedPanel.find('input');\r\n            if (forId == this.hiddenSelect.id) {\r\n                let id = `${this.containerClass}-generated-filter-id-${this.hiddenSelect.id}`;\r\n                $filterInput.attr('id', id);\r\n                $label.attr('for', id);\r\n                return () => {\r\n                    $label.attr('for', forId);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // ------------------------------------------\r\n    Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu){\r\n        this.adapter.Init($container, $selectedPanel, $filterInputItem, $filterInput, $dropDownMenu)\r\n        this.bs4CommonsLabelDispose = this.HandleLabel($selectedPanel);\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4CommonsLabelDispose)\r\n            this.bs4CommonsLabelDispose();\r\n    }\r\n\r\n    // ------------------------\r\n    CreateDropDownItemContent(\r\n        $dropDownItem, optionId, itemText, isSelected){\r\n\r\n        let checkBoxId = `${this.containerClass}-${this.hiddenSelect.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n        let checked = isSelected ? \"checked\" : \"\";\r\n\r\n        let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n            <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n        </div>`)\r\n        $dropDownItemContent.appendTo($dropDownItem);\r\n        let $checkBox = $dropDownItem.find(`INPUT[type=\"checkbox\"]`);\r\n        let adoptDropDownItem = isSelected => {\r\n            $checkBox.prop('checked', isSelected);\r\n        }\r\n        $dropDownItem.addClass(this.adapter.GetDropDownItemClass());\r\n        return adoptDropDownItem;\r\n    }\r\n\r\n    CreateSelectedItemContent($selectedItem, itemText, removeSelectedItem, disabled){\r\n        this.$(`<span>${itemText}</span>`).appendTo($selectedItem);\r\n        let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n            .css(\"white-space\", \"nowrap\")\r\n            .on(\"click\", removeSelectedItem)\r\n            .appendTo($selectedItem)\r\n            .prop(\"disabled\", disabled)\r\n        this.adapter.CreateSelectedItemContent($selectedItem, $button)\r\n    }\r\n    // -----------------------\r\n    FilterClick(event){\r\n        return !(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        let $hiddenSelect = this.$(this.hiddenSelect);\r\n        if ($hiddenSelect.hasClass(\"is-valid\")){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if ($hiddenSelect.hasClass(\"is-invalid\")){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n\r\n    Enable($selectedPanel){\r\n        this.adapter.Enable($selectedPanel)\r\n        $selectedPanel.find('BUTTON').prop(\"disabled\", false);\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.adapter.Disable($selectedPanel)\r\n        $selectedPanel.find('BUTTON').prop(\"disabled\", true);\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.adapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.adapter.FocusOut($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.dropDownItemHoverClass);\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    if (firstChar.toLowerCase() == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstChar.toLowerCase() + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}