{"version":3,"sources":["../../js/src/Bs4AdapterCss.js","../../js/src/Bs4AdapterJs.js","../../js/src/MultiSelect.js","../../js/src/Bs4Adapter.js","../../js/src/OptionsAdapterElement.js","../../js/src/OptionsAdapterJson.js","../../js/src/BsMultiSelect.js","../../js/src/AddToJQueryPrototype.js"],"names":["Bs4AdapterCss","configuration","$","tmp","extend","selectedPanelFocusClass","selectedPanelDisabledClass","selectedItemContentDisabledClass","dropDownItemDisabledClass","this","DisableSelectedItemContent","$content","addClass","DisabledStyle","$checkBox","isDisbaled","removeClass","Enable","$selectedPanel","Disable","FocusIn","FocusOut","defSelectedPanelStyle","margin-bottom","height","defSelectedItemStyle","padding-left","line-height","defRemoveSelectedItemButtonStyle","font-size","Bs4AdapterJs","selectedPanelDefMinHeight","selectedPanelLgMinHeight","selectedPanelSmMinHeight","selectedPanelDisabledBackgroundColor","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","selectedPanelFocusValidBoxShadow","selectedPanelFocusInvalidBoxShadow","filterInputColor","selectedItemContentDisabledOpacity","dropdDownLabelDisabledColor","OnInit","dom","selectedPanel","css","filterInput","CreateSelectedItemContent","$selectedItem","$button","siblings","UpdateSize","hasClass","background-color","defSelectedPanelStyleSys","display","flex-wrap","list-style-type","defFilterInputStyleSys","width","border","padding","outline","defDropDownMenuStyleSys","MultiSelect","optionsAdapter","adapter","onDispose","window","Popper","TypeError","document","container","filterInputItem","dropDownMenu","popper","getDisabled","selectedPanelClick","documentMouseup","containerMousedown","documentMouseup2","disabled","filterInputItemOffsetLeft","skipFocusout","hoveredDropDownItem","hoveredDropDownIndex","hasDropDownVisible","$document","init","updateDropDownPosition","force","offsetLeft","update","hideDropDown","style","showDropDown","resetDropDownMenuHover","HoverOut","filterDropDownMenu","_this","text","value","trim","toLowerCase","visible","find","each","i","dropDownMenuItem","$dropDownMenuItem","show","itemText","data","option","selected","hidden","indexOf","hide","visibleNodeListArray","getVisibleNodeListArray","hoverInInternal","clearFilterInput","updatePosition","input","closeDropDown","appendDropDownItem","optionElement","onChange","_this2","isHidden","$dropDownItem","prop","appendTo","dropDownItem","get","adjustDropDownItem","CreateDropDownItemContent","isDisabled","disabledStyle","disable","onSelected","toggleItem","focus","selectItem","doPublishEvents","selectedItem","adjustPair","isSelected","toggle","remove","select","removeItem","removeItemAndCloseDropDown","insertBefore","mouseover","HoverIn","mouseout","toArray","index","keydownArrow","down","length","newIndex","forceUpdatePosition","Update","UpdateIsValid","UpdateSizeImpl","UpdateDisabledImpl","Dispose","unbind","destroy","removeContainer","UpdateDisabled","$container","mousedown","mouseup","click","fillContainer","_this3","createElement","$filterInputItem","$filterInput","$dropDownMenu","event","target","contains","nodeName","val","IsClickToOpenDropdown","Init","getOptions","_this4","placement","modifiers","preventOverflow","enabled","flip","options","el","focusin","focusout","on","which","preventDefault","$penult","prev","dropDownItems","querySelectorAll","it","textContent","disableButton","OptionsAdapterElement","selectElement","$selectElement","getIsValid","getIsInvalid","idPart","id","name","classPart","containerClass","createInputId","label","$formGroup","closest","$label","getAttribute","ms","_ms$fillContainer","parentNode","removeChild","insertAfter","trigger","OptionsAdapterJson","hasOwnProperty","firstChild","Bs4Adapter","stylingAdapter","dropDownMenuClass","dropDownItemClass","dropDownItemHoverClass","selectedPanelClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","bs4LabelDispose","createDropDownItemContent","$dropDownItemContent","createSelectedItemContent","optionItem","removeSelectedItem","controlDisabled","setTimeout","HandleLabel","newForId","backupForId","attr","setAttribute","parentElement","pluginName","createPlugin","firstChar","charAt","firstCharLower","prototypableName","slice","noConflictPrototypable","fn","dataKey","prototypable","$e","instance","isMethodName","test","removeData","methodName","noConflict","AddToJQueryPrototype","element","buildConfiguration","useCss"],"mappings":";;;;;mVAAMA,aAEF,SAAAA,EAAYC,EAAeC,GACvB,IAMIC,EAAMD,EAAEE,OAAO,GANF,CACbC,wBAA0B,QAC1BC,2BAA4B,WAC5BC,iCAAkC,WAClCC,0BAA2B,YAEEP,GACjCQ,KAAKR,cAAgBC,EAAEE,OAAOH,EAAeE,8BAGjDO,2BAAA,SAA2BC,GACvBA,EAASC,SAASH,KAAKR,cAAcM,qCAGzCM,cAAA,SAAcC,EAAWC,GACjBA,EACAD,EAAUF,SAASH,KAAKR,cAAcO,2BAEtCM,EAAUE,YAAYP,KAAKR,cAAcO,8BAGjDS,OAAA,SAAOC,GACHA,EAAeF,YAAYP,KAAKR,cAAcK,+BAGlDa,QAAA,SAAQD,GACJA,EAAeN,SAASH,KAAKR,cAAcK,+BAG/Cc,QAAA,SAAQF,GACJA,EAAeN,SAASH,KAAKR,cAAcI,4BAG/CgB,SAAA,SAASH,GACLA,EAAeF,YAAYP,KAAKR,cAAcI,+BCrChDiB,EAAwB,CAACC,gBAAiB,IAAKC,OAAU,QACzDC,EAAuB,CAACC,eAAgB,MAAOC,cAAe,SAC9DC,EAAmC,CAACC,YAAY,QAASF,cAAe,QAExEG,aACF,SAAAA,EAAY7B,EAAeC,GACvB,IAaIC,EAAMD,EAAEE,OAAO,GAbF,CACb2B,0BAA2B,sBAC3BC,yBAA2B,uBAC3BC,yBAA2B,wBAC3BC,qCAAsC,UACtCC,8BAA+B,UAC/BC,4BAA6B,uCAC7BC,iCAAkC,uCAClCC,mCAAoC,uCACpCC,iBAAkB,UAClBC,mCAAoC,MACpCC,4BAA6B,WAEAxC,GACjCQ,KAAKR,cAAgBC,EAAEE,OAAOH,EAAeE,8BAGjDuC,OAAA,SAAOC,GACHA,EAAIC,cAAcC,IAAIvB,GACtBqB,EAAIG,YAAYD,IAAI,QAASpC,KAAKR,cAAcsC,qBAIpDQ,0BAAA,SAA0BC,EAAeC,GACrCD,EAAcH,IAAIpB,GAClBwB,EAAQJ,IAAIjB,MAGhBlB,2BAAA,SAA2BC,GACvBA,EAASkC,IAAI,UAAWpC,KAAKR,cAAcuC,uCAG/C3B,cAAA,SAAcC,EAAWC,GACrBD,EAAUoC,SAAS,SAASL,IAAI,QAAS9B,EAAWN,KAAKR,cAAcwC,4BAA4B,OAGvGU,WAAA,SAAWjC,GACHA,EAAekC,SAAS,mBACxBlC,EAAe2B,IAAI,aAAcpC,KAAKR,cAAc+B,0BAC7Cd,EAAekC,SAAS,mBAC/BlC,EAAe2B,IAAI,aAAcpC,KAAKR,cAAcgC,0BAEpDf,EAAe2B,IAAI,aAAcpC,KAAKR,cAAc8B,8BAI5Dd,OAAA,SAAOC,GACHA,EAAe2B,IAAI,CAACQ,mBAAoB,QAG5ClC,QAAA,SAAQD,GACJA,EAAe2B,IAAI,CAACQ,mBAAoB5C,KAAKR,cAAciC,0CAG/Dd,QAAA,SAAQF,GACAA,EAAekC,SAAS,YACxBlC,EAAe2B,IAAI,aAAcpC,KAAKR,cAAcoC,kCAC7CnB,EAAekC,SAAS,cAC/BlC,EAAe2B,IAAI,aAAcpC,KAAKR,cAAcqC,oCAEpDpB,EACK2B,IAAI,aAAcpC,KAAKR,cAAcmC,6BACrCS,IAAI,eAAgBpC,KAAKR,cAAckC,kCAIpDd,SAAA,SAASH,GACDA,EAAe2B,IAAI,aAAc,IAAKA,IAAI,eAAgB,UCvEhES,EAA2B,CAACC,QAAU,OAAQC,YAAY,OAAQC,kBAAkB,QACpFC,EAA2B,CAACC,MAAQ,MAAOC,OAAS,IAAKC,QAAU,IAAKC,QAAU,OAAQT,mBAAmB,eAC7GU,EAA2B,CAACN,kBAAkB,QAS9CO,aACF,SAAAA,EAAYC,EAAgBC,EAASjE,EAAekE,EAAWC,EAAQlE,GACnE,GAAsB,oBAAXmE,EACP,MAAM,IAAIC,UAAU,yEAGxB7D,KAAKyD,QAAUA,EACfzD,KAAK2D,OAASA,EACd3D,KAAK8D,SAAWH,EAAOG,SACvB9D,KAAK0D,UAAUA,EACf1D,KAAKP,EAAIA,EAETO,KAAKR,cAAgBA,EAErBQ,KAAK+D,UAAY,KACjB/D,KAAKmC,cAAgB,KACrBnC,KAAKgE,gBAAkB,KACvBhE,KAAKqC,YAAc,KACnBrC,KAAKiE,aAAe,KACpBjE,KAAKkE,OAAS,KACdlE,KAAKmE,YAAY,KAEjBnE,KAAKoE,mBAAsB,KAC3BpE,KAAKqE,gBAAoB,KACzBrE,KAAKsE,mBAAuB,KAC5BtE,KAAKuE,iBAAqB,KAE1BvE,KAAKwE,SAAS,KACdxE,KAAKyE,0BAA4B,KACjCzE,KAAK0E,cAAe,EACpB1E,KAAK2E,oBAAsB,KAC3B3E,KAAK4E,qBAAuB,KAC5B5E,KAAK6E,oBAAqB,EAG1B7E,KAAK8E,UAAWrF,EAAEO,KAAK8D,UAGvBN,EAAeuB,KAAK/E,iCAExBgF,uBAAA,SAAuBC,GACnB,IAAIC,EAAalF,KAAKgE,gBAAgBkB,YAClCD,GAASjF,KAAKyE,2BAA2BS,IACzClF,KAAKkE,OAAOiB,SACZnF,KAAKyE,0BAA0BS,MAGvCE,aAAA,WACIpF,KAAKiE,aAAaoB,MAAMvC,QAAU,UAEtCwC,aAAA,WACItF,KAAKiE,aAAaoB,MAAMvC,QAAU,WAGtCyC,uBAAA,WACqC,OAA7BvF,KAAK2E,sBACL3E,KAAKyD,QAAQ+B,SAASxF,KAAKP,EAAEO,KAAK2E,sBAClC3E,KAAK2E,oBAAsB,KAC3B3E,KAAK4E,qBAAuB,SAIpCa,mBAAA,WAAqB,IAAAC,EAAA1F,KACb2F,EAAO3F,KAAKqC,YAAYuD,MAAMC,OAAOC,cACrCC,EAAU,EAoBd,GAnBA/F,KAAKP,EAAEO,KAAKiE,cAAc+B,KAAK,MAAMC,KAAK,SAACC,EAAGC,GAC1C,IAAIC,EAAoBV,EAAKjG,EAAE0G,GAC/B,GAAY,IAARR,EACAS,EAAkBC,OAClBN,QAEC,CACD,IAAIO,EAAWF,EAAkBG,KAAK,eAClCC,EAASJ,EAAkBG,KAAK,WAC/BC,EAAOC,WAAaD,EAAOE,SAAWF,EAAOhC,UAAoC,GAAxB8B,EAASK,QAAQhB,IAC3ES,EAAkBC,OAClBN,KAEAK,EAAkBQ,UAI9B5G,KAAK6E,mBAA+B,EAAVkB,EAC1B/F,KAAKuF,yBACU,GAAXQ,EAAc,CACd,IAAIc,EAAuB7G,KAAK8G,0BAChC9G,KAAK+G,gBAAgBF,EAAsB,OAInDG,iBAAA,SAAiBC,GACTjH,KAAKqC,YAAYuD,QACjB5F,KAAKqC,YAAYuD,MAAQ,GACzB5F,KAAKkH,MAAMD,OAInBE,cAAA,WACInH,KAAKuF,yBACLvF,KAAKgH,kBAAiB,GACtBhH,KAAKoF,kBAGTgC,mBAAA,SAAmBC,EAAeC,GAAU,IAAAC,EAAAvH,KACpCwH,EAAWH,EAAcX,OACzBJ,EAAWe,EAAc1B,KACzB8B,EAAgBzH,KAAKP,EAAE,SAASiI,KAAK,SAAUF,GACnDC,EAAclB,KAAK,cAAeD,EAASR,eAAe6B,SAAS3H,KAAKiE,cACxEwD,EAAclB,KAAK,SAAUc,GAC7B,IAAIO,EAAeH,EAAcI,IAAI,GAGjCC,EAAqB9H,KAAKyD,QAAQsE,0BAA0BH,EAAcP,GAC1EW,EAAaX,EAAc7C,SACd6C,EAAcZ,UAEbuB,EACdF,EAAmBG,eAAc,GAC5BD,GACLF,EAAmBI,QAAQF,GAE/BF,EAAmBK,WAAW,WACTV,EAAclB,KAAK,gBACpC6B,GACAb,EAAKlF,YAAYgG,UAGJ,SAAbC,EAAcC,GACd,IAAIlB,EAAcX,OAAlB,CAEA,IAAInE,EAAgBgF,EAAK9H,EAAE,SACvB+I,EAAejG,EAAcsF,IAAI,GAEjCY,EAAY,SAACC,EAAYC,EAAQC,GACjCvB,EAAcZ,SAAWiC,EACzBZ,EAAmBe,OAAOH,GAC1BjB,EAAclB,KAAK,gBAAiBoC,GACpCpG,EAAcgE,KAAK,gBAAiBqC,IAGpCE,EAAa,WACbhB,EAAmBG,eAAc,GACjCH,EAAmBI,QAAQb,EAAc7C,UACzCiE,GACI,EACA,WACQpB,EAAc7C,UAElB8D,GAAW,IAEf,MAEJ/F,EAAcqG,SACdtB,KAGAyB,EAA6B,WAC7BD,IACAvB,EAAKJ,iBAETI,EAAK9D,QAAQnB,0BACTkG,EACAnB,EACA0B,EACAxB,EAAK/C,UAETiE,GAAW,EAAMK,EAAYC,GAC7BxG,EAAcyG,aAAazB,EAAKvD,iBAC5BuE,GACAjB,KAIRG,EACKwB,UAAU,WAAA,OAAM1B,EAAK9D,QAAQyF,QAAQzB,KACrC0B,SAAS,WAAA,OAAM5B,EAAK9D,QAAQ+B,SAASiC,KAEtCJ,EAAcZ,SACd6B,GAAW,GAEXb,EAAclB,KAAK,gBAAkB,WAC7Bc,EAAc7C,UAElB8D,GAAW,QAGvBxB,wBAAA,WACI,OAAO9G,KAAKP,EAAEO,KAAKiE,cAAc+B,KAAK,iDAAiDoD,aAE3FrC,gBAAA,SAAgBF,EAAsBwC,GAClCrJ,KAAK4E,qBAAuByE,EAC5BrJ,KAAK2E,oBAAsBkC,EAAqBwC,GAChDrJ,KAAKyD,QAAQyF,QAAQlJ,KAAKP,EAAEO,KAAK2E,yBAErC2E,aAAA,SAAaC,GACT,IAAI1C,EAAuB7G,KAAK8G,0BAChC,GAAkC,EAA9BD,EAAqB2C,OAAY,CAKjC,IAAIH,EACJ,GALIrJ,KAAK6E,qBACL7E,KAAKgF,wBAAuB,GAC5BhF,KAAKsF,gBAGwB,OAA7BtF,KAAK2E,oBACL0E,EAAQE,EAAO,EAAI1C,EAAqB2C,OAAS,OAIjD,GADAxJ,KAAKyD,QAAQ+B,SAASxF,KAAKP,EAAEO,KAAK2E,sBAC9B4E,EAAM,CACN,IAAIE,EAAWzJ,KAAK4E,qBAAuB,EAC3CyE,EAAQI,EAAW5C,EAAqB2C,OAASC,EAAW,MACzD,CACH,IAAIA,EAAWzJ,KAAK4E,qBAAuB,EAC3CyE,EAAoB,GAAZI,EAAgBA,EAAW5C,EAAqB2C,OAAS,EAGzExJ,KAAK+G,gBAAgBF,EAAsBwC,OAGnDnC,MAAA,SAAMwC,GACF1J,KAAKqC,YAAYgD,MAAMnC,MAAsC,IAA9BlD,KAAKqC,YAAYuD,MAAM4D,OAAa,EAAI,KACvExJ,KAAKyF,qBAEDzF,KAAK6E,oBACD6E,GACA1J,KAAKgF,uBAAuB0E,GAChC1J,KAAKsF,gBAELtF,KAAKoF,kBAGbuE,OAAA,WACI,IAAIlJ,EAAiBT,KAAKP,EAAEO,KAAKmC,eACjCnC,KAAKyD,QAAQmG,cAAcnJ,GAC3BT,KAAK6J,eAAepJ,GACpBT,KAAK8J,mBAAmB9J,KAAKP,EAAEO,KAAK+D,WAAYtD,MAEpDsJ,QAAA,WACQ/J,KAAK0D,WACL1D,KAAK0D,YAGT1D,KAAK8E,UAAUkF,OAAO,UAAWhK,KAAKqE,iBACvB2F,OAAO,UAAWhK,KAAKuE,kBAEjB,OAAjBvE,KAAKyD,SACLzD,KAAKyD,QAAQsG,UAEG,OAAhB/J,KAAKkE,QACLlE,KAAKkE,OAAO+F,UAGZjK,KAAKkK,iBACLlK,KAAKkK,qBAGbxH,WAAA,WACI1C,KAAK6J,eAAe7J,KAAKP,EAAEO,KAAKmC,mBAEpCgI,eAAA,WACInK,KAAK8J,mBAAmB9J,KAAKP,EAAEO,KAAK+D,WAAY/D,KAAKP,EAAEO,KAAKmC,mBAEhE0H,eAAA,SAAepJ,GACPT,KAAKyD,QAAQf,YACb1C,KAAKyD,QAAQf,WAAWjC,MAEhCqJ,mBAAA,SAAmBM,EAAY3J,GAC3B,IAAI+D,EAAWxE,KAAKmE,cAChBnE,KAAKwE,WAAWA,IACZA,GACAxE,KAAKqC,YAAYgD,MAAMvC,QAAU,OACjC9C,KAAKyD,QAAQ/C,QAAQD,GAErB2J,EAAWJ,OAAO,YAAahK,KAAKsE,oBACpCtE,KAAK8E,UAAUkF,OAAO,UAAWhK,KAAKqE,iBAEtC5D,EAAeuJ,OAAO,QAAShK,KAAKoE,oBACpCpE,KAAK8E,UAAUkF,OAAO,UAAWhK,KAAKuE,oBAGtCvE,KAAKqC,YAAYgD,MAAMvC,QAAU,eACjC9C,KAAKyD,QAAQjD,OAAOC,GAEpB2J,EAAWC,UAAUrK,KAAKsE,oBAC1BtE,KAAK8E,UAAUwF,QAAQtK,KAAKqE,iBAE5B5D,EAAe8J,MAAMvK,KAAKoE,oBAC1BpE,KAAK8E,UAAUwF,QAAQtK,KAAKuE,mBAEhCvE,KAAKwE,SAASA,MAGtBgG,cAAA,SAAczG,EAAWmG,GAAgB,IAAAO,EAAAzK,KACrCA,KAAK+D,UAAUA,EACf/D,KAAKkK,gBAAgBA,EACrB,IAAIE,EAAapK,KAAKP,EAAEsE,GACxB/D,KAAKmC,cAAgBnC,KAAK8D,SAAS4G,cAAc,MACjD,IAAIjK,EAAiBT,KAAKP,EAAEO,KAAKmC,eACjC1B,EAAe2B,IAAIS,GACnBpC,EAAekH,SAAS5D,GACxB,IAAI4G,EAAmB3K,KAAKP,EAAE,SAC9BO,KAAKgE,gBAAkB2G,EAAiB9C,IAAI,GAC5C8C,EAAiBhD,SAAS3H,KAAKmC,eAC/B,IAAIyI,EAAe5K,KAAKP,EAAE,4CAC1BO,KAAKqC,YAAcuI,EAAa/C,IAAI,GACpC+C,EAAaxI,IAAIa,GACjB2H,EAAajD,SAAS3H,KAAKgE,iBAE3B,IAAI6G,EAAgB7K,KAAKP,EAAE,SAAS2C,IAAI,CAACU,QAAU,SA+BnD,OA9BA+H,EAAclD,SAAS5D,GACvB/D,KAAKiE,aAAe4G,EAAchD,IAAI,GAGtCgD,EAAczI,IAAIkB,GAElBtD,KAAKqE,gBAAkB,WACnBoG,EAAK/F,cAAe,GAGxB1E,KAAKsE,mBAAqB,WACtBmG,EAAK/F,cAAe,GAExB1E,KAAKuE,iBAAmB,SAAAuG,GACd/G,IAAc+G,EAAMC,QAAUN,EAAKhL,EAAEuL,SAASjH,EAAW+G,EAAMC,SACjEN,EAAKtD,iBAGbnH,KAAKoE,mBAAqB,SAAA0G,GACO,SAAzBA,EAAMC,OAAOE,UACbR,EAAKhL,EAAEgL,EAAKpI,aAAa6I,IAAI,IAAI7C,QACjCoC,EAAK5F,oBAAsB4F,EAAKhH,QAAQ0H,sBAAsBL,KAC9DL,EAAKzF,wBAAuB,GAC5ByF,EAAKnF,iBAGbtF,KAAKyD,QAAQ2H,KAAK,CACdrH,UAAUqG,EAAYjI,cAAc1B,EACpCuD,gBAAgB2G,EAAkBtI,YAAYuI,EAC9C3G,aAAa4G,IACV,CAACT,WAAAA,EAAY3J,eAAAA,EAAgBoK,cAAAA,EAAeD,aAAAA,MAGvD7F,KAAA,SAAKqF,EAAY3J,EAAgBoK,EAAeD,EAActD,EAAU+D,EAAYlH,GAAa,IAAAmH,EAAAtL,KAC7FA,KAAKmE,YAAYA,EACjBnE,KAAKkE,OAAS,IAAIN,EAAO5D,KAAKqC,YAAarC,KAAKiE,aAAc,CAC1DsH,UAAW,eACXC,UAAW,CACPC,gBAAiB,CAACC,SAAQ,GAC1B9E,KAAM,CAAC8E,SAAQ,GACfC,KAAM,CAACD,SAAQ,MAGvB1L,KAAKyD,QAAQmG,cAAcnJ,GAC3BT,KAAK6J,eAAepJ,GACpBT,KAAK8J,mBAAmBM,EAAY3J,GAGpCT,KAAKP,EAAE,WACH,IAAImM,EAAUP,IACdC,EAAK7L,EAAEwG,KAAK2F,EACR,SAACvC,EAAOwC,GACJP,EAAKlE,mBAAmByE,EAAIvE,KAGpCgE,EAAKzG,mBAAsC,EAAjB+G,EAAQpC,OAClC8B,EAAKtG,wBAAuB,KAMhC6F,EAAc5B,UAAU,WAAA,OAAMqC,EAAK/F,2BAEnCqF,EAAakB,QAAQ,WAAA,OAAMR,EAAK7H,QAAQ9C,QAAQF,KACnCsL,SAAS,WACGT,EAAK5G,cACN4G,EAAK7H,QAAQ7C,SAASH,KAE9CmK,EAAaoB,GAAG,UAAW,SAAClB,GAKxB,IAJuC,GAAnC,CAAC,GAAI,GAAI,IAAInE,QAAQmE,EAAMmB,QAA6B,GAAfnB,EAAMmB,OAAcX,EAAKjJ,YAAYuD,QAC9EkF,EAAMoB,iBAGS,IAAfpB,EAAMmB,MACNX,EAAKhC,cAAa,QAEjB,GAAmB,IAAfwB,EAAMmB,MACsB,OAA7BX,EAAK3G,qBAAgC2G,EAAKzG,oBAC1CyG,EAAKhG,eAETgG,EAAKhC,cAAa,QAEjB,GAAmB,GAAfwB,EAAMmB,MACNX,EAAKjJ,YAAYuD,OAClB0F,EAAKnE,qBAGR,GAAmB,GAAf2D,EAAMmB,QAINX,EAAKjJ,YAAYuD,MACtB,CACI,IAAIuG,EAAUb,EAAK7L,EAAE6L,EAAKnJ,eAAe6D,KAAK,WAAWoG,OACzD,GAAID,EAAQ3C,OACS2C,EAAQ5F,KAAK,gBAC9BuC,GAEJwC,EAAKtG,wBAAuB,IAIO,GAAvC,CAAC,GAAI,GAAI,GAAI,GAAG2B,QAAQmE,EAAMmB,QAC9BX,EAAK/F,2BAEbqF,EAAaoB,GAAG,QAAS,SAAClB,GACtB,GAAmB,IAAfA,EAAMmB,OAA8B,GAAfnB,EAAMmB,MAC3B,GAAIX,EAAK3G,oBAAqB,CACC2G,EAAK7L,EAAE6L,EAAK3G,qBACA4B,KAAK,gBAC5C6B,GACAkD,EAAKnE,oBACF,CAIH,IAHA,IAAIxB,EAAO2F,EAAKjJ,YAAYuD,MAAMC,OAAOC,cACrCuG,EAAgBf,EAAKrH,aAAaqI,iBAAiB,MACnD1E,EAAe,KACV1B,EAAI,EAAGA,EAAImG,EAAc7C,SAAUtD,EAAG,CAC3C,IAAIqG,EAAKF,EAAcnG,GACvB,GAAIqG,EAAGC,YAAY3G,OAAOC,eAAiBH,EAC3C,CACIiC,EAAa2E,EACb,OAGR,GAAI3E,EAAc,CACd,IAAIH,EAAgB6D,EAAK7L,EAAEmI,GAE3B,IADaH,EAAclB,KAAK,UACpBE,SACKgB,EAAclB,KAAK,gBAChCoC,GAEJ2C,EAAKtE,kBAAiB,SAIV,IAAf8D,EAAMmB,OACXX,EAAKnE,kBAGbyD,EAAaoB,GAAG,QAAS,WACrBV,EAAKpE,OAAM,WC9cvB,SAASuF,EAAchM,EAAgBuH,GACnCvH,EAAeuF,KAAK,UAAU0B,KAAK,WAAYM,GCA/C,SADE0E,EACUC,EAAenN,EAAeC,GACtC,IAAImN,EAAiBnN,EAAEkN,GAEvBnN,EAAcqN,WAAW,WAAA,OAAID,EAAejK,SAAS,aACrDnD,EAAcsN,aAAa,WAAA,OAAIF,EAAejK,SAAS,eAEvD,IAAIoK,EAAUJ,EAAcK,GAAIL,EAAcK,GAAGlH,cAAc6G,EAAcM,KAAKnH,cAC9EoH,EAAY1N,EAAc2N,eACzB3N,EAAc4N,gBACf5N,EAAc4N,cAAc,WAAA,OAAOF,EAAP,oBAAoCH,EAApC,QAEhCvN,EAAc6N,MAAM,KACpB,IAAIC,EAAaV,EAAeW,QAAQ,eACxC,GAAyB,GAArBD,EAAW9D,OAAa,CACxB,IAAIgE,EAASF,EAAWtH,KAAX,cAA8B2G,EAAcK,GAA5C,MACb,GAAkB,EAAdQ,EAAOhE,OACX,CACI,IAAI6D,EAAQG,EAAO3F,IAAI,GACXwF,EAAMI,aAAa,QAClBd,EAAcK,KACvBxN,EAAc6N,MAAQA,IAKlCrN,KAAK+E,KAAO,SAAC2I,GACTf,EAActH,MAAMvC,QAAQ,OAC5B,IAAIiB,EAAYD,SAAS4G,cAAc,OAFvBiD,EAIgDD,EAAGlD,cAAczG,EAC7E,WAAA,OAAIA,EAAU6J,WAAWC,YAAY9J,KADpCqG,EAJWuD,EAIXvD,WAAY3J,EAJDkN,EAIClN,eAAgBoK,EAJjB8C,EAIiB9C,cAAeD,EAJhC+C,EAIgC/C,aAEhDR,EAAW0D,YAAYnB,GACvBe,EAAG3I,KAAKqF,EAAY3J,EAAgBoK,EAAeD,EAC/C,WACIgC,EAAemB,QAAQ,UACvBnB,EAAemB,QAAS,uBAE5B,WAAA,OAAMnB,EAAe5G,KAAK,WAC1B,WAAA,OAAM2G,EAAcnI,YCtChC,SADEwJ,EACUjK,EAAWvE,GAEnBA,EAAcqN,WAAWrN,EAAcyO,eAAe,cAAczO,EAAcqN,WAAW,WAAA,OAAI,GACjGrN,EAAcsN,aAAatN,EAAcyO,eAAe,gBAAgBzO,EAAcsN,aAAa,WAAA,OAAI,GAEvG,IAAIC,EAAShJ,EAAUiJ,GACnBE,EAAY1N,EAAc2N,eACzB3N,EAAc4N,gBACf5N,EAAc4N,cAAc,WAAA,OAAOF,EAAP,qBAAqCH,IAGrEvN,EAAc6N,MAAM7N,EAAcyO,eAAe,SAASzO,EAAc6N,MAAM,KAC9ErN,KAAK+E,KAAO,SAAC2I,GAAO,IAAAC,EACgDD,EAAGlD,cAAczG,EAC7E,WACI,KAAOA,EAAUmK,YAAYnK,EAAU8J,YAAY9J,EAAUmK,cAFhE9D,EADWuD,EACXvD,WAAY3J,EADDkN,EACClN,eAAgBoK,EADjB8C,EACiB9C,cAAeD,EADhC+C,EACgC/C,aAIhD8C,EAAG3I,KAAKqF,EAAY3J,EAAgBoK,EAAeD,EAC/C,WACIR,EAAW2D,QAAS,uBAExB,WAAA,OAAMvO,EAAcoM,SACpBpM,EAAcyO,eAAe,eAAezO,EAAc2E,YAAY,WAAA,OAAI,SCbrFR,EAAQlE,EHLP0O,aAEF,SAAAA,EAAYC,EAAgB5O,EAAeC,GAAE,IAAAiG,EAAA1F,KAYrCN,EAAMD,EAAEE,OAAO,GAXF,CACbwN,eAAgB,8BAChBkB,kBAAmB,gBACnBC,kBAAoB,OACpBC,uBAAwB,wBACxBC,mBAAoB,eACpBC,kBAAmB,QACnBC,8BAA+B,QAC/BC,qBAAsB,GACtBC,iBAAkB,IAEWpP,GACjCQ,KAAKR,cAAgBC,EAAEE,OAAOH,EAAeE,GAC7CM,KAAKP,EAAIA,EACTO,KAAKoO,eAAiBA,EACtBpO,KAAK6O,gBAAkB,KAEvB7O,KAAK8O,0BAA4B,SAAClH,EAAcpB,GAC5C,IAAIiB,EAAgBhI,EAAEmI,GACtBH,EAActH,SAASX,EAAc8O,mBACrC,IAAIS,EAAsBrJ,EAAKjG,EAAL,wMAI1BsP,EAAqBpH,SAASC,GAC9B,IAAIvH,EAAY0O,EAAqB/I,KAArB,0BACK+I,EAAqB/I,KAArB,SACNL,KAAKa,EAAOb,MAG3B,IAAIyI,EAAiB1I,EAAK0I,eAC1B,MAAO,CACHvF,OADG,SACIH,GAAarI,EAAUqH,KAAK,UAAWgB,IAC9CR,QAFG,SAEKF,GAAa3H,EAAUqH,KAAK,WAAYM,IAChDC,cAHG,SAGWA,GAAgBmG,EAAehO,cAAcC,EAAW4H,IACtEE,WAJG,SAIQQ,GACHtI,EAAU2L,GAAG,SAAUrD,GACvBlB,EAAcuE,GAAG,QAAS,SAAAlB,GAClBlD,IAAiBkD,EAAMC,SAAUtL,EAAEuL,SAASpD,EAAckD,EAAMC,SAChEpC,SAOxB3I,KAAKgP,0BAA4B,SAACxG,EAAcyG,EAAYC,EAAoBC,GAC5E,IAAI5M,EAAgB9C,EAAE+I,GAClBtI,EAAWwF,EAAKjG,EAAL,WAAkBkG,KAAKsJ,EAAWtJ,MACjDzF,EAASyH,SAASpF,GACd0M,EAAWzK,UACXkB,EAAK0I,eAAenO,2BAA2BC,GACnD,IAAIsC,EAAUkD,EAAKjG,EAAE,2GAGhB2C,IAAI,QAAS,QAcb4J,GAAG,QAAS,WAAA,OAAMoD,WAAWF,EAAoB,KACjDvH,SAASpF,GACTmF,KAAK,WAAYyH,GACtB5M,EAAcpC,SAASX,EAAciP,mBACrCjM,EAAQrC,SAASX,EAAckP,+BAC3BhJ,EAAK0I,eAAe9L,2BACpBoD,EAAK0I,eAAe9L,0BAA0BC,EAAeC,+BAMzE4I,KAAA,SAAKlJ,GACDA,EAAI6B,UAAU5D,SAASH,KAAKR,cAAc2N,gBAC1CjL,EAAIC,cAAchC,SAASH,KAAKR,cAAcgP,oBAC9CtM,EAAI+B,aAAa9D,SAASH,KAAKR,cAAc6O,mBAC7CnM,EAAI8B,gBAAgB7D,SAASH,KAAKR,cAAcmP,sBAChDzM,EAAIG,YAAYlC,SAASH,KAAKR,cAAcoP,kBACxC5O,KAAKoO,eAAenM,QACpBjC,KAAKoO,eAAenM,OAAOC,GAC/BlC,KAAK6O,gBAAkB7O,KAAKqP,YAAYnN,EAAIG,gBAGhDgN,YAAA,SAAYzE,GACR,IAAIyC,EAAQrN,KAAKR,cAAc6N,MAC/B,GAAW,MAAPA,EASJ,OAAO,KARH,IAAIiC,EAAWtP,KAAKR,cAAc4N,gBAC9BmC,EAAelC,EAAMI,aAAa,OAGtC,OAFA7C,EAAa4E,KAAK,KAAMF,GACxBjC,EAAMoC,aAAa,MAAMH,GAClB,WACHjC,EAAMoC,aAAa,MAAMF,OAMrCxF,QAAA,WACQ/J,KAAK6O,iBACL7O,KAAK6O,qBAIb9G,0BAAA,SAA0BH,EAAcpB,GACpC,OAAOxG,KAAK8O,0BAA0BlH,EAAcpB,MAGxDlE,0BAAA,SAA0BkG,EAAcyG,EAAYC,EAAoBC,GACpE,OAAOnP,KAAKgP,0BAA0BxG,EAAcyG,EAAYC,EAAoBC,MAIxFhE,sBAAA,SAAsBL,GAClB,IAAMC,EAASD,EAAMC,OACfE,EAAWF,EAAOE,SACxB,QAAqB,UAAZA,GAAqC,QAAZA,GAAuD,UAAjCF,EAAO2E,cAAczE,aAGjFrB,cAAA,SAAcnJ,GACNT,KAAKR,cAAcqN,cACnBpM,EAAeN,SAAS,YAGxBH,KAAKR,cAAcsN,gBACnBrM,EAAeN,SAAS,iBAIhCuC,WAAA,SAAWjC,GACJT,KAAKoO,eAAe1L,YACnB1C,KAAKoO,eAAe1L,WAAWjC,MAGvCyI,QAAA,SAAQzB,GACJA,EAActH,SAASH,KAAKR,cAAc+O,2BAG9C/I,SAAA,SAASiC,GACLA,EAAclH,YAAYP,KAAKR,cAAc+O,2BAGjD/N,OAAA,SAAOC,GACHT,KAAKoO,eAAe5N,OAAOC,GAC3BgM,EAAchM,GAAgB,MAGlCC,QAAA,SAAQD,GACJT,KAAKoO,eAAe1N,QAAQD,GAC5BgM,EAAchM,GAAgB,MAGlCE,QAAA,SAAQF,GACJT,KAAKoO,eAAezN,QAAQF,MAGhCG,SAAA,SAASH,GACLT,KAAKoO,eAAexN,SAASH,SGnKhCkD,EAiCHA,OC3CF,SAA8BgM,EAAYC,EAAcnQ,GACpD,IAAMoQ,EAAYF,EAAWG,OAAO,GAC9BC,EAAiBF,EAAU/J,cACjC,GAAIiK,GAAkBF,EAClB,MAAM,IAAIhM,UAAJ,gBAA8B8L,EAA9B,4CAEV,IAAMK,EAAmBD,EAAiBJ,EAAWM,MAAM,GACrDC,EAAyBzQ,EAAE0Q,GAAGH,GAC9BI,EAAO,iBAAoBT,EAEjC,SAASU,EAAazE,GAClB,OAAO5L,KAAKiG,KAAM,WACd,IAAIqK,EAAK7Q,EAAEO,MACPuQ,EAAWD,EAAG/J,KAAK6J,GACnBI,EAAkC,iBAAZ5E,EAC1B,IAAK2E,EAAU,CACX,GAAIC,GAAgB,UAAUC,KAAK7E,GAC/B,OAIJ2E,EAAWX,EAAa5P,KAFkB,iBAAZ4L,EAAsBA,EAAQ,KAGxD,WACI0E,EAAGI,WAAWN,KAEtBE,EAAG/J,KAAK6J,EAASG,GAGrB,GAAIC,EAAc,CACd,IAAIG,EAAa/E,EACjB,GAAoC,oBAAzB2E,EAASI,GAChB,MAAM,IAAI9M,UAAJ,oBAAkC8M,EAAlC,KAEVJ,EAASI,QAKrBlR,EAAE0Q,GAAGH,GAAoBK,EAGzB5Q,EAAE0Q,GAAGR,GAAc,WACf,OAAOlQ,EAAEO,MAAMuG,KAAK6J,IAGxB3Q,EAAE0Q,GAAGH,GAAkBY,WAAa,WAEhC,OADAnR,EAAE0Q,GAAGH,GAAoBE,EAClBG,GDpCPQ,CAAqB,gBACjB,SAACC,EAAStR,EAAekE,GACrB,IAAIF,EAAiB,MACrBhE,EAAeC,EAAEE,OAAO,GAAIH,IAEVuR,oBACdvR,EAAcuR,mBAAmBD,EAAStR,GAG1CgE,EADAhE,EAAcgE,eACGhE,EAAcgE,eAGdhE,EAAcoM,QACzB,IAAIoC,EAAmB8C,EAAStR,GAChC,IAAIkN,EAAsBoE,EAAStR,EAAeC,GAG5D,IAAIgE,EAAQ,KACZ,GAAIjE,EAAciE,QACdA,EAAUjE,EAAciE,YAE5B,CACI,IAAI2K,EAAiB5O,EAAcwR,OAC7B,IAAIzR,EAAcC,EAAeC,GACjC,IAAI4B,EAAa7B,EAAeC,GACtCgE,EAAU,IAAI0K,EAAWC,EAAgB5O,EAAeC,GAI5D,OADkB,IAAI8D,EAAYC,EAAgBC,EAASjE,EAAekE,EAAWC,EAAQlE,IA7BhGA,EAiCHA","sourcesContent":["class Bs4AdapterCss {\r\n\r\n    constructor(configuration, $) {\r\n        const defaults = {\r\n            selectedPanelFocusClass : 'focus',\r\n            selectedPanelDisabledClass: 'disabled',\r\n            selectedItemContentDisabledClass: 'disabled',\r\n            dropDownItemDisabledClass: 'disabled'\r\n        };\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.addClass(this.configuration.selectedItemContentDisabledClass )\r\n    }\r\n\r\n    DisabledStyle($checkBox, isDisbaled){\r\n        if (isDisbaled) \r\n            $checkBox.addClass(this.configuration.dropDownItemDisabledClass);\r\n        else\r\n            $checkBox.removeClass(this.configuration.dropDownItemDisabledClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.removeClass(this.configuration.selectedPanelDisabledClass)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.addClass(this.configuration.selectedPanelDisabledClass)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        $selectedPanel.addClass(this.configuration.selectedPanelFocusClass);\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        $selectedPanel.removeClass(this.configuration.selectedPanelFocusClass);\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterCss;\r\n","const defSelectedPanelStyle = {'margin-bottom': '0', 'height': 'auto'};\r\nconst defSelectedItemStyle = {'padding-left': '0px', 'line-height': '1.5em'};\r\nconst defRemoveSelectedItemButtonStyle = {'font-size':'1.5em', 'line-height': '.9em'};\r\n\r\nclass Bs4AdapterJs {\r\n    constructor(configuration, $) {\r\n        const defaults = {\r\n            selectedPanelDefMinHeight: 'calc(2.25rem + 2px)',\r\n            selectedPanelLgMinHeight:  'calc(2.875rem + 2px)',\r\n            selectedPanelSmMinHeight:  'calc(1.8125rem + 2px)',\r\n            selectedPanelDisabledBackgroundColor: '#e9ecef',\r\n            selectedPanelFocusBorderColor: '#80bdff',\r\n            selectedPanelFocusBoxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)',\r\n            selectedPanelFocusValidBoxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)',\r\n            selectedPanelFocusInvalidBoxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)',\r\n            filterInputColor: '#495057',\r\n            selectedItemContentDisabledOpacity: '.65',\r\n            dropdDownLabelDisabledColor: '#6c757d'\r\n        };\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n    }\r\n\r\n    OnInit(dom){\r\n        dom.selectedPanel.css(defSelectedPanelStyle);\r\n        dom.filterInput.css(\"color\", this.configuration.filterInputColor);\r\n    }\r\n\r\n    \r\n    CreateSelectedItemContent($selectedItem, $button){\r\n        $selectedItem.css(defSelectedItemStyle);\r\n        $button.css(defRemoveSelectedItemButtonStyle);\r\n    }\r\n\r\n    DisableSelectedItemContent($content){\r\n        $content.css(\"opacity\", this.configuration.selectedItemContentDisabledOpacity )\r\n    }\r\n\r\n    DisabledStyle($checkBox, isDisbaled){\r\n        $checkBox.siblings('label').css('color', isDisbaled?this.configuration.dropdDownLabelDisabledColor:'')\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"form-control-lg\")){\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelLgMinHeight);\r\n        } else if ($selectedPanel.hasClass(\"form-control-sm\")){\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelSmMinHeight);\r\n        } else {\r\n            $selectedPanel.css(\"min-height\", this.configuration.selectedPanelDefMinHeight);\r\n        }\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": \"\"})\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        $selectedPanel.css({\"background-color\": this.configuration.selectedPanelDisabledBackgroundColor})\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        if ($selectedPanel.hasClass(\"is-valid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.configuration.selectedPanelFocusValidBoxShadow);\r\n        } else if ($selectedPanel.hasClass(\"is-invalid\")){\r\n            $selectedPanel.css(\"box-shadow\", this.configuration.selectedPanelFocusInvalidBoxShadow);\r\n        } else {\r\n            $selectedPanel\r\n                .css(\"box-shadow\", this.configuration.selectedPanelFocusBoxShadow)\r\n                .css(\"border-color\", this.configuration.selectedPanelFocusBorderColor);\r\n        }\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n            $selectedPanel.css(\"box-shadow\", \"\" ).css(\"border-color\", \"\")\r\n    }\r\n}\r\n\r\nexport default Bs4AdapterJs;\r\n","import Popper from 'popper.js'\r\n\r\nconst defSelectedPanelStyleSys = {'display':'flex', 'flex-wrap':'wrap', 'list-style-type':'none'};  // remove bullets since this is ul\r\nconst defFilterInputStyleSys   = {'width':'2ch', 'border':'0', 'padding':'0', 'outline':'none', 'background-color':'transparent' };\r\nconst defDropDownMenuStyleSys  = {'list-style-type':'none'}; // remove bullets since this is ul\r\n\r\n// jQuery used for:\r\n// $.extend, $.contains, $(\"<div>\"), $(function(){}) aka ready\r\n// $e.trigger, $e.unbind, $e.on; but namespaces are not used;\r\n// events: \"focusin\", \"focusout\", \"mouseover\", \"mouseout\", \"keydown\", \"keyup\", \"click\"\r\n// $e.show, $e.hide, $e.focus, $e.css\r\n// $e.appendTo, $e.remove, $e.find, $e.closest, $e.prev, $e.data, $e.val\r\n\r\nclass MultiSelect {\r\n    constructor(optionsAdapter, adapter, configuration, onDispose, window, $) {\r\n        if (typeof Popper === 'undefined') {\r\n            throw new TypeError('DashboardCode BsMultiSelect require Popper.js (https://popper.js.org)')\r\n        }\r\n        // readonly\r\n        this.adapter = adapter;\r\n        this.window = window;\r\n        this.document = window.document;\r\n        this.onDispose=onDispose;\r\n        this.$ = $;\r\n        \r\n        this.configuration = configuration;\r\n        \r\n        this.container = null;\r\n        this.selectedPanel = null;\r\n        this.filterInputItem = null;\r\n        this.filterInput = null;\r\n        this.dropDownMenu = null;\r\n        this.popper = null;\r\n        this.getDisabled=null;\r\n        // removable handlers\r\n        this.selectedPanelClick  = null;\r\n        this.documentMouseup   = null;\r\n        this.containerMousedown   = null;\r\n        this.documentMouseup2   = null;\r\n        // state\r\n        this.disabled=null;\r\n        this.filterInputItemOffsetLeft = null; // used to detect changes in input field position (by comparision with current value)\r\n        this.skipFocusout = false;\r\n        this.hoveredDropDownItem = null;\r\n        this.hoveredDropDownIndex = null;\r\n        this.hasDropDownVisible = false;\r\n\r\n        // jquery adapters\r\n        this.$document= $(this.document);\r\n\r\n        //this.createContainer();\r\n        optionsAdapter.init(this);\r\n    }\r\n    updateDropDownPosition(force) {\r\n        let offsetLeft = this.filterInputItem.offsetLeft;\r\n        if (force || this.filterInputItemOffsetLeft!=offsetLeft){\r\n            this.popper.update();\r\n            this.filterInputItemOffsetLeft=offsetLeft;\r\n        }\r\n    }\r\n    hideDropDown() {\r\n        this.dropDownMenu.style.display = 'none';\r\n    }\r\n    showDropDown() {\r\n        this.dropDownMenu.style.display = 'block';\r\n    }\r\n    // Public methods\r\n    resetDropDownMenuHover() {\r\n        if (this.hoveredDropDownItem !== null) {\r\n            this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n            this.hoveredDropDownItem = null;\r\n            this.hoveredDropDownIndex = null;\r\n        }\r\n    }\r\n\r\n    filterDropDownMenu() {\r\n        let text = this.filterInput.value.trim().toLowerCase();\r\n        let visible = 0;\r\n        this.$(this.dropDownMenu).find('LI').each((i, dropDownMenuItem) => {\r\n            let $dropDownMenuItem = this.$(dropDownMenuItem);\r\n            if (text == '') {\r\n                $dropDownMenuItem.show();\r\n                visible++;\r\n            }\r\n            else {\r\n                let itemText = $dropDownMenuItem.data(\"option-text\");\r\n                let option = $dropDownMenuItem.data(\"option\");\r\n                if (!option.selected && !option.hidden && !option.disabled && itemText.indexOf(text)>=0) {\r\n                    $dropDownMenuItem.show();\r\n                    visible++;\r\n                } else {\r\n                    $dropDownMenuItem.hide();\r\n                }\r\n            }\r\n        });\r\n        this.hasDropDownVisible = visible > 0;\r\n        this.resetDropDownMenuHover();\r\n        if (visible == 1) {\r\n            let visibleNodeListArray = this.getVisibleNodeListArray();\r\n            this.hoverInInternal(visibleNodeListArray, 0)\r\n        }\r\n    }\r\n\r\n    clearFilterInput(updatePosition) {\r\n        if (this.filterInput.value) {\r\n            this.filterInput.value = '';\r\n            this.input(updatePosition);\r\n        }\r\n    }\r\n\r\n    closeDropDown() {\r\n        this.resetDropDownMenuHover();\r\n        this.clearFilterInput(true);\r\n        this.hideDropDown();\r\n    }\r\n    \r\n    appendDropDownItem(optionElement, onChange) {\r\n        let isHidden = optionElement.hidden;\r\n        let itemText = optionElement.text;\r\n        let $dropDownItem = this.$(\"<LI/>\").prop(\"hidden\", isHidden)\r\n        $dropDownItem.data(\"option-text\", itemText.toLowerCase()).appendTo(this.dropDownMenu);\r\n        $dropDownItem.data(\"option\", optionElement);\r\n        let dropDownItem = $dropDownItem.get(0);\r\n        \r\n        //let optionData = {\"optionId\":optionElement.value, \"itemText\": optionElement.text }\r\n        let adjustDropDownItem = this.adapter.CreateDropDownItemContent(dropDownItem, optionElement);\r\n        let isDisabled = optionElement.disabled;\r\n        let isSelected = optionElement.selected;\r\n\r\n        if (isSelected && isDisabled)\r\n            adjustDropDownItem.disabledStyle(true);\r\n        else if (isDisabled)\r\n            adjustDropDownItem.disable(isDisabled);\r\n       \r\n        adjustDropDownItem.onSelected(() => {\r\n            let toggleItem = $dropDownItem.data(\"option-toggle\");\r\n            toggleItem();\r\n            this.filterInput.focus();\r\n        });\r\n        \r\n        let selectItem = (doPublishEvents) => {\r\n            if (optionElement.hidden)\r\n                return;\r\n            let $selectedItem = this.$(\"<LI/>\")\r\n            let selectedItem = $selectedItem.get(0);\r\n            \r\n            let adjustPair =(isSelected, toggle, remove) => {\r\n                optionElement.selected = isSelected;\r\n                adjustDropDownItem.select(isSelected);\r\n                $dropDownItem.data(\"option-toggle\", toggle);                    \r\n                $selectedItem.data(\"option-remove\", remove)\r\n            }\r\n\r\n            let removeItem = () => {\r\n                adjustDropDownItem.disabledStyle(false);\r\n                adjustDropDownItem.disable(optionElement.disabled);\r\n                adjustPair(\r\n                    false, \r\n                    () => {\r\n                        if (optionElement.disabled)\r\n                            return;\r\n                        selectItem(true);\r\n                    }, \r\n                    null\r\n                    )\r\n                $selectedItem.remove();\r\n                onChange();\r\n            };\r\n            \r\n            let removeItemAndCloseDropDown = () => {\r\n                removeItem();\r\n                this.closeDropDown();\r\n            };\r\n            this.adapter.CreateSelectedItemContent(\r\n                selectedItem,\r\n                optionElement,\r\n                removeItemAndCloseDropDown,\r\n                this.disabled\r\n            );\r\n            adjustPair(true, removeItem, removeItemAndCloseDropDown);\r\n            $selectedItem.insertBefore(this.filterInputItem);\r\n            if (doPublishEvents){\r\n                onChange();\r\n            }\r\n        }\r\n\r\n        $dropDownItem\r\n            .mouseover(() => this.adapter.HoverIn($dropDownItem))\r\n            .mouseout(() => this.adapter.HoverOut($dropDownItem));\r\n        \r\n        if (optionElement.selected)\r\n            selectItem(false);\r\n        else\r\n            $dropDownItem.data(\"option-toggle\",  () => { \r\n                if (optionElement.disabled)\r\n                    return;\r\n                selectItem(true);\r\n            })\r\n    }\r\n    getVisibleNodeListArray(){\r\n        return this.$(this.dropDownMenu).find('LI:not([style*=\"display: none\"]):not(:hidden)').toArray();\r\n    }\r\n    hoverInInternal(visibleNodeListArray, index){\r\n        this.hoveredDropDownIndex = index;\r\n        this.hoveredDropDownItem = visibleNodeListArray[index];\r\n        this.adapter.HoverIn(this.$(this.hoveredDropDownItem));\r\n    }\r\n    keydownArrow(down) {\r\n        let visibleNodeListArray = this.getVisibleNodeListArray();\r\n        if (visibleNodeListArray.length > 0) {\r\n            if (this.hasDropDownVisible) {\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n            let index;\r\n            if (this.hoveredDropDownItem === null) {\r\n                index = down ? 0 : visibleNodeListArray.length - 1;\r\n            }\r\n            else {\r\n                this.adapter.HoverOut(this.$(this.hoveredDropDownItem));\r\n                if (down) {\r\n                    let newIndex = this.hoveredDropDownIndex + 1;\r\n                    index = newIndex < visibleNodeListArray.length ? newIndex : 0;\r\n                } else {\r\n                    let newIndex = this.hoveredDropDownIndex - 1;\r\n                    index = newIndex >= 0 ? newIndex : visibleNodeListArray.length - 1;\r\n                }\r\n            }\r\n            this.hoverInInternal(visibleNodeListArray, index);\r\n        }\r\n    }\r\n    input(forceUpdatePosition) {\r\n        this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        this.filterDropDownMenu();\r\n\r\n        if (this.hasDropDownVisible) {\r\n            if (forceUpdatePosition) // ignore it if it is called from\r\n                this.updateDropDownPosition(forceUpdatePosition); // we need it to support case when textbox changes its place because of line break (texbox grow with each key press)\r\n            this.showDropDown();\r\n        } else {\r\n            this.hideDropDown();\r\n        }\r\n    }\r\n    Update(){\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl(this.$(this.container), $selectedPanel);\r\n    }\r\n    Dispose(){\r\n        if (this.onDispose)\r\n            this.onDispose();\r\n        \r\n        // removable handlers\r\n        this.$document.unbind(\"mouseup\", this.documentMouseup)\r\n                      .unbind(\"mouseup\", this.documentMouseup2);\r\n        \r\n        if (this.adapter !== null) {\r\n            this.adapter.Dispose()\r\n        }\r\n        if (this.popper !== null) {\r\n            this.popper.destroy()\r\n        }\r\n        \r\n        if (this.removeContainer) {\r\n            this.removeContainer();\r\n        }\r\n    }\r\n    UpdateSize(){\r\n        this.UpdateSizeImpl(this.$(this.selectedPanel));\r\n    }\r\n    UpdateDisabled(){\r\n        this.UpdateDisabledImpl(this.$(this.container), this.$(this.selectedPanel));\r\n    }\r\n    UpdateSizeImpl($selectedPanel){\r\n        if (this.adapter.UpdateSize)\r\n            this.adapter.UpdateSize($selectedPanel);\r\n    }\r\n    UpdateDisabledImpl($container, $selectedPanel){\r\n        let disabled = this.getDisabled();\r\n        if (this.disabled!==disabled){\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                this.adapter.Disable($selectedPanel);\r\n\r\n                $container.unbind(\"mousedown\", this.containerMousedown);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup);\r\n\r\n                $selectedPanel.unbind(\"click\", this.selectedPanelClick);\r\n                this.$document.unbind(\"mouseup\", this.documentMouseup2);\r\n                \r\n            } else {\r\n                this.filterInput.style.display = \"inline-block\";\r\n                this.adapter.Enable($selectedPanel);\r\n\r\n                $container.mousedown(this.containerMousedown);    // removable\r\n                this.$document.mouseup(this.documentMouseup); // removable\r\n\r\n                $selectedPanel.click(this.selectedPanelClick);     // removable\r\n                this.$document.mouseup(this.documentMouseup2); // removable\r\n            }\r\n            this.disabled=disabled;\r\n        }\r\n    }\r\n    fillContainer(container, removeContainer){\r\n        this.container=container;\r\n        this.removeContainer=removeContainer;\r\n        let $container = this.$(container);\r\n        this.selectedPanel = this.document.createElement(\"ul\");\r\n        let $selectedPanel = this.$(this.selectedPanel);\r\n        $selectedPanel.css(defSelectedPanelStyleSys);\r\n        $selectedPanel.appendTo(container);\r\n        let $filterInputItem = this.$('<LI/>');\r\n        this.filterInputItem = $filterInputItem.get(0)\r\n        $filterInputItem.appendTo(this.selectedPanel);\r\n        let $filterInput = this.$('<INPUT type=\"search\" autocomplete=\"off\">');\r\n        this.filterInput = $filterInput.get(0);\r\n        $filterInput.css(defFilterInputStyleSys);\r\n        $filterInput.appendTo(this.filterInputItem);\r\n        \r\n        let $dropDownMenu = this.$(\"<UL/>\").css({\"display\":\"none\"});\r\n        $dropDownMenu.appendTo(container);\r\n        this.dropDownMenu = $dropDownMenu.get(0);\r\n        \r\n        // prevent heavy understandable styling error\r\n        $dropDownMenu.css(defDropDownMenuStyleSys);\r\n        // create handlers\r\n        this.documentMouseup = () => {\r\n            this.skipFocusout = false;\r\n        }\r\n\r\n        this.containerMousedown = () => {\r\n            this.skipFocusout = true;\r\n        };\r\n        this.documentMouseup2 = event => {\r\n            if (!(container === event.target || this.$.contains(container, event.target))) {\r\n                this.closeDropDown();\r\n            }\r\n        }\r\n        this.selectedPanelClick = event => {\r\n            if (event.target.nodeName != \"INPUT\")\r\n                this.$(this.filterInput).val('').focus();\r\n            if (this.hasDropDownVisible && this.adapter.IsClickToOpenDropdown(event)){\r\n                this.updateDropDownPosition(true);\r\n                this.showDropDown();\r\n            }\r\n        };\r\n        this.adapter.Init({\r\n            container:$container, selectedPanel:$selectedPanel,\r\n            filterInputItem:$filterInputItem, filterInput:$filterInput,\r\n            dropDownMenu:$dropDownMenu });\r\n        return {$container, $selectedPanel, $dropDownMenu, $filterInput};\r\n    }\r\n\r\n    init($container, $selectedPanel, $dropDownMenu, $filterInput, onChange, getOptions, getDisabled) {\r\n        this.getDisabled=getDisabled;\r\n        this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n            placement: 'bottom-start',\r\n            modifiers: {\r\n                preventOverflow: {enabled:false},\r\n                hide: {enabled:false},\r\n                flip: {enabled:false}\r\n                }\r\n        });\r\n        this.adapter.UpdateIsValid($selectedPanel);\r\n        this.UpdateSizeImpl($selectedPanel);\r\n        this.UpdateDisabledImpl($container, $selectedPanel);\r\n        // some browsers (IE11) can change select value (as part of \"autocomplete\") after page is loaded but before \"ready\" event\r\n        // FYI: $(() => { ...}) is jquery ready event shortcut\r\n        this.$(() => {\r\n            let options = getOptions();\r\n            this.$.each(options,\r\n                (index, el) => {\r\n                    this.appendDropDownItem(el, onChange);\r\n                }\r\n            );\r\n            this.hasDropDownVisible = options.length > 0;\r\n            this.updateDropDownPosition(false);\r\n        });\r\n        // there was unmotivated stopPropagation call. commented out.\r\n        // $dropDownMenu.click(  event => { \r\n        //    event.stopPropagation();\r\n        // });\r\n        $dropDownMenu.mouseover(() => this.resetDropDownMenuHover());\r\n\r\n        $filterInput.focusin(() => this.adapter.FocusIn($selectedPanel))\r\n                    .focusout(() => {\r\n                            if (!this.skipFocusout)\r\n                                this.adapter.FocusOut($selectedPanel)\r\n                            });\r\n        $filterInput.on(\"keydown\", (event) => {\r\n            if ([38, 40, 13].indexOf(event.which)>=0 || (event.which == 9 && this.filterInput.value) ) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.which == 38) {\r\n                this.keydownArrow(false);\r\n            }\r\n            else if (event.which == 40) {\r\n                if (this.hoveredDropDownItem === null && this.hasDropDownVisible) {\r\n                    this.showDropDown();\r\n                }\r\n                this.keydownArrow(true);\r\n            }\r\n            else if (event.which == 9) {\r\n                if (!this.filterInput.value) {\r\n                    this.closeDropDown();\r\n                }\r\n            }\r\n            else if (event.which == 8) {\r\n                // NOTE: this will process backspace only if there are no text in the input field\r\n                // If user will find this inconvinient, we will need to calculate something like this\r\n                // this.isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                if (!this.filterInput.value)\r\n                {\r\n                    let $penult = this.$(this.selectedPanel).find(\"LI:last\").prev();\r\n                    if ($penult.length){\r\n                        let removeItem = $penult.data(\"option-remove\");\r\n                        removeItem();\r\n                    }\r\n                    this.updateDropDownPosition(false);\r\n                }\r\n            }\r\n\r\n            if ([38, 40, 13, 9].indexOf(event.which)==-1)\r\n                this.resetDropDownMenuHover();\r\n        });\r\n        $filterInput.on(\"keyup\", (event) => {\r\n            if (event.which == 13 || event.which == 9 ) {\r\n                if (this.hoveredDropDownItem) {\r\n                    let $hoveredDropDownItem = this.$(this.hoveredDropDownItem);\r\n                    let toggleItem =  $hoveredDropDownItem.data(\"option-toggle\");\r\n                    toggleItem();\r\n                    this.closeDropDown();\r\n                } else {\r\n                    let text = this.filterInput.value.trim().toLowerCase();\r\n                    let dropDownItems = this.dropDownMenu.querySelectorAll(\"LI\");\r\n                    let dropDownItem = null;\r\n                    for (let i = 0; i < dropDownItems.length; ++i) {\r\n                        let it = dropDownItems[i];\r\n                        if (it.textContent.trim().toLowerCase() == text)\r\n                        {\r\n                            dropDownItem=it;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (dropDownItem) {\r\n                        let $dropDownItem = this.$(dropDownItem);\r\n                        let option = $dropDownItem.data(\"option\");\r\n                        if (!option.selected){\r\n                            let toggle = $dropDownItem.data(\"option-toggle\");\r\n                            toggle();\r\n                        }\r\n                        this.clearFilterInput(true);\r\n                    }\r\n                }\r\n            }\r\n            else if (event.which == 27) { // escape\r\n                this.closeDropDown();\r\n            }\r\n        });\r\n        $filterInput.on('input', () => {\r\n            this.input(true);\r\n        });\r\n    }\r\n}\r\n\r\nexport default MultiSelect;\r\n","function disableButton($selectedPanel, isDisabled){\r\n    $selectedPanel.find('BUTTON').prop(\"disabled\", isDisabled);\r\n}\r\n\r\n// addClass, removeClass, css, siblings('label'), hasClass, find('BUTTON').prop(..)\r\nclass Bs4Adapter {\r\n\r\n    constructor(stylingAdapter, configuration, $){\r\n        const defaults = {\r\n            containerClass: 'dashboardcode-bsmultiselect',\r\n            dropDownMenuClass: 'dropdown-menu',\r\n            dropDownItemClass:  'px-2',\r\n            dropDownItemHoverClass: 'text-primary bg-light',\r\n            selectedPanelClass: 'form-control',\r\n            selectedItemClass: 'badge',\r\n            removeSelectedItemButtonClass: 'close',\r\n            filterInputItemClass: '',\r\n            filterInputClass: ''\r\n        }\r\n        let tmp = $.extend({}, defaults, configuration);\r\n        this.configuration = $.extend(configuration, tmp);\r\n        this.$ = $;\r\n        this.stylingAdapter = stylingAdapter;\r\n        this.bs4LabelDispose = null;\r\n        \r\n        this.createDropDownItemContent = (dropDownItem, option) => {\r\n            let $dropDownItem = $(dropDownItem);\r\n            $dropDownItem.addClass(configuration.dropDownItemClass);\r\n            let $dropDownItemContent= this.$(`<div class=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\">\r\n                <label class=\"custom-control-label\"></label>\r\n            </div>`);\r\n            $dropDownItemContent.appendTo(dropDownItem);\r\n            let $checkBox = $dropDownItemContent.find(`INPUT[type=\"checkbox\"]`);\r\n            let $checkBoxLabel = $dropDownItemContent.find(`label`);\r\n            $checkBoxLabel.text(option.text);\r\n            \r\n     \r\n            let stylingAdapter = this.stylingAdapter;\r\n            return { \r\n                select(isSelected){ $checkBox.prop('checked', isSelected); }, \r\n                disable(isDisabled){ $checkBox.prop('disabled', isDisabled); },\r\n                disabledStyle(disabledStyle){ stylingAdapter.DisabledStyle($checkBox, disabledStyle); },\r\n                onSelected(toggle) {\r\n                        $checkBox.on(\"change\", toggle)\r\n                        $dropDownItem.on(\"click\", event => {\r\n                            if (dropDownItem === event.target || $.contains(dropDownItem, event.target)) {\r\n                                toggle();\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n        this.createSelectedItemContent = (selectedItem, optionItem, removeSelectedItem, controlDisabled) => {\r\n            let $selectedItem = $(selectedItem)\r\n            let $content = this.$(`<span/>`).text(optionItem.text);\r\n            $content.appendTo($selectedItem);\r\n            if (optionItem.disabled)\r\n                this.stylingAdapter.DisableSelectedItemContent($content);\r\n            let $button = this.$('<button aria-label=\"Close\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>')\r\n                // bs 'close' class that will be added to button set the float:right, therefore it impossible to configure no-warp policy \r\n                // with .css(\"white-space\", \"nowrap\") or  .css(\"display\", \"inline-block\"); TODO: migrate to flex? \r\n                .css(\"float\", \"none\")\r\n    \r\n                // what is a problem with calling removeSelectedItem directly (not using  setTimeout(removeSelectedItem, 0)):\r\n                // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n                // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n                // because of the event's bubling process removeSelectedItem runs first. \r\n                // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n                // before we could analize is it belong to our dropdown or not.\r\n                // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n                // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n                // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n                // the situation described above: click outside dropdown on the same component.\r\n                // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target that belomgs to DOM (e.g. panel)\r\n                \r\n                .on(\"click\", () => setTimeout(removeSelectedItem, 0)) \r\n                .appendTo($selectedItem)\r\n                .prop(\"disabled\", controlDisabled)\r\n            $selectedItem.addClass(configuration.selectedItemClass);\r\n            $button.addClass(configuration.removeSelectedItemButtonClass) // bs close class set the float:right\r\n            if (this.stylingAdapter.CreateSelectedItemContent)\r\n                this.stylingAdapter.CreateSelectedItemContent($selectedItem, $button)\r\n        }\r\n    }\r\n   \r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    Init(dom){\r\n        dom.container.addClass(this.configuration.containerClass);\r\n        dom.selectedPanel.addClass(this.configuration.selectedPanelClass);\r\n        dom.dropDownMenu.addClass(this.configuration.dropDownMenuClass);\r\n        dom.filterInputItem.addClass(this.configuration.filterInputItemClass);\r\n        dom.filterInput.addClass(this.configuration.filterInputClass);\r\n        if (this.stylingAdapter.OnInit)\r\n            this.stylingAdapter.OnInit(dom)\r\n        this.bs4LabelDispose = this.HandleLabel(dom.filterInput);\r\n    }\r\n\r\n    HandleLabel($filterInput){\r\n        var label = this.configuration.label;\r\n        if (label!=null) {\r\n            var newForId = this.configuration.createInputId();\r\n            var backupForId =  label.getAttribute('for');\r\n            $filterInput.attr('id', newForId);\r\n            label.setAttribute('for',newForId);\r\n            return () => {\r\n                label.setAttribute('for',backupForId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    Dispose(){\r\n        if (this.bs4LabelDispose)\r\n            this.bs4LabelDispose();\r\n    }\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    CreateDropDownItemContent(dropDownItem, option){\r\n        return this.createDropDownItemContent(dropDownItem, option);\r\n    }\r\n\r\n    CreateSelectedItemContent(selectedItem, optionItem, removeSelectedItem, controlDisabled){\r\n        return this.createSelectedItemContent(selectedItem, optionItem, removeSelectedItem, controlDisabled);\r\n    }\r\n\r\n    // -----------------------\r\n    IsClickToOpenDropdown(event){\r\n        const target = event.target;\r\n        const nodeName = target.nodeName;\r\n        return !(nodeName == \"BUTTON\" || (nodeName == \"SPAN\" && target.parentElement.nodeName == \"BUTTON\"))\r\n    }\r\n\r\n    UpdateIsValid($selectedPanel){\r\n        if (this.configuration.getIsValid()){\r\n            $selectedPanel.addClass(\"is-valid\");\r\n        }\r\n\r\n        if (this.configuration.getIsInvalid()){\r\n            $selectedPanel.addClass(\"is-invalid\");\r\n        }\r\n    }\r\n\r\n    UpdateSize($selectedPanel){\r\n        if(this.stylingAdapter.UpdateSize)\r\n            this.stylingAdapter.UpdateSize($selectedPanel)\r\n    }\r\n\r\n    HoverIn($dropDownItem){\r\n        $dropDownItem.addClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    HoverOut($dropDownItem){\r\n        $dropDownItem.removeClass(this.configuration.dropDownItemHoverClass);\r\n    }\r\n\r\n    Enable($selectedPanel){\r\n        this.stylingAdapter.Enable($selectedPanel)\r\n        disableButton($selectedPanel, false)\r\n    }\r\n\r\n    Disable($selectedPanel){\r\n        this.stylingAdapter.Disable($selectedPanel)\r\n        disableButton($selectedPanel, true)\r\n    }\r\n\r\n    FocusIn($selectedPanel){\r\n        this.stylingAdapter.FocusIn($selectedPanel)\r\n    }\r\n\r\n    FocusOut($selectedPanel){\r\n        this.stylingAdapter.FocusOut($selectedPanel)\r\n    }\r\n}\r\n\r\nexport default Bs4Adapter;\r\n","class OptionsAdapterElement {\r\n    constructor(selectElement, configuration, $) {\r\n        var $selectElement = $(selectElement);\r\n        \r\n        configuration.getIsValid=()=>$selectElement.hasClass(\"is-valid\");\r\n        configuration.getIsInvalid=()=>$selectElement.hasClass(\"is-invalid\");\r\n\r\n        var idPart = (selectElement.id)?selectElement.id.toLowerCase():selectElement.name.toLowerCase();\r\n        var classPart = configuration.containerClass;\r\n        if (!configuration.createInputId)\r\n            configuration.createInputId=()=>`${classPart}-generated-input-${idPart}-id`;\r\n        \r\n        configuration.label=null;\r\n        let $formGroup = $selectElement.closest('.form-group');\r\n        if ($formGroup.length == 1) {\r\n            let $label = $formGroup.find(`label[for=\"${selectElement.id}\"]`);\r\n            if ($label.length>0)\r\n            {   \r\n                let label = $label.get(0);\r\n                let forId = label.getAttribute('for');\r\n                if (forId == selectElement.id) {\r\n                    configuration.label = label;\r\n                }\r\n            }   \r\n        }\r\n\r\n        this.init = (ms) => {\r\n            selectElement.style.display='none';\r\n            let container = document.createElement(\"div\");\r\n  \r\n            let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container, \r\n                ()=>container.parentNode.removeChild(container));\r\n            $container.insertAfter(selectElement);\r\n            ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n                () => {\r\n                    $selectElement.trigger('change');\r\n                    $selectElement.trigger( \"multiselect:change\" );\r\n                }, \r\n                () => $selectElement.find('OPTION'), \r\n                () => selectElement.disabled);\r\n        }\r\n    }\r\n}\r\n\r\nexport default OptionsAdapterElement;\r\n","class OptionsAdapterJson {\r\n    constructor(container, configuration) {\r\n\r\n        configuration.getIsValid=configuration.hasOwnProperty(\"getIsValid\")?configuration.getIsValid:()=>false;\r\n        configuration.getIsInvalid=configuration.hasOwnProperty(\"getIsInvalid\")?configuration.getIsInvalid:()=>false;\r\n\r\n        var idPart = container.id;\r\n        var classPart = configuration.containerClass;\r\n        if (!configuration.createInputId)\r\n            configuration.createInputId=()=>`${classPart}-generated-filter-${idPart}`;\r\n        //if (!configuration.createCheckBoxId)\r\n        //    configuration.createCheckBoxId=(option) =>`${classPart}-${idPart}-generated-checkbox-${option.value.toLowerCase()}-id`;\r\n        configuration.label=configuration.hasOwnProperty(\"label\")?configuration.label:null;\r\n        this.init = (ms) => {\r\n            let {$container, $selectedPanel, $dropDownMenu, $filterInput} = ms.fillContainer(container,\r\n                ()=> {\r\n                    while (container.firstChild) container.removeChild(container.firstChild);\r\n                });\r\n            ms.init($container, $selectedPanel, $dropDownMenu, $filterInput, \r\n                () => {\r\n                    $container.trigger( \"multiselect:change\" );\r\n                }, \r\n                () => configuration.options, \r\n                configuration.hasOwnProperty(\"getDisabled\")?configuration.getDisabled:()=>true);\r\n        }\r\n    }\r\n}\r\n\r\nexport default OptionsAdapterJson;\r\n","import $ from 'jquery'\r\nimport Bs4AdapterCss from './Bs4AdapterCss'\r\nimport Bs4AdapterJs from './Bs4AdapterJs'\r\nimport MultiSelect from './MultiSelect'\r\nimport AddToJQueryPrototype from './AddToJQueryPrototype'\r\nimport Bs4Adapter from './Bs4Adapter';\r\nimport OptionsAdapterElement from './OptionsAdapterElement';\r\nimport OptionsAdapterJson from './OptionsAdapterJson';\r\n\r\n(\r\n    (window, $) => {\r\n        AddToJQueryPrototype('BsMultiSelect',\r\n            (element, configuration, onDispose) => {\r\n                let optionsAdapter = null;\r\n                configuration= $.extend({}, configuration);\r\n                                 \r\n                if (configuration.buildConfiguration)\r\n                    configuration.buildConfiguration(element, configuration);\r\n\r\n                if (configuration.optionsAdapter)\r\n                    optionsAdapter = configuration.optionsAdapter;\r\n                else\r\n                {\r\n                    optionsAdapter = configuration.options\r\n                        ? new OptionsAdapterJson(element, configuration)\r\n                        : new OptionsAdapterElement(element, configuration, $);\r\n                }\r\n\r\n                let adapter=null;\r\n                if (configuration.adapter)\r\n                    adapter = configuration.adapter;\r\n                else\r\n                {\r\n                    let stylingAdapter = configuration.useCss\r\n                        ? new Bs4AdapterCss(configuration, $)\r\n                        : new Bs4AdapterJs(configuration, $);\r\n                    adapter = new Bs4Adapter(stylingAdapter, configuration, $);\r\n                }\r\n\r\n                let multiSelect = new MultiSelect(optionsAdapter, adapter, configuration, onDispose, window, $);\r\n                return multiSelect;\r\n            }, $);\r\n    }\r\n)(window, $)\r\n","function AddToJQueryPrototype(pluginName, createPlugin, $){\r\n    const firstChar = pluginName.charAt(0);\r\n    const firstCharLower = firstChar.toLowerCase();\r\n    if (firstCharLower == firstChar) {\r\n        throw new TypeError(`Plugin name '${pluginName}' should be started from upper case char`)\r\n    }\r\n    const prototypableName = firstCharLower + pluginName.slice(1)\r\n    const noConflictPrototypable = $.fn[prototypableName];\r\n    const dataKey = `DashboardCode.${pluginName}`;\r\n\r\n    function prototypable(options) {\r\n        return this.each( function () {\r\n            let $e = $(this);\r\n            let instance = $e.data(dataKey)\r\n            let isMethodName = typeof options === 'string';\r\n            if (!instance) {\r\n                if (isMethodName && /Dispose/.test(options)) {\r\n                    return;\r\n                }\r\n                const optionsObject = (typeof options === 'object')?options:null;\r\n\r\n                instance = createPlugin(this, optionsObject,\r\n                    () => {\r\n                        $e.removeData(dataKey)\r\n                    });\r\n                $e.data(dataKey, instance);\r\n            }\r\n\r\n            if (isMethodName) {\r\n                let methodName = options;\r\n                if (typeof instance[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named '${methodName}'`)\r\n                }\r\n                instance[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[prototypableName] = prototypable;\r\n\r\n    // pluginName with first capitalized letter - return plugin instance for 1st $selected item\r\n    $.fn[pluginName] = function () {\r\n        return $(this).data(dataKey);\r\n    };\r\n\r\n    $.fn[prototypableName].noConflict = function () {\r\n        $.fn[prototypableName] = noConflictPrototypable\r\n        return prototypable;\r\n    }\r\n}\r\n\r\nexport default AddToJQueryPrototype\r\n"]}